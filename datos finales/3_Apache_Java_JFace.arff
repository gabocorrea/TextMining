% lines 11-1633 are apache, lines 1634-4003 are Java, lines 4003-5913 are JFace. (ver libro1.xlsx)
% 2 clases
% non-directive and semi-directive instances were taken as directive class

@RELATION "3_Apache_Java_JFace.arff"

@ATTRIBUTE text string
@ATTRIBUTE comment__class {directive,non-directive}

@DATA
" Create an {@link IndexedCollection} for a unique index.\n\n ",non-directive
"@param <K> the index object type.\n ",non-directive
"@param <C> the collection type.\n ",non-directive
"@param coll the decorated {@link Collection}.\n ",non-directive
"@param keyTransformer the {@link Transformer} for generating index keys.\n ",non-directive
"@return the created {@link IndexedCollection}.\n",non-directive
" Get the element associated with the given key.\n ",non-directive
"@param key to look up\n ",non-directive
"@return element found\n",non-directive
" Create a {@link IndexedCollection} for a unique index.\n\n ",non-directive
"@param coll the decorated {@link Collection}.\n ",non-directive
"@param keyTransformer the {@link Transformer} for generating index keys.\n",non-directive
" Returns the sum of the given lists.  ",non-directive
"This is their intersection\n subtracted from their union.\n\n ",non-directive
"@param list1  the first list \n ",non-directive
"@param list2  the second list\n ",non-directive
"@return  a new list containing the sum of those lists\n ",non-directive
" Returns a new list containing the second list appended to the\n first list.  ",non-directive
"The {@link List#addAll(Collection)} operation is\n used to append the two given lists into a new list.\n\n ",non-directive
"@param list1  the first list \n ",non-directive
"@param list2  the second list\n ",non-directive
"@return  a new list containing the union of those lists\n ",non-directive
" Generates a hash code using the algorithm specified in \n {@link java.util.List#hashCode()}.\n ",non-directive
"<p>\n This method is useful for implementing <code>List</code> when you cannot\n extend AbstractList. ",directive
"The method takes Collection instances to enable other\n collection types to use the List implementation algorithm.\n \n",non-directive
"@see java.util.List#hashCode()\n ",non-directive
"@param list  the list to generate the hashCode for, may be null\n ",non-directive
"@return the hash code\n",non-directive
" Finds the first index in the given List which matches the given predicate.\n ",non-directive
"<p>\n If the input List or predicate is null, or no element of the List\n matches the predicate, -1 is returned.\n\n ",non-directive
"@param list the List to search, may be null\n ",non-directive
"@param predicate  the predicate to use, may be null\n ",non-directive
"@return the first index of an Object in the List which matches the predicate or -1 if none could be found\n",non-directive
" Interpolate key names to handle ${key} stuff\n\n ",non-directive
"@param base string to interpolate\n ",non-directive
"@return returns the key name with the ${key} substituted\n",non-directive
" Sets the property value for including other properties files.\n ",non-directive
"By default it is \"include\".\n\n ",directive
"@param inc  the property name which includes another property, empty converted to null\n",non-directive
" Add a property to the configuration. ",non-directive
"If it already\n exists then the value stated here will be added\n to the configuration entry. ",directive
"For example, if\n\n <code>resource.loader = file</code>\n\n is already present in the configuration and you\n\n <code>addProperty(\"resource.loader\", \"classpath\")</code>\n\n Then you will end up with a Vector like the\n following:\n\n <code>[\"file\", \"classpath\"]</code>\n\n ",non-directive
"@param key  the key to add\n ",non-directive
"@param value  the value to add\n",non-directive
" Combines an existing Hashtable with this Hashtable.\n ",non-directive
"<p>\n Warning: It will overwrite previous entries without warning.\n\n ",directive
"@param props  the properties to combine\n",non-directive
" Get the list of the keys contained in the configuration\n repository that match the specified prefix.\n\n ",non-directive
"@param prefix  the prefix to match\n ",non-directive
"@return an Iterator of keys that match the prefix\n",non-directive
" Create an ExtendedProperties object that is a subset\n of this one. ",non-directive
"Take into account duplicate keys\n by using the setProperty() in ExtendedProperties.\n\n ",directive
"@param prefix  the prefix to get a subset for\n ",non-directive
"@return a new independent ExtendedProperties\n",non-directive
" Get a string associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated string.\n ",non-directive
" Get a list of properties associated with the given\n configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated properties if key is found.\n ",non-directive
" Get a list of properties associated with the given\n configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated properties if key is found.\n ",non-directive
" Get an array of strings associated with the given configuration\n key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated string array if key is found.\n ",non-directive
" Get a Vector of strings associated with the given configuration key.\n ",non-directive
"<p>\n The list is a copy of the internal data of this object, and as\n such you may alter it freely.\n\n ",directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated Vector.\n ",non-directive
" Get a List of strings associated with the given configuration key.\n ",non-directive
"<p>\n The list is a copy of the internal data of this object, and as\n such you may alter it freely.\n\n ",directive
"@param key The configuration key.\n ",non-directive
"@return The associated List object.\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Get a List of strings associated with the given configuration key.\n ",non-directive
"<p>\n The list is a copy of the internal data of this object, and as\n such you may alter it freely.\n\n ",directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated List.\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Get a boolean associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated boolean.\n ",non-directive
" Get a boolean associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated boolean.\n ",non-directive
" Get a boolean associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated boolean if key is found and has valid\n format, default value otherwise.\n ",non-directive
" Get a byte associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated byte.\n ",non-directive
" Get a byte associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated byte if key is found and has valid\n format, default value otherwise.\n ",non-directive
" Get a short associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated short.\n ",non-directive
" Get a short associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated short.\n ",non-directive
" Get a short associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated short if key is found and has valid\n format, default value otherwise.\n ",non-directive
" The purpose of this method is to get the configuration resource\n with the given name as an integer, or a default value.\n\n ",non-directive
"@param name The resource name\n ",non-directive
"@param def The default value of the resource.\n ",non-directive
"@return The value of the resource as an integer.\n",non-directive
" Get a int associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated int.\n ",non-directive
" Get a int associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated int.\n ",non-directive
" Get a int associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated int if key is found and has valid\n format, default value otherwise.\n ",non-directive
" Get a long associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated long.\n ",non-directive
" Get a long associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated long.\n ",non-directive
" Get a long associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated long if key is found and has valid\n format, default value otherwise.\n ",non-directive
" Get a float associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated float.\n ",non-directive
" Get a float associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated float.\n ",non-directive
" Get a float associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated float if key is found and has valid\n format, default value otherwise.\n ",non-directive
" Get a double associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@return The associated double.\n ",non-directive
" Get a double associated with the given configuration key.\n\n ",non-directive
"@param key The configuration key.\n ",non-directive
"@param defaultValue The default value.\n ",non-directive
"@return The associated double.\n ",non-directive
" Convert a standard properties class into a configuration class.\n ",non-directive
"<p>\n NOTE: From Commons Collections 3.2 this method will pick up\n any default parent Properties of the specified input object.\n ",directive
"<p>\n As with java.util.Properties(Properties), any non-String \n values will not be passed on in the new ExtendedProperties \n object.\n\n ",directive
"@param props  the properties object to convert\n ",non-directive
"@return new ExtendedProperties created from props\n",non-directive
" Remove the property specified by the key from the \n ExtendedProperties.\n\n ",non-directive
"@param key specifying the property\n ",non-directive
"@return old value of the property\n",non-directive
" Returns <code>true</code> iff\n I sort <code>true</code> values before \n <code>false</code> values.  ",non-directive
"In other words,\n returns <code>true</code> iff\n {@link #compare(Boolean,Boolean) compare(Boolean.FALSE,Boolean.TRUE)}\n returns a positive value.\n \n",non-directive
"@return the trueFirst flag\n",non-directive
" Creates a <code>BooleanComparator</code> that sorts\n <code>false</code> values before <code>true</code> values.\n ",non-directive
"<p>\n Equivalent to {@link #BooleanComparator(boolean) BooleanComparator(false)}.\n ",non-directive
"<p>\n Please use the static factory instead whenever possible.\n",directive
" Returns the result of comparing the values from the transform operation.\n \n",non-directive
"@param obj1  the first object to transform then compare\n ",non-directive
"@param obj2  the second object to transform then compare\n ",non-directive
"@return negative if obj1 is less, positive if greater, zero if equal\n",non-directive
" Constructs an instance with the given Transformer and Comparator.\n \n",non-directive
"@param transformer  what will transform the arguments to <code>compare</code>\n ",non-directive
"@param decorated  the decorated Comparator\n",non-directive
" Compares two objects in reverse order.\n \n",non-directive
"@param obj1  the first object to compare\n ",non-directive
"@param obj2  the second object to compare\n ",non-directive
"@return negative if obj1 is less, positive if greater, zero if equal\n",non-directive
" Implement a hash code for this comparator that is consistent with\n {@link #equals(Object) equals}.\n \n",non-directive
"@return a suitable hash code\n ",non-directive
"@since Commons Collections 3.0\n",non-directive
" Creates a comparator that inverts the comparison\n of the given comparator.  ",non-directive
"If you pass in <code>null</code>,\n the ReverseComparator defaults to reversing the\n natural order, as per \n {@link java.util.Collections#reverseOrder()}</b>.\n \n",non-directive
"@param comparator Comparator to reverse\n",non-directive
"  Perform a comparison between two objects.  ",non-directive
"If both objects are\n  <code>null</code>, a <code>0</code> value is returned.  ",non-directive
"If one object\n  is <code>null</code> and the other is not, the result is determined on\n  whether the Comparator was constructed to have nulls as higher or lower\n  than other objects.  ",non-directive
"If neither object is <code>null</code>, an\n  underlying comparator specified in the constructor (or the default) is\n  used to compare the non-<code>null</code> objects.\n\n  ",non-directive
"@param o1  the first object to compare\n  ",non-directive
"@param o2  the object to compare it to.\n  ",non-directive
"@return <code>-1</code> if <code>o1</code> is \"lower\" than (less than,\n  before, etc.) <code>o2</code>; <code>1</code> if <code>o1</code> is\n  \"higher\" than (greater than, after, etc.) <code>o2</code>; or\n  <code>0</code> if <code>o1</code> and <code>o2</code> are equal.\n",non-directive
"  Construct an instance that sorts <code>null</code> higher than any\n  non-<code>null</code> object it is compared with.  ",non-directive
"When comparing two\n  non-<code>null</code> objects, the specified {@link Comparator} is\n  used.\n\n  ",directive
"@param nonNullComparator the comparator to use when comparing two\n  non-<code>null</code> objects.  ",non-directive
"This argument cannot be\n  <code>null</code>\n\n  ",non-directive
"  Construct an instance that sorts <code>null</code> higher or lower than\n  any non-<code>null</code> object it is compared with.  ",non-directive
"When comparing\n  two non-<code>null</code> objects, the {@link ComparableComparator} is\n  used.\n\n  ",directive
"@param nullsAreHigh a <code>true</code> value indicates that\n  <code>null</code> should be compared as higher than a\n  non-<code>null</code> object.  ",non-directive
"A <code>false</code> value indicates\n  that <code>null</code> should be compared as lower than a\n  non-<code>null</code> object.\n",non-directive
"  Construct an instance that sorts <code>null</code> higher or lower than\n  any non-<code>null</code> object it is compared with.  ",non-directive
"When comparing\n  two non-<code>null</code> objects, the specified {@link Comparator} is\n  used.\n\n  ",directive
"@param nonNullComparator the comparator to use when comparing two\n  non-<code>null</code> objects. ",non-directive
"This argument cannot be\n  <code>null</code>\n\n  ",non-directive
"@param nullsAreHigh a <code>true</code> value indicates that\n  <code>null</code> should be compared as higher than a\n  non-<code>null</code> object.  ",non-directive
"A <code>false</code> value indicates\n  that <code>null</code> should be compared as lower than a\n  non-<code>null</code> object.\n\n  ",non-directive
" Compare the two {@link Comparable Comparable} arguments.\n ",non-directive
"This method is equivalent to:\n <pre>((Comparable)obj1).compareTo(obj2)</pre>\n \n ",directive
"@param obj1  the first object to compare\n ",non-directive
"@param obj2  the second object to compare\n ",non-directive
"@return negative if obj1 is less, positive if greater, zero if equal\n ",non-directive
" Implement a hash code for this comparator that is consistent with\n {@link #equals(Object) equals}.\n\n ",non-directive
"@return a hash code for this comparator.\n ",non-directive
"@since Commons Collections 3.0\n",non-directive
" Adds a new item, which compares as equal to the given existing item.\n\n ",non-directive
"@param existingObj  an item already in the Comparator's set of\n  known objects\n ",non-directive
"@param newObj  an item to be added to the Comparator's set of\n  known objects\n ",non-directive
"@return true if newObj has been added for the first time, false if\n  it was already known to the Comparator.\n ",non-directive
" Constructs a FixedOrderComparator which uses the order of the given list\n to compare the objects.\n ",non-directive
"<p>\n The list is copied, so later changes will not affect the comparator.\n\n ",directive
"@param items  the items that the comparator can compare in order\n ",non-directive
" Add a Comparator to the end of the chain using the\n given sort order\n\n ",non-directive
"@param comparator Comparator to add to the end of the chain\n ",non-directive
"@param reverse    false = forward sort order; true = reverse sort order\n",non-directive
" Replace the Comparator at the given index, maintaining\n the existing sort order.\n\n ",non-directive
"@param index      index of the Comparator to replace\n ",non-directive
"@param comparator Comparator to place at the given index\n ",non-directive
" Replace the Comparator at the given index in the\n ComparatorChain, using the given sort order\n\n ",non-directive
"@param index      index of the Comparator to replace\n ",non-directive
"@param comparator Comparator to set\n ",non-directive
"@param reverse    false = forward sort order; true = reverse sort order\n",non-directive
" Construct a Comparator chain with a single Comparator,\n sorting in the given order\n\n ",non-directive
"@param comparator First Comparator in the ComparatorChain\n ",non-directive
"@param reverse    false = forward sort; true = reverse sort\n",non-directive
" Construct a ComparatorChain from the Comparators in the\n List.  ",non-directive
"All Comparators will default to the forward\n sort order.\n\n ",directive
"@param list   List of Comparators\n ",non-directive
"@see #ComparatorChain(List,BitSet)\n",non-directive
" Construct a ComparatorChain from the Comparators in the\n given List.  ",non-directive
"The sort order of each column will be\n drawn from the given BitSet.  ",non-directive
"When determining the sort\n order for Comparator at index <i>i</i> in the List,\n the ComparatorChain will call BitSet.get(<i>i</i>).\n ",directive
"If that method returns <i>false</i>, the forward\n sort order is used; a return value of <i>true</i>\n indicates reverse sort order.\n\n ",non-directive
"@param list   List of Comparators.  ",non-directive
"NOTE: This constructor does not perform a\n               defensive copy of the list\n ",directive
"@param bits   Sort order for each Comparator.  ",non-directive
"Extra bits are ignored,\n               unless extra Comparators are added by another method.\n",directive
" Gets a sublist of the main list.\n\n ",non-directive
"@param fromIndexInclusive  the index to start from\n ",non-directive
"@param toIndexExclusive  the index to end at\n ",non-directive
"@return the new sublist\n",non-directive
" Gets the node at a particular index.\n\n ",non-directive
"@param index  the index, starting from 0\n ",non-directive
"@param endMarkerAllowed  whether or not the end marker can be returned if\n startIndex is set to the list's size\n ",non-directive
" Creates a list iterator for the sublist.\n\n ",non-directive
"@param subList  the sublist to get an iterator for\n ",non-directive
"@param fromIndex  the index to start from, relative to the sublist\n",non-directive
" Gets the value of the node.\n\n ",non-directive
"@return the value\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Sets the value of the node.\n\n ",non-directive
"@param value  the value\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the previous node.\n\n ",non-directive
"@return the previous node\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Sets the previous node.\n\n ",non-directive
"@param previous  the previous node\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Sets the next node.\n\n ",non-directive
"@param next  the next node\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Create a ListIterator for a list.\n\n ",non-directive
"@param parent  the parent list\n ",non-directive
"@param fromIndex  the index to start at\n",non-directive
" Adds an element to a specific index in the list if it is not already present.\n ",non-directive
"<p>\n <i>(Violation)</i>\n The <code>List</code> interface makes the assumption that the element is\n always inserted. ",directive
"This may not happen with this implementation.\n\n ",directive
"@param index  the index to insert at\n ",non-directive
"@param object  the object to add\n",non-directive
" Adds a collection of objects to the end of the list avoiding duplicates.\n ",non-directive
"<p>\n Only elements that are not already in this list will be added, and\n duplicates from the specified collection will be ignored.\n ",directive
"<p>\n <i>(Violation)</i>\n The <code>List</code> interface makes the assumption that the elements\n are always inserted. ",directive
"This may not happen with this implementation.\n\n ",directive
"@param coll  the collection to add in iterator order\n ",non-directive
"@return true if this collection changed\n",non-directive
" Sets the value at the specified index avoiding duplicates.\n ",non-directive
"<p>\n The object is set into the specified index.\n ",non-directive
"Afterwards, any previous duplicate is removed\n If the object is not already in the list then a normal set occurs.\n ",directive
"If it is present, then the old version is removed.\n\n ",directive
"@param index  the index to insert at\n ",non-directive
"@param object  the object to set\n ",non-directive
"@return the previous object\n",non-directive
" Gets the element at the specified index.\n\n ",non-directive
"@param index  the index to retrieve\n ",non-directive
"@return the element at the specified index\n",non-directive
" Gets a ListIterator over the list.\n\n ",non-directive
"@param fromIndex  the index to start from\n ",non-directive
"@return the new iterator\n",non-directive
" Adds a new element to the list.\n\n ",non-directive
"@param index  the index to add before\n ",non-directive
"@param obj  the element to add\n",non-directive
" Sets the element at the specified index.\n\n ",non-directive
"@param index  the index to set\n ",non-directive
"@param obj  the object to store at the specified index\n ",non-directive
"@return the previous object at that index\n ",non-directive
" Removes the element at the specified index.\n\n ",non-directive
"@param index  the index to remove\n ",non-directive
"@return the previous object at that index\n",non-directive
" Decorate the add method to perform the growth behaviour.\n ",non-directive
"<p>\n If the requested index is greater than the current size, the list will\n grow to the new size. ",directive
"Indices between the old size and the requested\n size will be filled with <code>null</code>.\n ",directive
"<p>\n If the index is less than the current size, the value will be added to\n the underlying list directly.\n ",directive
"If the index is less than zero, the underlying list is called, which\n will probably throw an IndexOutOfBoundsException.\n\n ",directive
"@param index  the index to add at\n ",non-directive
"@param element  the object to add at the specified index\n ",non-directive
" Decorate the addAll method to perform the growth behaviour.\n ",non-directive
"<p>\n If the requested index is greater than the current size, the list will\n grow to the new size. ",directive
"Indices between the old size and the requested\n size will be filled with <code>null</code>.\n ",directive
"<p>\n If the index is less than the current size, the values will be added to\n the underlying list directly.\n ",directive
"If the index is less than zero, the underlying list is called, which\n will probably throw an IndexOutOfBoundsException.\n\n ",directive
"@param index  the index to add at\n ",non-directive
"@param coll  the collection to add at the specified index\n ",non-directive
"@return true if the list changed\n ",non-directive
" Decorate the set method to perform the growth behaviour.\n ",non-directive
"<p>\n If the requested index is greater than the current size, the list will\n grow to the new size. ",directive
"Indices between the old size and the requested\n size will be filled with <code>null</code>.\n ",directive
"<p>\n If the index is less than the current size, the value will be set onto\n the underlying list directly.\n ",directive
"If the index is less than zero, the underlying list is called, which\n will probably throw an IndexOutOfBoundsException.\n\n ",directive
"@param index  the index to set\n ",non-directive
"@param element  the object to set at the specified index\n ",non-directive
"@return the object previously at that index\n ",non-directive
" Creates a list iterator for the sublist.\n \n",non-directive
"@param subList  the sublist to get an iterator for\n ",non-directive
"@param fromIndex  the index to start from, relative to the sublist\n",non-directive
" Adds an object to the list.\n ",non-directive
"The object added here will be the new 'previous' in the iterator.\n \n",directive
"@param obj  the object to add\n",non-directive
" Adds a node to the cache, if the cache isn't full.\n ",non-directive
"The node's contents are cleared to so they can be garbage collected.\n \n",directive
"@param node  the node to add to the cache\n",non-directive
" Decorate the get method to perform the lazy behaviour.\n ",non-directive
"<p>\n If the requested index is greater than the current size, the list will \n grow to the new size and a new object will be returned from the factory.\n ",directive
"Indexes in-between the old size and the requested size are left with a \n placeholder that is replaced with a factory object when requested.\n \n",directive
"@param index  the index to retrieve\n",non-directive
" Factory to create the transformer.\n ",non-directive
"<p>\n If the map is null, a transformer that always returns null is returned.\n\n ",non-directive
"@param map the map, not cloned\n ",non-directive
"@return the transformer\n",non-directive
" Transforms the input to result by looking it up in a <code>Map</code>.\n\n ",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result\n",non-directive
" Gets the map to lookup in.\n\n ",non-directive
"@return the map\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Factory method that performs validation.\n \n",non-directive
"@param factory  the factory to call, not null\n ",non-directive
"@return the <code>factory</code> transformer\n ",non-directive
" Transforms the input by ignoring the input and returning the result of\n calling the decorated factory.\n \n",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result\n",non-directive
" Gets the factory.\n \n",non-directive
"@return the factory\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",non-directive
"Use <code>getInstance</code> if you want that.\n \n",non-directive
"@param factory  the factory to call, not null\n",non-directive
" Constructor that performs no validation.\n ",non-directive
"Use <code>getInstance</code> if you want that.\n \n",non-directive
"@param classToInstantiate  the class to instantiate\n",non-directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Evaluates the predicate returning true if the input object hasn't been\n received yet.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return true if this is the first time the object is seen\n",non-directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n ",non-directive
"@deprecated\n",directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Evaluates the predicate returning true always.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return true always\n",non-directive
" Factory to create the predicate.\n ",non-directive
"<p>\n If the collection is size zero, the predicate always returns true.\n\n ",directive
"@param predicates  the predicates to check, cloned, not null\n ",non-directive
"@return the <code>one</code> predicate\n ",non-directive
" Gets the predicates, do not modify the array.\n\n ",non-directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param predicates  the predicates to check, not cloned, not null\n",non-directive
" Gets the transformer.\n \n",non-directive
"@return the transformer\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",non-directive
"Use <code>getInstance</code> if you want that.\n \n",non-directive
"@param transformer  the transformer to call, not null\n",directive
" Gets the predicates, do not modify the array.\n\n ",non-directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the closures, do not modify the array.\n\n ",non-directive
"@return the closures\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the default closure.\n\n ",non-directive
"@return the default closure\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Factory method that performs validation.\n \n",non-directive
"@param closure1  the first closure, not null\n ",non-directive
"@param closure2  the second closure, not null\n ",non-directive
"@return the <code>chained</code> closure\n ",non-directive
" Factory to create the predicate.\n\n ",non-directive
"@param predicate1  the first predicate to check, not null\n ",non-directive
"@param predicate2  the second predicate to check, not null\n ",non-directive
"@return the <code>and</code> predicate\n ",non-directive
" Gets the two predicates being decorated as an array.\n\n ",non-directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param predicate1  the first predicate to check, not null\n ",non-directive
"@param predicate2  the second predicate to check, not null\n",non-directive
" Factory method that performs validation.\n \n",non-directive
"@param closure  the closure to call, not null\n ",non-directive
"@return the <code>closure</code> transformer\n ",non-directive
" Transforms the input to result by executing a closure.\n \n",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result\n",non-directive
" Gets the closure.\n \n",non-directive
"@return the closure\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Factory to create the identity predicate.\n \n",non-directive
"@param object  the object to compare to\n ",non-directive
"@return the predicate\n ",non-directive
"@deprecated use {@link #equalPredicate(Object)} instead.\n",non-directive
" Factory to create the identity predicate.\n \n",non-directive
"@param object  the object to compare to\n ",non-directive
"@return the predicate\n ",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param object  the object to compare to\n",non-directive
" Factory to create the null false predicate.\n\n ",non-directive
"@param predicate  the predicate to decorate, not null\n ",non-directive
"@return the predicate\n ",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param predicate  the predicate to call after the null check\n",non-directive
" Factory to create the predicate.\n\n ",non-directive
"@param transformer  the transformer to decorate\n ",non-directive
"@return the predicate\n ",non-directive
" Gets the transformer.\n\n ",non-directive
"@return the transformer\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param transformer  the transformer to decorate\n",non-directive
" Factory returning the singleton instance.\n \n",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets an instance of this transformer calling a specific method with specific values.\n \n",non-directive
"@param methodName  the method name to call\n ",non-directive
"@param paramTypes  the parameter types of the method\n ",non-directive
"@param args  the arguments to pass to the method\n ",non-directive
"@return an invoker transformer\n",non-directive
" Factory to create the identity predicate.\n\n ",non-directive
"@param type  the type to check for, may not be null\n ",non-directive
"@return the predicate\n ",non-directive
" Evaluates the predicate returning true if the input object is of the correct type.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return true if input is of stored type\n",non-directive
" Evaluates the predicate returning the result of the decorated predicate\n once the input has been transformed\n\n ",non-directive
"@param object  the input object which will be transformed\n ",non-directive
"@return true if decorated predicate returns true\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param transformer  the transformer to use\n ",non-directive
"@param predicate  the predicate to decorate\n",non-directive
" Factory to create the predicate.\n ",non-directive
"<p>\n If the array is size zero, the predicate always returns false.\n ",directive
"If the array is size one, then that predicate is returned.\n\n ",directive
"@param predicates  the predicates to check, cloned, not null\n ",non-directive
"@return the <code>any</code> predicate\n ",non-directive
" Factory to create the predicate.\n ",non-directive
"<p>\n If the collection is size zero, the predicate always returns false.\n ",directive
"If the collection is size one, then that predicate is returned.\n\n ",directive
"@param predicates  the predicates to check, cloned, not null\n ",non-directive
"@return the <code>all</code> predicate\n ",non-directive
" Evaluates the predicate returning true if any predicate returns true.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return true if any decorated predicate return true\n",non-directive
" Gets the predicates, do not modify the array.\n\n ",directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param predicates  the predicates to check, not cloned, not null\n",non-directive
" Factory method that performs validation.\n \n",non-directive
"@param predicate  predicate to switch on\n ",non-directive
"@param trueClosure  closure used if true\n ",non-directive
"@param falseClosure  closure used if false\n ",non-directive
"@return the <code>if</code> closure\n ",non-directive
" Gets the predicate.\n \n",non-directive
"@return the predicate\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the closure called when true.\n \n",non-directive
"@return the closure\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the closure called when false.\n \n",non-directive
"@return the closure\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n ",directive
"<p>\n This constructor creates a closure that performs no action when\n the predicate is false.\n \n",non-directive
"@param predicate  predicate to switch on, not null\n ",non-directive
"@param trueClosure  closure used if true, not null\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Factory to create the identity predicate.\n\n ",non-directive
"@param object  the object to compare to\n ",non-directive
"@return the predicate\n ",non-directive
" Gets the value.\n\n ",non-directive
"@return the value\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param object  the object to compare to\n",non-directive
" Transforms the input to result by doing nothing.\n\n ",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result which is the input\n",non-directive
" Factory method that performs validation.\n ",non-directive
"<p>\n A null closure or zero count returns the <code>NOPClosure</code>.\n ",non-directive
"A count of one returns the specified closure.\n \n",non-directive
"@param count  the number of times to execute the closure\n ",non-directive
"@param closure  the closure to execute, not null\n ",non-directive
"@return the <code>for</code> closure\n",non-directive
" Gets the closure.\n \n",non-directive
"@return the closure\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param count  the number of times to execute the closure\n ",non-directive
"@param closure  the closure to execute, not null\n",non-directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Factory to create the predicate.\n ",non-directive
"<p>\n If the collection is size zero, the predicate always returns true.\n ",non-directive
"If the collection is size one, then that predicate is returned.\n\n ",non-directive
"@param predicates  the predicates to check, cloned, not null\n ",non-directive
"@return the <code>all</code> predicate\n ",non-directive
" Evaluates the predicate returning true if all predicates return true.\n \n",non-directive
"@param object  the input object\n ",non-directive
"@return true if all decorated predicates return true\n",non-directive
" Gets the predicates, do not modify the array.\n \n",non-directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param predicates  the predicates to check, not cloned, not null\n",non-directive
" Transforms the input to result by calling a predicate.\n \n",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result\n",non-directive
" Gets the predicate.\n \n",non-directive
"@return the predicate\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param predicate  the predicate to call, not null\n",non-directive
" Factory returning the singleton instance.\n \n",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Transforms the input to result by cloning it.\n \n",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result\n",non-directive
" Get a typed null instance.\n ",non-directive
"@param <I>\n ",non-directive
"@param <O>\n ",non-directive
"@return Transformer<I, O> that always returns null.\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param constantToReturn  the constant to return each time\n",non-directive
" Gets the transformers, do not modify the array.\n \n",directive
"@return the transformers\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the default transformer.\n \n",non-directive
"@return the default transformer\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Get a typed instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n ",non-directive
"@deprecated use {@link #falsePredicate()} instead.\n",directive
" Get a typed instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 5\n",non-directive
" Evaluates the predicate returning false always.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return false always\n",non-directive
" Get a typed no-arg instance.\n ",non-directive
"@param <T>\n ",non-directive
"@return Transformer<Class<? extends T>, T>\n",non-directive
" Transforms the input Class object to a result by instantiation.\n\n ",non-directive
"@param input  the input object to transform\n ",non-directive
"@return the transformed result\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param paramTypes  the constructor parameter types, not cloned\n ",directive
"@param args  the constructor arguments, not cloned\n",directive
" Evaluates the predicate returning true if the object does not equal null.\n\n ",non-directive
"@param object  the object to evaluate\n ",non-directive
"@return true if not null\n",non-directive
" Factory to create the not predicate.\n \n",non-directive
"@param predicate  the predicate to decorate, not null\n ",non-directive
"@return the predicate\n ",non-directive
" Evaluates the predicate returning the opposite to the stored predicate.\n \n",non-directive
"@param object  the input object\n ",non-directive
"@return true if predicate returns false\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param predicate  the predicate to call after the null check\n",non-directive
" Gets the predicate in use.\n \n",non-directive
"@return the predicate\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the closure.\n \n",non-directive
"@return the closure\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Is the loop a do-while loop.\n \n",non-directive
"@return true is do-while, false if while\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Create a new Transformer that calls each transformer in turn, passing the \n result into the next transformer. ",non-directive
"The ordering is that of the iterator()\n method on the collection.\n \n",directive
"@param transformers  a collection of transformers to chain\n ",non-directive
"@return the <code>chained</code> transformer\n ",non-directive
" Factory method that performs validation.\n \n",non-directive
"@param transformer1  the first transformer, not null\n ",non-directive
"@param transformer2  the second transformer, not null\n ",non-directive
"@return the <code>chained</code> transformer\n ",non-directive
" Transforms the input to result via each decorated transformer\n \n ",non-directive
"@param object  the input object passed to the first transformer\n ",non-directive
"@return the transformed result\n",non-directive
" Gets the transformers, do not modify the array.\n ",non-directive
"@return the transformers\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Factory to create the predicate.\n\n ",non-directive
"@param predicates  the predicates to check, cloned, not null\n ",non-directive
"@return the <code>one</code> predicate\n ",non-directive
" Evaluates the predicate returning true if only one decorated predicate\n returns true.\n \n",non-directive
"@param object  the input object\n ",non-directive
"@return true if only one decorated predicate returns true\n",non-directive
" Gets the predicates, do not modify the array.\n \n",non-directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param predicates  the predicates to check, not cloned, not null\n",non-directive
" Evaluates the two arguments for their equality.\n \n",non-directive
"@param o1 the first object to be equated.\n ",non-directive
"@param o2 the second object to be equated.\n ",non-directive
"@return whether the two objects are equal.\n",non-directive
" Calculates the hash for the object, based on the method of equality used in the equate\n method. ",non-directive
"This is used for classes that delegate their {@link #equals(Object)} method to an\n Equator (and so must also delegate their {@link #hashCode()} method), or for implementations\n of {@link HashedMap} that use an Equator for the key objects.\n \n",directive
"@param o the object to calculate the hash for.\n ",non-directive
"@return the hash of the object.\n",non-directive
" Factory to create the null true predicate.\n \n",non-directive
"@param predicate  the predicate to decorate, not null\n ",non-directive
"@return the predicate\n ",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param predicate  the predicate to call after the null check\n",non-directive
" Factory to create the null exception predicate.\n \n",non-directive
"@param predicate  the predicate to decorate, not null\n ",non-directive
"@return the predicate\n ",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param predicate  the predicate to call after the null check\n",non-directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Factory method that performs validation.\n\n ",non-directive
"@param constantToReturn  the constant object to return each time in the factory\n ",non-directive
"@return the <code>constant</code> factory.\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n \n",directive
"@param constantToReturn  the constant to return each time\n",non-directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n ",non-directive
"@deprecated use {@link #nullPredicate()} instead.\n",directive
" Factory returning the singleton instance.\n\n ",non-directive
"@return the singleton instance\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Evaluates the predicate returning true if the input is null.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return true if input is null\n",non-directive
" Evaluates the predicate returning true if either predicate returns true.\n\n ",non-directive
"@param object  the input object\n ",non-directive
"@return true if either decorated predicate returns true\n",non-directive
" Gets the two predicates being decorated as an array.\n\n ",non-directive
"@return the predicates\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor that performs no validation.\n ",directive
"Use <code>getInstance</code> if you want that.\n\n ",directive
"@param predicate1  the first predicate to check, not null\n ",non-directive
"@param predicate2  the second predicate to check, not null\n",non-directive
"\n Sets the iterator for this iterator to use.\n ",non-directive
"If iteration has started, this effectively resets the iterator.\n \n",non-directive
"@param iterator  the iterator to use\n",non-directive
" Removes the last retrieved element if a collection is attached.\n ",non-directive
"<p>\n Functions if an associated <code>Collection</code> is known.\n ",non-directive
"If so, the first occurrence of the last returned object from this\n iterator will be removed from the collection.\n\n ",non-directive
" Constructs a new <code>EnumerationIterator</code> that will remove\n elements from the specified collection.\n\n ",non-directive
"@param enumeration  the enumeration to use\n ",non-directive
"@param collection  the collection to remove elements from\n",non-directive
" Get a typed resettable empty iterator instance.\n ",non-directive
"@param <E>\n ",non-directive
"@return ResettableIterator<E>\n",non-directive
" Get a typed empty iterator instance.\n ",non-directive
"@param <E>\n ",non-directive
"@return Iterator<E>\n",non-directive
" Constructs an ObjectArrayIterator that will iterate over the values in the\n specified array from a specific start index.\n\n ",non-directive
"@param array  the array to iterate over\n ",non-directive
"@param start  the index to start iterating at\n ",non-directive
" Constructs an ArrayListIterator that will iterate over the values in the\n specified array from a specific start index.\n\n ",non-directive
"@param array  the array to iterate over\n ",non-directive
"@param startIndex  the index to start iterating at\n ",non-directive
" Returns whether this iterator has any more elements.\n ",non-directive
"<p>\n Returns false only if the list originally had zero elements, or\n all elements have been {@link #remove removed}.\n\n ",non-directive
"@return <code>true</code> if there are more elements\n",non-directive
" Returns the next object in the list.\n ",non-directive
"<p>\n If at the end of the list, returns the first element.\n\n ",directive
"@return the object after the last element returned\n ",non-directive
" Returns whether this iterator has any more previous elements.\n ",non-directive
"<p>\n Returns false only if the list originally had zero elements, or\n all elements have been {@link #remove removed}.\n\n ",non-directive
"@return <code>true</code> if there are more elements\n",non-directive
"\n Sets the iterator for this iterator to use.\n ",non-directive
"If iteration has started, this effectively resets the iterator.\n\n ",directive
"@param iterator  the iterator to use\n",non-directive
" Get the next object from the iterator.\n ",non-directive
"<p>\n This returns the single object if it hasn't been returned yet.\n\n ",directive
"@return the single object\n ",non-directive
" Constructs a new <code>SingletonIterator</code> optionally choosing if\n <code>remove</code> is a permitted operation.\n\n ",non-directive
"@param object  the single object to return from the iterator\n ",non-directive
"@param removeAllowed  true if remove is allowed\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Typed instance of the iterator.\n ",non-directive
"@param <E>\n ",non-directive
"@return OrderedIterator<E>\n",non-directive
" Constructs an ObjectArrayListIterator that will iterate over the values in the\n specified array from a specific start index.\n\n ",non-directive
"@param array  the array to iterate over\n ",non-directive
"@param start  the index to start iterating at\n ",non-directive
" Constructs a ObjectGraphIterator that will handle an iterator of iterators.\n ",non-directive
"<p>\n This constructor exists for convenience to emphasise that this class can\n be used to iterate over nested iterators. ",directive
"That is to say that the iterator\n passed in here contains other iterators, which may in turn contain further\n iterators.\n \n",directive
"@param rootIterator  the root iterator, null will result in an empty iterator\n",non-directive
" Checks whether the index is valid or not.\n \n",non-directive
"@param bound  the index to check\n ",non-directive
"@param type  the index type (for error messages)\n ",non-directive
" Constructs an ArrayIterator that will iterate over the values in the\n specified array from a specific start index.\n\n ",non-directive
"@param array  the array to iterate over.\n ",non-directive
"@param startIndex  the index to start iterating at.\n ",non-directive
" Construct an ArrayIterator that will iterate over a range of values \n in the specified array.\n\n ",non-directive
"@param array  the array to iterate over.\n ",non-directive
"@param startIndex  the index to start iterating at.\n ",non-directive
"@param endIndex  the index to finish iterating at.\n ",non-directive
" Get a typed instance of the iterator.\n ",non-directive
"@param <E>\n ",non-directive
"@return {@link ListIterator}<E>\n",non-directive
" Get a typed instance of the iterator.\n ",non-directive
"@param <K>\n ",non-directive
"@param <V>\n ",non-directive
"@return {@link OrderedMapIterator}<K, V>\n",non-directive
" Gets the next object from the iteration, transforming it using the\n current transformer. ",non-directive
"If the transformer is null, no transformation\n occurs and the object from the iterator is returned directly.\n \n",non-directive
"@return the next object\n ",non-directive
"\n Sets the iterator for this iterator to use.\n ",non-directive
"If iteration has started, this effectively resets the iterator.\n \n",directive
"@param iterator  the iterator to use\n",non-directive
"\n Sets the transformer this the iterator to use.\n ",non-directive
"A null transformer is a no-op transformer.\n \n",non-directive
"@param transformer  the transformer to use\n",non-directive
" Get the next object from the iterator.\n ",non-directive
"<p>\n This returns the single object if it hasn't been returned yet.\n\n ",directive
"@return the single object\n ",non-directive
" Get the previous object from the iterator.\n ",non-directive
"<p>\n This returns the single object if it has been returned.\n\n ",directive
"@return the single object\n ",non-directive
" Sets the value associated with the current key.\n\n ",non-directive
"@param value  the new value\n ",non-directive
"@return the previous value\n ",non-directive
" Decorates the specified iterator such that it cannot be modified.\n ",non-directive
"<p>\n If the iterator is already unmodifiable it is returned directly.\n\n ",directive
"@param iterator  the iterator to decorate\n ",non-directive
"\n Has the iterator any more elements.\n ",non-directive
"<p>\n Returns false only if the collection originally had zero elements, or\n all the elements have been {@link #remove removed}.\n \n",directive
"@return <code>true</code> if there are more elements\n",non-directive
" Constructor that wraps a collection.\n ",non-directive
"<p>\n There is no way to reset an Iterator instance without recreating it from\n the original source, so the Collection must be passed in.\n \n",directive
"@param coll  the collection to wrap\n ",non-directive
" Set the Iterator at the given index\n \n ",non-directive
"@param index index of the Iterator to replace\n ",non-directive
"@param iterator Iterator to place at the given index\n ",non-directive
" Constructs a new <code>IteratorChain</code> over the array of iterators.\n ",non-directive
"<p>\n This method takes an array of iterators. ",non-directive
"The newly constructed iterator\n will iterate through each one of the input iterators in turn.\n \n",directive
"@param iteratorChain the array of iterators, not null\n ",non-directive
" Constructs a new <code>IteratorChain</code> over the collection of\n iterators.\n ",non-directive
"<p>\n This method takes a collection of iterators. ",non-directive
"The newly constructed\n iterator will iterate through each one of the input iterators in turn.\n \n",directive
"@param iteratorChain the collection of iterators, not null\n ",non-directive
" Sets the iterator at the given index.\n \n",non-directive
"@param index index of the Iterator to replace\n ",non-directive
"@param iterator Iterator to place at the given index\n ",non-directive
" Constructs a new <code>CollatingIterator</code> that will used the\n specified comparator for ordering. ",non-directive
"Child iterators will have to be\n manually added using the {@link #addIterator(Iterator)} method.\n \n",directive
"@param comp the comparator to use to sort, or null to use natural sort\n order\n",non-directive
" Constructs a new <code>CollatingIterator</code> that will use the\n specified comparator to provide ordered iteration over the collection of\n iterators.\n \n",non-directive
"@param comp the comparator to use to sort, or null to use natural sort\n order\n ",non-directive
"@param iterators the collection of iterators\n ",non-directive
" Gets the previous element.\n ",non-directive
"The next element is the previous in the list.\n\n ",non-directive
"@return the previous element in the iterator\n",non-directive
" Transforms a key.\n ",non-directive
"<p>\n The transformer itself may throw an exception if necessary.\n\n ",directive
"@param object the object to transform\n ",non-directive
" Transforms a value.\n ",non-directive
"<p>\n The transformer itself may throw an exception if necessary.\n\n ",directive
"@param object the object to transform\n ",non-directive
" Adds the given element to this buffer.\n\n ",non-directive
"@param obj  the element to add\n ",non-directive
"@return true, always\n ",non-directive
" Adds an element to the buffer.\n ",non-directive
"<p>\n The element added will be sorted according to the comparator in use.\n\n ",non-directive
"@param element  the element to be added\n ",non-directive
"@return true always\n",non-directive
" Percolates element down heap from the position given by the index.\n ",non-directive
"<p>\n Assumes it is a minimum heap.\n\n ",directive
"@param index the index for the element\n",non-directive
" Percolates element down heap from the position given by the index.\n ",non-directive
"<p>\n Assumes it is a maximum heap.\n\n ",directive
"@param index the index of the element\n",non-directive
" Percolates element up heap from the position given by the index.\n ",non-directive
"<p>\n Assumes it is a minimum heap.\n\n ",directive
"@param index the index of the element to be percolated up\n",non-directive
" Percolates a new element up heap from the bottom.\n ",non-directive
"<p>\n Assumes it is a minimum heap.\n\n ",directive
"@param element the element\n",non-directive
" Percolates element up heap from from the position given by the index.\n ",non-directive
"<p>\n Assume it is a maximum heap.\n\n ",directive
"@param index the index of the element to be percolated up\n",non-directive
" Percolates a new element up heap from the bottom.\n ",non-directive
"<p>\n Assume it is a maximum heap.\n\n ",directive
"@param element the element\n",non-directive
" Compares two objects using the comparator if specified, or the\n natural order otherwise.\n \n",non-directive
"@param a  the first object\n ",non-directive
"@param b  the second object\n ",non-directive
"@return -ve if a less than b, 0 if they are equal, +ve if a greater than b\n",non-directive
" Returns a string representation of this heap.  ",non-directive
"The returned string\n is similar to those produced by standard JDK collections.\n\n ",directive
"@return a string representation of this heap\n",non-directive
" Constructs a new <code>BoundedFifoBuffer</code> big enough to hold all\n of the elements in the specified collection. ",non-directive
"That collection's\n elements will also be added to the buffer.\n\n ",non-directive
"@param coll  the collection whose elements to add, may not be null\n ",non-directive
" If the buffer is full, the least recently added element is discarded so\n that a new element can be inserted.\n\n ",directive
"@param element the element to add\n ",non-directive
"@return true, always\n",non-directive
" Constructor that creates a buffer from the specified collection.\n ",non-directive
"The collection size also sets the buffer size\n\n ",non-directive
"@param coll  the collection to copy into the buffer, may not be null\n ",non-directive
" Gets the next value from the buffer, waiting until an object is\n added for up to the specified timeout value if the buffer is empty.\n\n ",non-directive
"@param timeout  the timeout value in milliseconds\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Removes the next value from the buffer, waiting until an object is\n added for up to the specified timeout value if the buffer is empty.\n\n ",non-directive
"@param timeout  the timeout value in milliseconds\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Creates a new instance of this object.\n\n ",non-directive
"@param normalMap  the normal direction map\n ",non-directive
"@param reverseMap  the reverse direction map\n ",non-directive
"@param inverseMap  the inverse BidiMap\n ",non-directive
"@return new bidi map\n",non-directive
" Obtains an ordered map iterator.\n ",non-directive
"<p>\n This implementation copies the elements to an ArrayList in order to\n provide the forward/backward behaviour.\n\n ",directive
"@return a new ordered map iterator\n",non-directive
" Constructor.\n ",non-directive
"@param bidi  the parent bidi map\n ",non-directive
"@param sm  the subMap sorted map\n",non-directive
" Creates a new instance of this object.\n \n",non-directive
"@param normalMap  the normal direction map\n ",non-directive
"@param reverseMap  the reverse direction map\n ",non-directive
"@param inverseBidiMap  the inverse BidiMap\n ",non-directive
"@return new bidi map\n",non-directive
"\n Constructs a <code>HashBidiMap</code> that decorates the specified maps.\n\n ",non-directive
"@param normalMap  the normal direction map\n ",non-directive
"@param reverseMap  the reverse direction map\n ",non-directive
"@param inverseBidiMap  the inverse BidiMap\n",non-directive
" Returns a set view of the keys contained in this map in key order.\n ",non-directive
"<p>\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa. ",directive
"If the map is modified while an iteration over\n the set is in progress, the results of the iteration are undefined.\n ",directive
"<p>\n The set supports element removal, which removes the corresponding mapping\n from the map. ",non-directive
"It does not support the add or addAll operations.\n\n ",directive
"@return a set view of the keys contained in this map.\n",non-directive
" Returns a set view of the entries contained in this map in key order.\n ",non-directive
"For simple iteration through the map, the MapIterator is quicker.\n ",directive
"<p>\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa. ",directive
"If the map is modified while an iteration over\n the set is in progress, the results of the iteration are undefined.\n ",directive
"<p>\n The set supports element removal, which removes the corresponding mapping\n from the map. ",non-directive
"It does not support the add or addAll operations.\n ",directive
"The returned MapEntry objects do not support setValue.\n\n ",directive
"@return a set view of the values contained in this map.\n",non-directive
" Compares for equals as per the API.\n\n ",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if equal\n",non-directive
" Creates a new instance of the subclass.\n\n ",non-directive
"@param normalMap  the normal direction map\n ",non-directive
"@param reverseMap  the reverse direction map\n ",non-directive
"@param inverseMap  this map, which is the inverse in the new map\n ",non-directive
"@return the inverse map\n",non-directive
" Gets a keySet view of the map.\n ",non-directive
"Changes made on the view are reflected in the map.\n ",directive
"The set supports remove and clear but not add.\n\n ",directive
"@return the keySet view\n",non-directive
" Gets a values view of the map.\n ",non-directive
"Changes made on the view are reflected in the map.\n ",directive
"The set supports remove and clear but not add.\n\n ",directive
"@return the values view\n",non-directive
" Gets an entrySet view of the map.\n ",non-directive
"Changes made on the set are reflected in the map.\n ",directive
"The set supports remove and clear but not add.\n ",directive
"<p>\n The Map Entry setValue() method only allow a new value to be set.\n ",directive
"If the value being set is already in the map, an IllegalArgumentException\n is thrown (as setValue cannot change the size of the map).\n\n ",directive
"@return the entrySet view\n",non-directive
" Creates an empty map, initialised by <code>createMap</code>.\n ",non-directive
"<p>\n This constructor remains in place for deserialization.\n ",non-directive
"All other usage is deprecated in favour of\n {@link #AbstractDualBidiMap(Map, Map)}.\n",directive
" Constructor.\n ",non-directive
"@param iterator  the iterator to decorate\n ",non-directive
"@param parent  the parent map\n",non-directive
" Constructor.\n ",non-directive
"@param entry  the entry to decorate\n ",non-directive
"@param parent  the parent map\n",non-directive
" Sets the value associated with the key direct onto the map.\n \n",non-directive
"@param value  the new value\n ",non-directive
"@return the old value\n ",non-directive
" Gets a hashCode compatible with the equals method.\n ",non-directive
"<p>\n Implemented per API documentation of {@link java.util.Map.Entry#hashCode()}\n \n ",non-directive
"@return a suitable hash code\n",non-directive
" Constructs a new entry with the given Map and key.\n\n ",non-directive
"@param map  the map\n ",non-directive
"@param key  the key\n",non-directive
" Gets the size of the list of keys.\n \n",non-directive
"@return the size of the list of keys\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Throws UnsupportedOperationException.\n \n",non-directive
"@param value  the new value\n ",non-directive
"@return the previous value\n ",non-directive
" Compares this <code>Map.Entry</code> with another <code>Map.Entry</code>.\n ",non-directive
"<p>\n Implemented per API documentation of {@link java.util.Map.Entry#equals(Object)}\n \n ",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if equal key and value\n",non-directive
" Gets a hashCode compatible with the equals method.\n ",non-directive
"<p>\n Implemented per API documentation of {@link java.util.Map.Entry#hashCode()}\n \n ",non-directive
"@return a suitable hash code\n",non-directive
" Constructs a new pair with the specified key and given value.\n\n ",non-directive
"@param key  the key for the entry, may be null\n ",non-directive
"@param value  the value for the entry, may be null\n",non-directive
"\n Sets the value.\n\n ",non-directive
"@return the old value of the value\n ",non-directive
"@param value the new value\n ",non-directive
" Compares this <code>Map.Entry</code> with another <code>Map.Entry</code>.\n ",non-directive
"<p>\n Returns true if the compared object is also a <code>DefaultKeyValue</code>,\n and its key and value are equal to this object's key and value.\n \n",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if equal key and value\n",non-directive
" Returns the number of occurrence of the given element in this bag by\n looking up its count in the underlying map.\n \n",non-directive
"@param object the object to search for\n ",non-directive
"@return the number of occurrences of the object, zero if not found\n",non-directive
" Determines if the bag contains the given element by checking if the\n underlying map contains the element as a key.\n \n",non-directive
"@param object the object to search for\n ",non-directive
"@return true if the bag contains the given element\n",non-directive
" Gets an iterator over the bag elements. ",non-directive
"Elements present in the Bag more\n than once will be returned repeatedly.\n \n",directive
"@return the iterator\n",non-directive
" Adds a new element to the bag, incrementing its count in the underlying\n map.\n \n",non-directive
"@param object the object to add\n ",non-directive
"@return <code>true</code> if the object was not already in the\n <code>uniqueSet</code>\n",non-directive
" Invokes {@link #add(Object)} for each element in the given collection.\n \n",directive
"@param coll the collection to add\n ",non-directive
"@return <code>true</code> if this call changed the bag\n",non-directive
" Removes a specified number of copies of an object from the bag.\n \n",non-directive
"@param object the object to remove\n ",non-directive
"@param nCopies the number of copies to remove\n ",non-directive
"@return true if the bag changed\n",non-directive
" Removes objects from the bag according to their count in the specified\n collection.\n \n",non-directive
"@param coll the collection to use\n ",non-directive
"@return true if the bag changed\n",non-directive
" Returns an array of all of this bag's elements.\n \n",non-directive
"@param array the array to populate\n ",non-directive
"@return an array of all of this bag's elements\n",non-directive
" Read the map in using a custom routine.\n ",non-directive
"@param map the map to use\n ",non-directive
"@param in the input stream\n ",non-directive
" Compares this Bag to another. ",non-directive
"This Bag equals another Bag if it contains\n the same number of occurrences of the same elements.\n \n",non-directive
"@param object the Bag to compare to\n ",non-directive
"@return true if equal\n",non-directive
" Gets a hash code for the Bag compatible with the definition of equals.\n ",non-directive
"The hash code is defined as the sum total of a hash code for each\n element. ",directive
"The per element hash code is defined as\n <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. ",non-directive
"This hash code\n is compatible with the Set interface.\n \n",directive
"@return the hash code of the Bag\n",non-directive
" If a <code>CollectionMutator</code> is defined for this CompositeSet then this\n method will be called anyway.\n\n ",directive
"@param obj Object to be removed\n ",non-directive
"@return true if the object is removed, false otherwise\n",non-directive
" Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n ",non-directive
"@param initialCapacity  the initial capacity\n ",non-directive
"@param loadFactor  the load factor\n ",non-directive
" Returns a set view of the mappings contained in this map.  ",non-directive
"Each element\n in the returned set is a <code>Map.Entry</code>.  ",non-directive
"The set is backed by the\n map, so changes to the map are reflected in the set, and vice-versa.\n ",directive
"If the map is modified while an iteration over the set is in progress,\n the results of the iteration are undefined.  ",directive
"The set supports element\n removal, which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  ",directive
"It does not support\n the <tt>add</tt> or <tt>addAll</tt> operations.\n ",directive
"<p>\n This implementation returns a <code>CompositeSet</code> which\n composites the entry sets from all of the composited maps.\n\n ",non-directive
"@see CompositeSet\n ",non-directive
"@return a set view of the mappings contained in this map.\n",non-directive
" Returns a set view of the keys contained in this map.  ",non-directive
"The set is\n backed by the map, so changes to the map are reflected in the set, and\n vice-versa.  ",directive
"If the map is modified while an iteration over the set is\n in progress, the results of the iteration are undefined.  ",directive
"The set\n supports element removal, which removes the corresponding mapping from\n the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt> <tt>retainAll</tt>, and <tt>clear</tt> operations.\n ",directive
"It does not support the add or <tt>addAll</tt> operations.\n ",directive
"<p>\n This implementation returns a <code>CompositeSet</code> which\n composites the key sets from all of the composited maps.\n\n ",non-directive
"@return a set view of the keys contained in this map.\n",non-directive
" Returns a collection view of the values contained in this map.  ",non-directive
"The\n collection is backed by the map, so changes to the map are reflected in\n the collection, and vice-versa.  ",directive
"If the map is modified while an\n iteration over the collection is in progress, the results of the\n iteration are undefined.  ",directive
"The collection supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Collection.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt> operations.\n ",directive
"It does not support the add or <tt>addAll</tt> operations.\n\n ",directive
"@return a collection view of the values contained in this map.\n",non-directive
" Checks if this Map equals another as per the Map specification.\n\n ",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if the maps are equal\n",non-directive
" Create a new CompositeMap with two composited Map instances.\n\n ",non-directive
"@param one  the first Map to be composited\n ",non-directive
"@param two  the second Map to be composited\n ",non-directive
" Create a new CompositeMap with two composited Map instances.\n\n ",non-directive
"@param one  the first Map to be composited\n ",non-directive
"@param two  the second Map to be composited\n ",non-directive
"@param mutator  MapMutator to be used for mutation operations\n",non-directive
" Create a new CompositeMap which composites all of the Map instances in the\n argument. ",non-directive
"It copies the argument array, it does not use it directly.\n\n ",directive
"@param composite  the Maps to be composited\n ",non-directive
" Create a new CompositeMap which composites all of the Map instances in the\n argument. ",non-directive
"It copies the argument array, it does not use it directly.\n\n ",directive
"@param composite  Maps to be composited\n ",non-directive
"@param mutator  MapMutator to be used for mutation operations\n",non-directive
" Called when the CompositeMap.put() method is invoked.\n\n ",directive
"@param map  the CompositeMap which is being modified\n ",non-directive
"@param composited  array of Maps in the CompositeMap being modified\n ",non-directive
"@param key  key with which the specified value is to be associated.\n ",non-directive
"@param value  value to be associated with the specified key.\n ",non-directive
"@return previous value associated with specified key, or <tt>null</tt>\n         if there was no mapping for key.  ",non-directive
"A <tt>null</tt> return can\n         also indicate that the map previously associated <tt>null</tt>\n         with the specified key, if the implementation supports\n         <tt>null</tt> values.\n\n ",directive
" Overrides convertKey() from {@link AbstractHashedMap} to convert keys to \n lower case.\n ",directive
"<p>\n Returns {@link AbstractHashedMap#NULL} if key is null.\n \n",non-directive
"@param key  the key convert\n ",non-directive
"@return the converted key\n",non-directive
" Constructs a new, empty map with the specified initial capacity and\n load factor. \n\n ",non-directive
"@param initialCapacity  the initial capacity\n ",non-directive
"@param loadFactor  the load factor\n ",non-directive
" Gets the value mapped to the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Checks whether the map contains the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@return true if the map contains the key\n",non-directive
" Stores the value against the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the value previously mapped to this combined key, null if none\n",non-directive
" Removes the specified multi-key from this map.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n",non-directive
" Gets the hash code for the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@return the hash code\n",non-directive
" Is the key equal to the combined key.\n \n",non-directive
"@param entry  the entry to compare to\n ",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@return true if the key matches\n",non-directive
" Gets the value mapped to the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Stores the value against the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the value previously mapped to this combined key, null if none\n",non-directive
" Removes the specified multi-key from this map.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n",non-directive
" Gets the hash code for the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@return the hash code\n",non-directive
" Is the key equal to the combined key.\n \n",non-directive
"@param entry  the entry to compare to\n ",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@return true if the key matches\n",non-directive
" Gets the value mapped to the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Checks whether the map contains the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@return true if the map contains the key\n",non-directive
" Stores the value against the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the value previously mapped to this combined key, null if none\n",non-directive
" Gets the hash code for the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@return the hash code\n",non-directive
" Is the key equal to the combined key.\n \n",non-directive
"@param entry  the entry to compare to\n ",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@return true if the key matches\n",non-directive
" Gets the value mapped to the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@param key5  the fifth key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Stores the value against the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@param key5  the fifth key\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the value previously mapped to this combined key, null if none\n",non-directive
" Removes the specified multi-key from this map.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@param key5  the fifth key\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n",non-directive
" Gets the hash code for the specified multi-key.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@param key5  the fifth key\n ",non-directive
"@return the hash code\n",non-directive
" Is the key equal to the combined key.\n \n",non-directive
"@param entry  the entry to compare to\n ",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@param key4  the fourth key\n ",non-directive
"@param key5  the fifth key\n ",non-directive
"@return true if the key matches\n",non-directive
" Removes all mappings where the first key is that specified.\n ",non-directive
"<p>\n This method removes all the mappings where the <code>MultiKey</code>\n has one or more keys, and the first matches that specified.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@return true if any elements were removed\n",non-directive
" Removes all mappings where the first two keys are those specified.\n ",non-directive
"<p>\n This method removes all the mappings where the <code>MultiKey</code>\n has two or more keys, and the first two match those specified.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@return true if any elements were removed\n",non-directive
" Removes all mappings where the first three keys are those specified.\n ",non-directive
"<p>\n This method removes all the mappings where the <code>MultiKey</code>\n has three or more keys, and the first three match those specified.\n \n",non-directive
"@param key1  the first key\n ",non-directive
"@param key2  the second key\n ",non-directive
"@param key3  the third key\n ",non-directive
"@return true if any elements were removed\n",non-directive
" Removes a specific value from map.\n ",non-directive
"<p>\n The item is removed from the collection mapped to the specified key.\n ",non-directive
"Other values attached to that key are unaffected.\n ",directive
"<p>\n If the last value for a key is removed, <code>null</code> will be returned\n from a subsequant <code>get(key)</code>.\n\n ",non-directive
"@param key  the key to remove from\n ",non-directive
"@param value the value to remove\n ",non-directive
"@return the value removed (which was passed in), null if nothing removed\n",non-directive
" Checks whether the map contains the value specified.\n ",non-directive
"<p>\n This checks all collections against all keys for the value, and thus could be slow.\n\n ",directive
"@param value  the value to search for\n ",non-directive
"@return true if the map contains the value\n",non-directive
" Adds the value to the collection associated with the specified key.\n ",non-directive
"<p>\n Unlike a normal <code>Map</code> the previous value is not replaced.\n ",directive
"Instead the new value is added to the collection stored against the key.\n\n ",non-directive
"@param key  the key to store against\n ",non-directive
"@param value  the value to add to the collection at the key\n ",non-directive
"@return the value added if the map changed and null if the map did not change\n",non-directive
" Override superclass to ensure that MultiMap instances are\n correctly handled.\n ",directive
"<p>\n If you call this method with a normal map, each entry is\n added using <code>put(Object,Object)</code>.\n ",directive
"If you call this method with a multi map, each entry is\n added using <code>putAll(Object,Collection)</code>.\n\n ",directive
"@param map  the map to copy (either a normal or multi map)\n",non-directive
" Gets a collection containing all the values in the map.\n ",non-directive
"<p>\n This returns a collection containing the combination of values from all keys.\n\n ",non-directive
"@return a collection view of the values contained in this map\n",non-directive
" Gets the collection mapped to the specified key.\n ",non-directive
"This method is a convenience method to typecast the result of <code>get(key)</code>.\n\n ",directive
"@param key  the key to retrieve\n ",non-directive
"@return the collection mapped to the key, null if no mapping\n",non-directive
" Gets an iterator for the collection mapped to the specified key.\n\n ",non-directive
"@param key  the key to get an iterator for\n ",non-directive
"@return the iterator of the collection at the key, empty iterator if key not in map\n",non-directive
" Gets the key at the specified index.\n \n",non-directive
"@param index  the index to retrieve\n ",non-directive
"@return the key at the specified index\n ",non-directive
" Gets the value at the specified index.\n \n",non-directive
"@param index  the index to retrieve\n ",non-directive
"@return the value at the specified index\n ",non-directive
" Gets the index of the specified key.\n \n",non-directive
"@param key  the key to find the index of\n ",non-directive
"@return the index, or -1 if not found\n",non-directive
" Removes the element at the specified index.\n\n ",non-directive
"@param index  the index of the object to remove\n ",non-directive
"@return the previous value corresponding the <code>key</code>,\n  or <code>null</code> if none existed\n ",non-directive
" Constructs a new, empty map with the specified initial capacity and\n load factor. \n\n ",non-directive
"@param initialCapacity  the initial capacity\n ",non-directive
"@param loadFactor  the load factor\n ",non-directive
" Validates a key value pair.\n \n",non-directive
"@param key  the key to validate\n ",non-directive
"@param value  the value to validate\n ",non-directive
" Gets the value mapped to the key specified.\n\n ",non-directive
"@param key  the key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Checks whether the map contains the specified key.\n\n ",non-directive
"@param key  the key to search for\n ",non-directive
"@return true if the map contains the key\n",non-directive
" Checks whether the map contains the specified value.\n\n ",non-directive
"@param value  the value to search for\n ",non-directive
"@return true if the map contains the key\n",non-directive
" Removes the specified mapping from this map.\n\n ",non-directive
"@param key  the mapping to remove\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n",non-directive
" Gets an iterator over the map.\n ",non-directive
"Changes made to the iterator affect this map.\n ",directive
"<p>\n A MapIterator returns the keys in the map. ",non-directive
"It also provides convenient\n methods to get the key and value, and set the value.\n ",non-directive
"It avoids the need to create an entrySet/keySet/values object.\n ",directive
"It also avoids creating the Map Entry object.\n\n ",non-directive
"@return the map iterator\n",non-directive
" Clones the map without cloning the keys or values.\n\n ",non-directive
"@return a shallow clone\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Gets the hash code for the key specified.\n ",non-directive
"<p>\n This implementation uses the identity hash code.\n \n",directive
"@param key  the key to get a hash code for\n ",non-directive
"@return the hash code\n",non-directive
" Compares two keys for equals.\n ",non-directive
"<p>\n This implementation converts the key from the entry to a real reference\n before comparison and uses <code>==</code>.\n \n",directive
"@param key1  the first key to compare passed in from outside\n ",non-directive
"@param key2  the second key extracted from the entry via <code>entry.key</code>\n ",non-directive
"@return true if equal by identity\n",non-directive
" Compares two values for equals.\n ",non-directive
"<p>\n This implementation uses <code>==</code>.\n \n",non-directive
"@param value1  the first value to compare passed in from outside\n ",non-directive
"@param value2  the second value extracted from the entry via <code>getValue()</code>\n ",non-directive
"@return true if equal by identity\n",non-directive
" Constructs a new empty <code>DefaultedMap</code> that decorates\n a <code>HashMap</code>.\n ",non-directive
"<p>\n The object passed in will be returned by the map whenever an\n unknown key is requested.\n \n",non-directive
"@param defaultValue  the default value to return when the key is not found\n",non-directive
" Checks whether the map contains the specified value.\n \n",non-directive
"@param value  the value to search for\n ",non-directive
"@return true if the map contains the value\n",non-directive
" Gets the next key in sequence.\n \n",non-directive
"@param key  the key to get after\n ",non-directive
"@return the next key\n",non-directive
" Gets the previous key in sequence.\n \n",non-directive
"@param key  the key to get before\n ",non-directive
"@return the previous key\n",non-directive
" Gets the key at the specified index.\n \n",non-directive
"@param index  the index to retrieve\n ",non-directive
"@return the key at the specified index\n ",non-directive
" Adds an entry into this map, maintaining insertion order.\n ",non-directive
"<p>\n This implementation adds the entry to the data storage table and\n to the end of the linked list.\n \n",directive
"@param link  the entry to add\n ",non-directive
"@param hashIndex  the index into the data array to store at\n",non-directive
" Creates an entry to store the data.\n ",non-directive
"<p>\n This implementation creates a new LinkEntry instance.\n \n",non-directive
"@param next  the next entry in sequence\n ",non-directive
"@param hashCode  the hash code to use\n ",non-directive
"@param key  the key to store\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the newly created entry\n",non-directive
" Removes an entry from the map and the linked list.\n ",non-directive
"<p>\n This implementation removes the entry from the linked list chain, then\n calls the superclass implementation.\n \n",directive
"@param entry  the entry to remove\n ",non-directive
"@param hashIndex  the index into the data structure\n ",non-directive
"@param previous  the previous entry in the chain\n",non-directive
" Constructs a new, empty map with the specified initial capacity and\n load factor. \n\n ",non-directive
"@param initialCapacity  the initial capacity\n ",non-directive
"@param loadFactor  the load factor\n ",non-directive
" Constructs a new entry.\n \n",non-directive
"@param next  the next entry in the hash bucket sequence\n ",non-directive
"@param hashCode  the hash code\n ",non-directive
"@param key  the key\n ",non-directive
"@param value  the value\n",non-directive
" Gets the current size of the map.\n ",non-directive
"The value is computed fresh each time the method is called.\n \n",non-directive
"@return the current size\n",non-directive
" Gets the value associated with the key.\n \n",non-directive
"@param key  the key to retrieve\n ",non-directive
"@return the associated value\n",non-directive
" Checks if the map contains the specified key.\n \n",non-directive
"@param key  the key to check\n ",non-directive
"@return true if found\n",non-directive
" Checks if the map contains the specified value.\n \n",non-directive
"@param value  the value to check\n ",non-directive
"@return true if found\n",non-directive
" Puts a new key value mapping into the map.\n \n",non-directive
"@param key  the key to use\n ",non-directive
"@param value  the value to use\n ",non-directive
"@return the previous mapping for the key\n",non-directive
" Removes the specified key from the map.\n \n",non-directive
"@param key  the key to remove\n ",non-directive
"@return the previous value at this key\n",non-directive
" Compares this map to another, as per the Map specification.\n \n",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if equal\n",non-directive
" Gets the value mapped to the key specified.\n ",non-directive
"<p>\n This operation changes the position of the key in the map to the\n most recently used position (first).\n\n ",directive
"@param key  the key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Moves an entry to the MRU position at the end of the list.\n ",non-directive
"<p>\n This implementation moves the updated entry to the end of the list.\n\n ",directive
"@param entry  the entry to update\n",non-directive
" Updates an existing key-value mapping.\n ",non-directive
"<p>\n This implementation moves the updated entry to the top of the list\n using {@link #moveToMRU(AbstractLinkedMap.LinkEntry)}.\n\n ",directive
"@param entry  the entry to update\n ",non-directive
"@param newValue  the new value to store\n",non-directive
" Reuses an entry by removing it and moving it to a new place in the map.\n ",non-directive
"<p>\n This method uses {@link #removeEntry}, {@link #reuseEntry} and {@link #addEntry}.\n\n ",directive
"@param entry  the entry to reuse\n ",non-directive
"@param hashIndex  the index into the data array to store at\n ",non-directive
"@param hashCode  the hash code of the key to add\n ",non-directive
"@param key  the key to add\n ",non-directive
"@param value  the value to add\n",non-directive
" Whether this LRUMap will scan until a removable entry is found when the\n map is full.\n\n ",non-directive
"@return true if this map scans\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructs a new, empty map with the specified maximum size.\n\n ",non-directive
"@param maxSize  the maximum size of the map\n ",non-directive
"@param scanUntilRemovable  scan until a removeable entry is found, default false\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n ",non-directive
"@param maxSize  the maximum size of the map\n ",non-directive
"@param loadFactor  the load factor\n ",non-directive
" Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n ",non-directive
"@param maxSize  the maximum size of the ma\n ",non-directive
"@param loadFactor  the load factor\n ",non-directive
"@param scanUntilRemovable  scan until a removeable entry is found, default false\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Constructor copying elements from another map.\n ",non-directive
"<p>\n The maximum size is set from the map's size.\n\n ",non-directive
"@param map  the map to copy\n ",non-directive
" Constructor copying elements from another map.\n ",non-directive
"<p/>\n The maximum size is set from the map's size.\n\n ",non-directive
"@param map  the map to copy\n ",non-directive
"@param scanUntilRemovable  scan until a removeable entry is found, default false\n ",non-directive
"@since Commons Collections 3.1\n",non-directive
" Sets the value.\n\n ",non-directive
"@param value  the new value to set\n ",non-directive
"@return the old value\n",non-directive
" Checks whether the map contains the specified value.\n \n",non-directive
"@param value  the value to search for\n ",non-directive
"@return true if the map contains the key\n",non-directive
" Unsupported operation.\n \n",non-directive
"@param key  the mapping to remove\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n ",non-directive
" Gets the entrySet view of the map.\n ",non-directive
"Changes made via <code>setValue</code> affect this map.\n ",directive
"To simply iterate through the entries, use {@link #mapIterator()}.\n \n",directive
"@return the entrySet view\n",non-directive
" Gets the unmodifiable keySet view of the map.\n ",non-directive
"Changes made to the view affect this map.\n ",directive
"To simply iterate through the keys, use {@link #mapIterator()}.\n \n",directive
"@return the keySet view\n",non-directive
" Gets the unmodifiable values view of the map.\n ",non-directive
"Changes made to the view affect this map.\n ",directive
"To simply iterate through the values, use {@link #mapIterator()}.\n \n",directive
"@return the values view\n",non-directive
" Compares the specified key to the stored key.\n \n",non-directive
"@param key  the key to compare\n ",non-directive
"@return true if equal\n",non-directive
" Compares this map with another.\n \n",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if equal\n",non-directive
" Constructor specifying the key and value.\n\n ",non-directive
"@param key  the key to use\n ",non-directive
"@param value  the value to use\n",non-directive
" Gets the value mapped to the key specified.\n\n ",non-directive
"@param key  the key\n ",non-directive
"@return the mapped value, null if no match\n",non-directive
" Puts a key-value mapping into this map.\n\n ",non-directive
"@param key  the key to add\n ",non-directive
"@param value  the value to add\n ",non-directive
"@return the value previously mapped to this key, null if none\n",directive
" Removes the specified mapping from this map.\n\n ",non-directive
"@param key  the mapping to remove\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n",non-directive
" Gets the entry mapped to the key specified.\n ",non-directive
"<p>\n This method exists for subclasses that may need to perform a multi-step\n process accessing the entry. ",directive
"The public methods in this class don't use this\n method to gain a small performance boost.\n\n ",directive
"@param key  the key\n ",non-directive
"@return the entry, null if no match\n",non-directive
" Gets an iterator over the map.\n ",non-directive
"Changes made to the iterator affect this map.\n ",directive
"<p>\n A MapIterator returns the keys in the map. ",non-directive
"It also provides convenient\n methods to get the key and value, and set the value.\n ",non-directive
"It avoids the need to create an entrySet/keySet/values object.\n ",directive
"It also avoids creating the Map.Entry object.\n\n ",directive
"@return the map iterator\n",non-directive
" Gets the keySet view of the map.\n ",non-directive
"Changes made to the view affect this map.\n ",directive
"To simply iterate through the keys, use {@link #mapIterator()}.\n\n ",directive
"@return the keySet view\n",non-directive
" Compares this map with another.\n\n ",non-directive
"@param obj  the object to compare to\n ",non-directive
"@return true if equal\n",non-directive
" Compares two values for equals.\n ",non-directive
"This implementation uses <code>==</code>.\n\n ",non-directive
"@param value1  the first value to compare\n ",non-directive
"@param value2  the second value to compare\n ",non-directive
"@return true if equal by identity\n",non-directive
" Creates an entry to store the data.\n ",non-directive
"This implementation creates an IdentityEntry instance.\n\n ",non-directive
"@param next  the next entry in sequence\n ",non-directive
"@param hashCode  the hash code to use\n ",non-directive
"@param key  the key to store\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the newly created entry\n",non-directive
" Checks whether the map contains the specified key.\n\n ",non-directive
"@param key  the key to search for\n ",non-directive
"@return true if the map contains the key\n",non-directive
" Checks whether the map contains the specified value.\n\n ",non-directive
"@param value  the value to search for\n ",non-directive
"@return true if the map contains the value\n",non-directive
" Removes the specified mapping from this map.\n\n ",non-directive
"@param key  the mapping to remove\n ",non-directive
"@return the value mapped to the removed key, null if key not in map\n",non-directive
" Gets a MapIterator over the reference map.\n ",non-directive
"The iterator only returns valid key/value pairs.\n\n ",directive
"@return a map iterator\n",non-directive
" Compares two keys, in internal converted form, to see if they are equal.\n ",non-directive
"<p>\n This implementation converts the key from the entry to a real reference\n before comparison.\n\n ",directive
"@param key1  the first key to compare passed in from outside\n ",non-directive
"@param key2  the second key extracted from the entry via <code>entry.key</code>\n ",non-directive
"@return true if equal\n",non-directive
" Creates a ReferenceEntry instead of a HashEntry.\n\n ",non-directive
"@param next  the next entry in sequence\n ",non-directive
"@param hashCode  the hash code to use\n ",non-directive
"@param key  the key to store\n ",non-directive
"@param value  the value to store\n ",non-directive
"@return the newly created entry\n",non-directive
" Resolve enum from int.\n ",non-directive
"@param value\n ",non-directive
"@return ReferenceType\n ",non-directive
" Sets the value of the entry.\n\n ",non-directive
"@param obj  the object to store\n ",non-directive
"@return the previous value\n",non-directive
" Compares this map entry to another.\n ",non-directive
"<p>\n This implementation uses <code>isEqualKey</code> and\n <code>isEqualValue</code> on the main map for comparison.\n\n ",non-directive
"@param obj  the other map entry to compare to\n ",non-directive
"@return true if equal, false if not\n",non-directive
" Gets the hashcode of the entry using temporary hard references.\n ",non-directive
"<p>\n This implementation uses <code>hashEntry</code> on the main map.\n\n ",non-directive
"@return the hashcode of the entry\n",non-directive
" Constructs a reference of the given type to the given referent.\n ",non-directive
"The reference is registered with the queue for later purging.\n\n ",non-directive
"@param type  HARD, SOFT or WEAK\n ",non-directive
"@param referent  the object to refer to\n ",non-directive
"@param hash  the hash code of the <i>key</i> of the mapping;\n    this number might be different from referent.hashCode() if\n    the referent represents a value and not a key\n",directive
" Creates a new entry object for the ReferenceMap.\n\n ",non-directive
"@param parent  the parent map\n ",non-directive
"@param next  the next entry in the hash bucket\n ",non-directive
"@param hashCode  the hash code of the key\n ",non-directive
"@param key  the key\n ",non-directive
"@param value  the value\n",non-directive
" Gets the next key to the one specified using insert order.\n ",non-directive
"This method performs a list search to find the key and is O(n).\n \n",directive
"@param key  the key to find previous for\n ",non-directive
"@return the next key, null if no match or at start\n",non-directive
" Gets the previous key to the one specified using insert order.\n ",non-directive
"This method performs a list search to find the key and is O(n).\n \n",directive
"@param key  the key to find previous for\n ",non-directive
"@return the previous key, null if no match or at start\n",non-directive
" Puts the values contained in a supplied Map into the Map starting at\n the specified index.\n\n ",non-directive
"@param index the index in the Map to start at.\n ",non-directive
"@param map the Map containing the values to be added.\n",non-directive
" Gets a view over the keys in the map.\n ",non-directive
"<p>\n The Collection will be ordered by object insertion into the map.\n\n ",non-directive
"@see #keyList()\n ",non-directive
"@return the fully modifiable collection view over the keys\n",non-directive
" Gets a view over the keys in the map as a List.\n ",non-directive
"<p>\n The List will be ordered by object insertion into the map.\n ",non-directive
"The List is unmodifiable.\n\n ",directive
"@see #keySet()\n ",non-directive
"@return the unmodifiable list view over the keys\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Gets a view over the values in the map.\n ",non-directive
"<p>\n The Collection will be ordered by object insertion into the map.\n ",non-directive
"<p>\n From Commons Collections 3.2, this Collection can be cast\n to a list, see {@link #valueList()}\n\n ",directive
"@see #valueList()\n ",non-directive
"@return the fully modifiable collection view over the values\n",non-directive
" Gets a view over the values in the map as a List.\n ",non-directive
"<p>\n The List will be ordered by object insertion into the map.\n ",non-directive
"The List supports remove and set, but does not support add.\n\n ",directive
"@see #values()\n ",non-directive
"@return the partially modifiable list view over the values\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Gets a view over the entries in the map.\n ",non-directive
"<p>\n The Set will be ordered by object insertion into the map.\n\n ",non-directive
"@return the fully modifiable set view over the entries\n",non-directive
" Gets the value at the specified index.\n \n",non-directive
"@param index  the index to retrieve\n ",non-directive
"@return the key at the specified index\n ",non-directive
" Gets the index of the specified key.\n \n",non-directive
"@param key  the key to find the index of\n ",non-directive
"@return the index, or -1 if not found\n",non-directive
" Puts a key-value mapping into the map at the specified index.\n ",non-directive
"<p>\n If the map already contains the key, then the original mapping\n is removed and the new mapping added at the specified index.\n ",directive
"The remove may change the effect of the index. ",directive
"The index is\n always calculated relative to the original state of the map.\n ",directive
"<p>\n Thus the steps are: (1) remove the existing key-value mapping,\n then (2) insert the new key-value mapping at the position it\n would have been inserted had the remove not ocurred.\n\n ",directive
"@param index  the index at which the mapping should be inserted\n ",non-directive
"@param key  the key\n ",non-directive
"@param value  the value\n ",non-directive
"@return the value previously mapped to the key\n ",non-directive
"@since Commons Collections 3.2\n",non-directive
" Removes the element at the specified index.\n\n ",non-directive
"@param index  the index of the object to remove\n ",non-directive
"@return the removed value, or <code>null</code> if none existed\n ",non-directive
" Transforms a key.\n ",non-directive
"<p>\n The transformer itself may throw an exception if necessary.\n\n ",directive
"@param object  the object to transform\n ",non-directive
" Transforms a value.\n ",non-directive
"<p>\n The transformer itself may throw an exception if necessary.\n\n ",directive
"@param object  the object to transform\n ",non-directive
" Transforms a map.\n ",non-directive
"<p>\n The transformer itself may throw an exception if necessary.\n\n ",directive
"@param map  the map to transform\n ",non-directive
" Gets the collection being decorated.\n ",non-directive
"All access to the decorated collection goes via this method.\n \n",non-directive
"@return the decorated collection\n",non-directive
" Transforms a collection.\n ",non-directive
"<p>\n The transformer itself may throw an exception if necessary.\n \n",directive
"@param coll  the collection to transform\n ",non-directive
"@return a transformed object\n",non-directive
" Gets the size of this composite collection.\n ",non-directive
"<p>\n This implementation calls <code>size()</code> on each collection.\n\n ",directive
"@return total number of elements in all contained containers\n",non-directive
" Checks whether this composite collection is empty.\n ",non-directive
"<p>\n This implementation calls <code>isEmpty()</code> on each collection.\n\n ",directive
"@return true if all of the contained collections are empty\n",non-directive
" Checks whether this composite collection contains the object.\n ",non-directive
"<p>\n This implementation calls <code>contains()</code> on each collection.\n\n ",directive
"@param obj  the object to search for\n ",non-directive
"@return true if obj is contained in any of the contained collections\n",non-directive
" Returns an object array, populating the supplied array if possible.\n ",non-directive
"See <code>Collection</code> interface for full details.\n\n ",non-directive
"@param array  the array to use, populating if possible\n ",non-directive
"@return an array of all the elements in the collection\n",non-directive
" Adds an object to the collection, throwing UnsupportedOperationException\n unless a CollectionMutator strategy is specified.\n\n ",non-directive
"@param obj  the object to add\n ",non-directive
"@return true if the collection was modified\n ",non-directive
" Adds a collection of elements to this collection, throwing\n UnsupportedOperationException unless a CollectionMutator strategy is specified.\n\n ",non-directive
"@param coll  the collection to add\n ",non-directive
"@return true if the collection was modified\n ",non-directive
" Removes the elements in the specified collection from this composite collection.\n ",non-directive
"<p>\n This implementation calls <code>removeAll</code> on each collection.\n\n ",directive
"@param coll  the collection to remove\n ",non-directive
"@return true if the collection was modified\n ",non-directive
" Retains all the elements in the specified collection in this composite collection,\n removing all others.\n ",non-directive
"<p>\n This implementation calls <code>retainAll()</code> on each collection.\n\n ",directive
"@param coll  the collection to remove\n ",non-directive
"@return true if the collection was modified\n ",non-directive
" Create a Composite Collection with two collections.\n\n ",non-directive
"@param compositeCollection1  the Collection to be appended to the composite\n ",non-directive
"@param compositeCollection2  the Collection to be appended to the composite\n",non-directive
" Called when an object is to be added to the composite.\n\n ",directive
"@param composite  the CompositeCollection being changed\n ",non-directive
"@param collections  all of the Collection instances in this CompositeCollection\n ",non-directive
"@param obj  the object being added\n ",non-directive
"@return true if the collection is changed\n ",non-directive
" Called when a collection is to be added to the composite.\n\n ",directive
"@param composite  the CompositeCollection being changed\n ",non-directive
"@param collections  all of the Collection instances in this CompositeCollection\n ",non-directive
"@param coll  the collection being added\n ",non-directive
"@return true if the collection is changed\n ",non-directive
" Flushes the stream.  ",non-directive
"If the stream has saved any characters from the\n various write() methods in a buffer, write them immediately to their\n intended destination.  ",non-directive
"Then, if that destination is another character or\n byte stream, flush it.  ",non-directive
"Thus one flush() invocation will flush all the\n buffers in a chain of Writers and OutputStreams.\n \n",directive
" <p> If the intended destination of this stream is an abstraction provided\n by the underlying operating system, for example a file, then flushing the\n stream guarantees only that bytes previously written to the stream are\n passed to the operating system for writing; it does not guarantee that\n they are actually written to a physical device such as a disk drive.\n\n ",directive
" Specifies that all characters <i>c</i> in the range\n <code>low&nbsp;&lt;=&nbsp;<i>c</i>&nbsp;&lt;=&nbsp;high</code>\n are \"ordinary\" in this tokenizer. ",non-directive
"See the\n <code>ordinaryChar</code> method for more information on a\n character being ordinary.\n\n ",directive
"@param   low   the low end of the range.\n ",non-directive
"@param   hi    the high end of the range.\n ",non-directive
"@see     java.io.StreamTokenizer#ordinaryChar(int)\n",non-directive
" Reads characters into an array.  ",non-directive
"This method will block until some input\n is available, an I/O error occurs, or the end of the stream is reached.\n\n ",directive
"@param       cbuf  Destination buffer\n\n ",non-directive
"@return      The number of characters read, or -1 \n              if the end of the stream\n              has been reached\n\n ",directive
" Tells whether this stream is ready to be read.\n\n ",non-directive
"@return True if the next read() is guaranteed not to block for input,\n false otherwise.  ",directive
"Note that returning false does not guarantee that the\n next read will block.\n\n ",directive
" Reads up to <code>b.length</code> bytes of data from this file \n into an array of bytes. ",non-directive
"This method blocks until at least one byte \n of input is available. \n ",directive
"<p>\n Although <code>RandomAccessFile</code> is not a subclass of \n <code>InputStream</code>, this method behaves in exactly the \n same way as the {@link InputStream#read(byte[])} method of \n <code>InputStream</code>.\n\n ",directive
"@param      b   the buffer into which the data is read.\n ",non-directive
"@return     the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end of\n             this file has been reached.\n ",directive
" Writes the specified byte to this file. ",non-directive
"The write starts at \n the current file pointer.\n\n ",non-directive
"@param      b   the <code>byte</code> to be written.\n ",non-directive
" Reads the next line of text from this file.  ",non-directive
"This method successively\n reads bytes from the file, starting at the current file pointer, \n until it reaches a line terminator or the end\n of the file.  ",non-directive
"Each byte is converted into a character by taking the\n byte's value for the lower eight bits of the character and setting the\n high eight bits of the character to zero.  ",non-directive
"This method does not,\n therefore, support the full Unicode character set.\n\n ",directive
"<p> A line of text is terminated by a carriage-return character\n (<code>'&#92;r'</code>), a newline character (<code>'&#92;n'</code>), a\n carriage-return character immediately followed by a newline character,\n or the end of the file.  ",directive
"Line-terminating characters are discarded and\n are not included as part of the string returned.\n\n ",directive
"<p> This method blocks until a newline character is read, a carriage\n return and the byte following it are read (to see if it is a newline),\n the end of the file is reached, or an exception is thrown.\n\n ",directive
"@return     the next line of text from this file, or null if end\n             of file is encountered before even one byte is read.\n ",non-directive
" Reads in a string from this file. ",non-directive
"The string has been encoded \n using a\n <a href=\"DataInput.html#modified-utf-8\">modified UTF-8</a>\n format. \n ",directive
"<p>\n The first two bytes are read, starting from the current file \n pointer, as if by \n <code>readUnsignedShort</code>. ",directive
"This value gives the number of \n following bytes that are in the encoded string, not\n the length of the resulting string. ",directive
"The following bytes are then \n interpreted as bytes encoding characters in the modified UTF-8 format \n and are converted into characters. \n ",directive
"<p>\n This method blocks until all the bytes are read, the end of the \n stream is detected, or an exception is thrown. \n\n ",non-directive
"@return     a Unicode string.\n ",non-directive
"@see        java.io.RandomAccessFile#readUnsignedShort()\n",non-directive
" Converts the float argument to an <code>int</code> using the \n <code>floatToIntBits</code> method in class <code>Float</code>, \n and then writes that <code>int</code> value to the file as a \n four-byte quantity, high byte first. ",non-directive
"The write starts at the \n current position of the file pointer.\n\n ",non-directive
"@param      v   a <code>float</code> value to be written.\n ",non-directive
"@see        java.lang.Float#floatToIntBits(float)\n",non-directive
" Creates a <code>PushbackInputStream</code>\n with a pushback buffer of the specified <code>size</code>,\n and saves its  argument, the input stream\n <code>in</code>, for later use. ",non-directive
"Initially,\n there is no pushed-back byte  (the field\n <code>pushBack</code> is initialized to\n <code>-1</code>).\n\n ",non-directive
"@param  in    the input stream from which bytes will be read.\n ",non-directive
"@param  size  the size of the pushback buffer.\n ",non-directive
"@since  JDK1.1\n",non-directive
" Creates a <code>PushbackInputStream</code>\n and saves its  argument, the input stream\n <code>in</code>, for later use. ",non-directive
"Initially,\n there is no pushed-back byte  (the field\n <code>pushBack</code> is initialized to\n <code>-1</code>).\n\n ",directive
"@param   in   the input stream from which bytes will be read.\n",non-directive
" Prints a boolean value.  ",non-directive
"The string produced by <code>{@link\n java.lang.String#valueOf(boolean)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link\n #write(int)}</code> method.\n\n ",directive
"@param      b   The <code>boolean</code> to be printed\n",non-directive
" Prints a double-precision floating-point number.  ",non-directive
"The string produced by\n <code>{@link java.lang.String#valueOf(double)}</code> is translated into\n bytes according to the platform's default character encoding, and these\n bytes are written in exactly the manner of the <code>{@link\n #write(int)}</code> method.\n\n ",directive
"@param      d   The <code>double</code> to be printed\n ",non-directive
"@see        java.lang.Double#toString(double)\n",non-directive
" Prints a long integer and then terminates the line.  ",non-directive
"This method behaves\n as though it invokes <code>{@link #print(long)}</code> and then\n <code>{@link #println()}</code>.\n\n ",directive
"@param x the <code>long</code> value to be printed\n",non-directive
" Creates a new PrintWriter, without automatic line flushing, with the\n specified file.  ",non-directive
"This convenience constructor creates the necessary\n intermediate {@link java.io.OutputStreamWriter OutputStreamWriter},\n which will encode characters using the {@linkplain\n java.nio.charset.Charset#defaultCharset() default charset} for this\n instance of the Java virtual machine.\n\n ",directive
"@param  file\n         The file to use as the destination of this writer.  ",non-directive
"If the file\n         exists then it will be truncated to zero size; otherwise, a new\n         file will be created.  ",directive
"The output will be written to the file\n         and is buffered.\n\n ",non-directive
"@since  1.5\n",non-directive
" Closes the stream.  ",non-directive
"This is done by flushing the stream and then closing\n the underlying output stream.\n\n ",non-directive
"@see        java.io.OutputStream#close()\n",non-directive
" Prints a boolean and then terminate the line.  ",non-directive
"This method behaves as\n though it invokes <code>{@link #print(boolean)}</code> and then\n <code>{@link #println()}</code>.\n\n ",directive
"@param x  The <code>boolean</code> to be printed\n",non-directive
" Prints a character and then terminate the line.  ",non-directive
"This method behaves as\n though it invokes <code>{@link #print(char)}</code> and then\n <code>{@link #println()}</code>.\n\n ",directive
"@param x  The <code>char</code> to be printed.\n",non-directive
" A convenience method to write a formatted string to this output stream\n using the specified format string and arguments.\n\n ",non-directive
"<p> An invocation of this method of the form <tt>out.printf(format,\n args)</tt> behaves in exactly the same way as the invocation\n\n <pre>\n     out.format(format, args) </pre>\n\n ",directive
"@param  format\n         A format string as described in <a\n         href=\"../util/Formatter.html#syntax\">Format string syntax</a>\n\n ",directive
"@param  args\n         Arguments referenced by the format specifiers in the format\n         string.  ",directive
"If there are more arguments than format specifiers, the\n         extra arguments are ignored.  ",directive
"The number of arguments is\n         variable and may be zero.  ",directive
"The maximum number of arguments is\n         limited by the maximum dimension of a Java array as defined by\n         the <a href=\"http://java.sun.com/docs/books/vmspec/\">Java\n         Virtual Machine Specification</a>.  ",directive
"The behaviour on a\n         <tt>null</tt> argument depends on the <a\n         href=\"../util/Formatter.html#syntax\">conversion</a>.\n\n ",non-directive
"For specification of all possible\n          formatting errors, see the <a\n          href=\"../util/Formatter.html#detail\">Details</a> section of the\n          formatter class specification.\n\n ",directive
"@return  This output stream\n\n ",non-directive
"@since  1.5\n",non-directive
" Connects this piped writer to a receiver. ",non-directive
"If this object\n is already connected to some other piped reader, an \n <code>IOException</code> is thrown.\n ",directive
"<p>\n If <code>snk</code> is an unconnected piped reader and \n <code>src</code> is an unconnected piped writer, they may \n be connected by either the call:\n <blockquote><pre>\n src.connect(snk)</pre></blockquote>\n or the call:\n <blockquote><pre>\n snk.connect(src)</pre></blockquote>\n The two calls have the same effect.\n\n ",directive
"@param      snk   the piped reader to connect to.\n ",non-directive
" Reads the next character of data from this piped stream.\n ",non-directive
"If no character is available because the end of the stream \n has been reached, the value <code>-1</code> is returned. \n ",directive
"This method blocks until input data is available, the end of\n the stream is detected, or an exception is thrown. \n\n ",directive
"@return     the next character of data, or <code>-1</code> if the end of the\n             stream is reached.\n ",directive
" Connects this piped output stream to a receiver. ",non-directive
"If this object\n is already connected to some other piped input stream, an \n <code>IOException</code> is thrown.\n ",directive
"<p>\n If <code>snk</code> is an unconnected piped input stream and \n <code>src</code> is an unconnected piped output stream, they may \n be connected by either the call:\n <blockquote><pre>\n src.connect(snk)</pre></blockquote>\n or the call:\n <blockquote><pre>\n snk.connect(src)</pre></blockquote>\n The two calls have the same effect.\n\n ",non-directive
"@param      snk   the piped input stream to connect to.\n ",non-directive
" Writes the specified <code>byte</code> to the piped output stream. \n ",non-directive
"<p>\n Implements the <code>write</code> method of <code>OutputStream</code>.\n\n ",non-directive
"@param      b   the <code>byte</code> to be written.\n ",non-directive
" Receives a byte of data.  ",non-directive
"This method will block if no input is\n available.\n ",directive
"@param b the byte being received\n ",non-directive
"@since     JDK1.1\n",non-directive
" Specify stream protocol version to use when writing the stream.\n\n ",non-directive
"<p>This routine provides a hook to enable the current version of\n Serialization to write in a format that is backwards compatible to a\n previous version of the stream format.\n\n ",non-directive
"<p>Every effort will be made to avoid introducing additional\n backwards incompatibilities; however, sometimes there is no\n other alternative.\n\n ",directive
"@param	version use ProtocolVersion from java.io.ObjectStreamConstants.\n ",directive
"@see java.io.ObjectStreamConstants#PROTOCOL_VERSION_1\n ",non-directive
"@see java.io.ObjectStreamConstants#PROTOCOL_VERSION_2\n ",non-directive
"@since	1.2\n",non-directive
" Put the value of the named double field into the persistent field.\n\n ",non-directive
"@param  name the name of the serializable field\n ",non-directive
"@param  val the value to assign to the field\n ",non-directive
" Writes an array of bytes. ",non-directive
"This method will block until the bytes\n are actually written.\n ",directive
"@param b	the data to be written\n ",non-directive
" Reads the persistent fields from the stream and makes them available by\n name.\n \n",non-directive
"@return	the <code>GetField</code> object representing the persistent\n 		fields of the object being deserialized\n ",non-directive
"@since 1.2\n",non-directive
" Reads up to <code>len</code> bytes of data from this input stream \n into an array of bytes. ",non-directive
"This method blocks until some input is available.\n ",directive
"<p>\n The <code>read</code> method of \n <code>LineNumberInputStream</code> repeatedly calls the \n <code>read</code> method of zero arguments to fill in the byte array.\n\n ",non-directive
"@param      b     the buffer into which the data is read.\n ",non-directive
"@param      off   the start offset of the data.\n ",non-directive
"@param      len   the maximum number of bytes read.\n ",non-directive
"@return     the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end of\n             this stream has been reached.\n ",directive
"@see        java.io.LineNumberInputStream#read()\n",non-directive
" Reads characters into a portion of an array.\n\n ",non-directive
"@param      cbuf     Destination buffer\n ",non-directive
"@param      offset   Offset at which to start storing characters\n ",non-directive
"@param      length   Maximum number of characters to read\n\n ",non-directive
"@return     The number of characters read, or -1 if the end of the \n             stream has been reached\n\n ",non-directive
" Creates an InputStreamReader that uses the given charset decoder.  ",non-directive
"</p>\n\n ",non-directive
"@param  in       An InputStream\n ",non-directive
"@param  dec      A charset decoder\n\n ",non-directive
"@since 1.4\n @spec JSR-51\n",non-directive
" Constructs a FileWriter object given a file name with a boolean\n indicating whether or not to append the data written.\n\n ",non-directive
"@param fileName  String The system-dependent filename.\n ",non-directive
"@param append    boolean if <code>true</code>, then data will be written\n                  to the end of the file rather than the beginning.\n ",non-directive
" Returns the unique {@link java.nio.channels.FileChannel FileChannel}\n object associated with this file output stream. ",non-directive
"</p>\n\n <p> The initial {@link java.nio.channels.FileChannel#position()\n </code>position<code>} of the returned channel will be equal to the\n number of bytes written to the file so far unless this stream is in\n append mode, in which case it will be equal to the size of the file.\n ",directive
"Writing bytes to this stream will increment the channel's position\n accordingly.  ",non-directive
"Changing the channel's position, either explicitly or by\n writing, will change this stream's file position.\n\n ",non-directive
"@return  the file channel associated with this file output stream\n\n ",non-directive
"@since 1.4\n @spec JSR-51\n",non-directive
" Creates an output file stream to write to the specified file \n descriptor, which represents an existing connection to an actual \n file in the file system.\n ",non-directive
"<p>\n First, if there is a security manager, its <code>checkWrite</code> \n method is called with the file descriptor <code>fdObj</code> \n argument as its argument.\n\n ",directive
"@param      fdObj   the file descriptor to be opened for writing\n ",non-directive
"@see        java.lang.SecurityManager#checkWrite(java.io.FileDescriptor)\n",non-directive
" Skips over and discards <code>n</code> bytes of data from the\n input stream.\n\n ",non-directive
"<p>The <code>skip</code> method may, for a variety of\n reasons, end up skipping over some smaller number of bytes,\n possibly <code>0</code>. ",directive
"If <code>n</code> is negative, an\n <code>IOException</code> is thrown, even though the <code>skip</code>\n method of the {@link InputStream} superclass does nothing in this case.\n ",directive
"The actual number of bytes skipped is returned.\n\n ",non-directive
"<p>This method may skip more bytes than are remaining in the backing\n file. ",directive
"This produces no exception and the number of bytes skipped\n may include some number of bytes that were beyond the EOF of the\n backing file. ",directive
"Attempting to read from the stream after skipping past\n the end will result in -1 indicating the end of the file.\n\n ",directive
"@param      n   the number of bytes to be skipped.\n ",non-directive
"@return     the actual number of bytes skipped.\n ",non-directive
" Creates a new <code>File</code> instance from a parent pathname string\n and a child pathname string.\n\n ",non-directive
"<p> If <code>parent</code> is <code>null</code> then the new\n <code>File</code> instance is created as if by invoking the\n single-argument <code>File</code> constructor on the given\n <code>child</code> pathname string.\n\n ",non-directive
"<p> Otherwise the <code>parent</code> pathname string is taken to denote\n a directory, and the <code>child</code> pathname string is taken to\n denote either a directory or a file.  ",directive
"If the <code>child</code> pathname\n string is absolute then it is converted into a relative pathname in a\n system-dependent way.  ",non-directive
"If <code>parent</code> is the empty string then\n the new <code>File</code> instance is created by converting\n <code>child</code> into an abstract pathname and resolving the result\n against a system-dependent default directory.  ",directive
"Otherwise each pathname\n string is converted into an abstract pathname and the child abstract\n pathname is resolved against the parent.\n\n ",non-directive
"@param   parent  The parent pathname string\n ",non-directive
"@param   child   The child pathname string\n ",non-directive
" Writes to the output stream the eight\n low-order bits of the argument <code>b</code>.\n ",non-directive
"The 24 high-order  bits of <code>b</code>\n are ignored.\n\n ",directive
"@param      b   the byte to be written.\n ",non-directive
" Writes a string to the output stream.\n ",non-directive
"For every character in the string\n <code>s</code>,  taken in order, one byte\n is written to the output stream.  ",non-directive
"If\n <code>s</code> is <code>null</code>, a <code>NullPointerException</code>\n is thrown.<p>  If <code>s.length</code>\n is zero, then no bytes are written. ",non-directive
"Otherwise,\n the character <code>s[0]</code> is written\n first, then <code>s[1]</code>, and so on;\n the last character written is <code>s[s.length-1]</code>.\n ",non-directive
"For each character, one byte is written,\n the low-order byte, in exactly the manner\n of the <code>writeByte</code> method . ",non-directive
"The\n high-order eight bits of each character\n in the string are ignored.\n\n ",directive
"@param      s   the string of bytes to be written.\n ",non-directive
" Writes every character in the string <code>s</code>,\n to the output stream, in order,\n two bytes per character. ",non-directive
"If <code>s</code>\n is <code>null</code>, a <code>NullPointerException</code>\n is thrown.  ",non-directive
"If <code>s.length</code>\n is zero, then no characters are written.\n ",non-directive
"Otherwise, the character <code>s[0]</code>\n is written first, then <code>s[1]</code>,\n and so on; the last character written is\n <code>s[s.length-1]</code>. ",non-directive
"For each character,\n two bytes are actually written, high-order\n byte first, in exactly the manner of the\n <code>writeChar</code> method.\n\n ",directive
"@param      s   the string value to be written.\n ",non-directive
" Reads some number of bytes from the contained input stream and \n stores them into the buffer array <code>b</code>. ",non-directive
"The number of \n bytes actually read is returned as an integer. ",non-directive
"This method blocks \n until input data is available, end of file is detected, or an \n exception is thrown. \n \n",directive
" <p>If <code>b</code> is null, a <code>NullPointerException</code> is \n thrown. ",non-directive
"If the length of <code>b</code> is zero, then no bytes are \n read and <code>0</code> is returned; otherwise, there is an attempt \n to read at least one byte. ",directive
"If no byte is available because the \n stream is at end of file, the value <code>-1</code> is returned;\n otherwise, at least one byte is read and stored into <code>b</code>. \n \n",directive
" <p>The first byte read is stored into element <code>b[0]</code>, the \n next one into <code>b[1]</code>, and so on. ",non-directive
"The number of bytes read \n is, at most, equal to the length of <code>b</code>. ",non-directive
"Let <code>k</code> \n be the number of bytes actually read; these bytes will be stored in \n elements <code>b[0]</code> through <code>b[k-1]</code>, leaving \n elements <code>b[k]</code> through <code>b[b.length-1]</code> \n unaffected. \n \n",non-directive
" <p>The <code>read(b)</code> method has the same effect as: \n <blockquote><pre>\n read(b, 0, b.length) \n </pre></blockquote>\n\n ",directive
"@param      b   the buffer into which the data is read.\n ",non-directive
"@return     the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end\n             of the stream has been reached.\n ",directive
"@see        java.io.FilterInputStream#in\n ",non-directive
"@see        java.io.InputStream#read(byte[], int, int)\n",non-directive
" See the general contract of the <code>readShort</code>\n method of <code>DataInput</code>.\n ",directive
"<p>\n Bytes\n for this operation are read from the contained\n input stream.\n\n ",non-directive
"@return     the next two bytes of this input stream, interpreted as a\n             signed 16-bit number.\n ",non-directive
"@see        java.io.FilterInputStream#in\n",non-directive
" See the general contract of the <code>readLong</code>\n method of <code>DataInput</code>.\n ",directive
"<p>\n Bytes\n for this operation are read from the contained\n input stream.\n\n ",non-directive
"@return     the next eight bytes of this input stream, interpreted as a\n             <code>long</code>.\n ",non-directive
"@see        java.io.FilterInputStream#in\n",non-directive
" A convenience method to write a formatted string to this console's\n output stream using the specified format string and arguments.\n\n ",non-directive
"<p> An invocation of this method of the form <tt>con.printf(format,\n args)</tt> behaves in exactly the same way as the invocation of\n <pre>con.format(format, args)</pre>.\n\n ",directive
"@param  format\n         A format string as described in <a\n         href=\"../util/Formatter.html#syntax\">Format string syntax</a>.\n\n ",directive
"@param  args\n         Arguments referenced by the format specifiers in the format\n         string.  ",directive
"If there are more arguments than format specifiers, the\n         extra arguments are ignored.  ",directive
"The number of arguments is\n         variable and may be zero.  ",directive
"The maximum number of arguments is\n         limited by the maximum dimension of a Java array as defined by\n         the <a href=\"http://java.sun.com/docs/books/vmspec/\">Java\n         Virtual Machine Specification</a>.  ",directive
"The behaviour on a\n         <tt>null</tt> argument depends on the <a\n         href=\"../util/Formatter.html#syntax\">conversion</a>.\n\n ",non-directive
"For specification of all possible\n          formatting errors, see the <a\n          href=\"../util/Formatter.html#detail\">Details</a> section of the\n          formatter class specification.\n\n ",directive
"@return  This console\n",non-directive
" Constructs an <code>UnknownHostException</code> with the specified\n detail message.\n\n ",non-directive
"@param s the detail message\n ",non-directive
"@since JDK1.1\n",non-directive
" Constructs a <code>NotBoundException</code> with the specified\n detail message.\n\n ",non-directive
"@param s the detail message\n ",non-directive
"@since JDK1.1\n",non-directive
" Returns a new copy of the contained marshalledobject.  ",non-directive
"The internal\n representation is deserialized with the semantics used for\n unmarshaling paramters for RMI calls.\n\n ",directive
"@return a copy of the contained object\n ",non-directive
"could not be found\n ",non-directive
"@since 1.2\n",non-directive
" Constructs a <code>ConnectException</code> with the specified\n detail message.\n\n ",non-directive
"@param s the detail message\n ",non-directive
"@since JDK1.1\n",non-directive
" Returns the group's property-override list.\n ",non-directive
"@return the property-override list, or <code>null</code>\n ",non-directive
"@since 1.2\n",non-directive
" Returns the group's command-environment control object.\n ",non-directive
"@return the command-environment object, or <code>null</code>\n ",non-directive
"@since 1.2\n",non-directive
" Fetch the configured path-qualified java command name.\n\n ",non-directive
"@return the configured name, or <code>null</code> if configured to\n accept the default\n ",non-directive
"@since 1.2\n",non-directive
" Compares two command environments for content equality.\n\n ",non-directive
"@param	obj	the Object to compare with\n ",non-directive
"@return	true if these Objects are equal; false otherwise.\n ",non-directive
"@see		java.util.Hashtable\n ",non-directive
"@since 1.2\n",non-directive
" Returns the object's activation identifier.  ",non-directive
"The method is\n protected so that only subclasses can obtain an object's\n identifier.\n ",directive
"@return the object's activation identifier\n ",non-directive
"@since 1.2\n",non-directive
" Creates a \"well-known\" <code>UID</code>.\n\n ",non-directive
"There are 2<sup>16</sup> possible such well-known ids.\n\n ",non-directive
"<p>A <code>UID</code> created via this constructor will not\n clash with any <code>UID</code>s generated via the no-arg\n constructor.\n\n ",directive
"@param	num number for well-known <code>UID</code>\n",non-directive
" Returns the handler for socket creation failure set by the\n <code>setFailureHandler</code> method.\n ",non-directive
"@return the failure handler\n ",non-directive
"@see #setFailureHandler(RMIFailureHandler)\n ",non-directive
"@since JDK1.1\n",non-directive
" Returns the string representation of the operation.\n ",non-directive
"@deprecated no replacement\n ",directive
"@since JDK1.1\n",non-directive
" Compares the specified object with this <code>ObjID</code> for\n equality.\n\n ",non-directive
"This method returns <code>true</code> if and only if the\n specified object is an <code>ObjID</code> instance with the same\n object number and address space identifier as this one.\n\n ",directive
"@param	obj the object to compare this <code>ObjID</code> to\n\n ",non-directive
"@return	<code>true</code> if the given object is equivalent to\n this one, and <code>false</code> otherwise\n",non-directive
" Loads a class from the location specified by the\n <code>java.rmi.server.codebase</code> property.\n\n ",non-directive
"@param  name the name of the class to load\n ",non-directive
"@return the <code>Class</code> object representing the loaded class\n ",non-directive
"@since JDK1.1\n ",non-directive
"@deprecated no replacement\n",directive
" Constructs a <tt>TypeNotPresentException</tt> for the named type\n with the specified cause.\n\n ",non-directive
"@param typeName the fully qualified name of the unavailable type\n ",non-directive
"@param cause the exception that was thrown when the system attempted to\n    load the named type, or <tt>null</tt> if unavailable or inapplicable\n",non-directive
" Prints this throwable and its backtrace to the specified\n print writer.\n\n ",non-directive
"@param s <code>PrintWriter</code> to use for output\n ",non-directive
"@since   JDK1.1\n",non-directive
" Constructs a new throwable with the specified detail message and\n cause.  ",non-directive
"<p>Note that the detail message associated with\n <code>cause</code> is <i>not</i> automatically incorporated in\n this throwable's detail message.\n\n ",directive
"<p>The {@link #fillInStackTrace()} method is called to initialize\n the stack trace data in the newly created throwable.\n\n ",directive
"@param  message the detail message (which is saved for later retrieval\n         by the {@link #getMessage()} method).\n ",directive
"@param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method).  ",directive
"(A <tt>null</tt> value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)\n ",non-directive
"@since  1.4\n",non-directive
" Forces the thread to stop executing.\n ",non-directive
"<p>\n If there is a security manager installed, the <code>checkAccess</code>\n method of this thread is called, which may result in a \n <code>SecurityException</code> being raised (in the current thread). \n ",directive
"<p>\n If this thread is different from the current thread (that is, the current\n thread is trying to stop a thread other than itself) or\n <code>obj</code> is not an instance of <code>ThreadDeath</code>, the\n security manager's <code>checkPermission</code> method (with the\n <code>RuntimePermission(\"stopThread\")</code> argument) is called in\n addition.\n ",directive
"Again, this may result in throwing a \n <code>SecurityException</code> (in the current thread). \n ",directive
"<p>\n If the argument <code>obj</code> is null, a \n <code>NullPointerException</code> is thrown (in the current thread). \n ",non-directive
"<p>\n The thread represented by this thread is forced to stop \n whatever it is doing abnormally and to throw the \n <code>Throwable</code> object <code>obj</code> as an exception. ",non-directive
"This \n is an unusual action to take; normally, the <code>stop</code> method \n that takes no arguments should be used. \n ",directive
"<p>\n It is permitted to stop a thread that has not yet been started. \n ",directive
"If the thread is eventually started, it immediately terminates. \n\n ",non-directive
"@param      obj   the Throwable object to be thrown.\n ",non-directive
"@see        #interrupt()\n ",non-directive
"@see        #checkAccess()\n ",non-directive
"@see        #run()\n ",non-directive
"@see        #start()\n ",non-directive
"@see        #stop()\n ",non-directive
"@see        SecurityManager#checkAccess(Thread)\n ",non-directive
"@see        SecurityManager#checkPermission\n ",non-directive
"@deprecated This method is inherently unsafe.  ",directive
"See {@link #stop()}\n        for details.  ",directive
"An additional danger of this\n        method is that it may be used to generate exceptions that the\n        target thread is unprepared to handle (including checked\n        exceptions that the thread could not possibly throw, were it\n        not for this method).\n        ",directive
"For more information, see \n        <a href=\"{@docRoot}/../technotes/guides/concurrency/threadPrimitiveDeprecation.html\">Why \n        are Thread.stop, Thread.suspend and Thread.resume Deprecated?</a>.\n",directive
" Counts the number of stack frames in this thread. ",non-directive
"The thread must \n be suspended. \n\n ",directive
"@return     the number of stack frames in this thread.\n ",non-directive
"@deprecated The definition of this call depends on {@link #suspend},\n		   which is deprecated.  ",directive
"Further, the results of this call\n		   were never well-defined.\n",directive
" Allocates a new <code>Thread</code> object so that it has \n <code>target</code> as its run object, has the specified \n <code>name</code> as its name, and belongs to the thread group \n referred to by <code>group</code>.\n ",non-directive
"<p>\n If <code>group</code> is <code>null</code> and there is a \n security manager, the group is determined by the security manager's \n <code>getThreadGroup</code> method. ",non-directive
"If <code>group</code> is \n <code>null</code> and there is not a security manager, or the\n security manager's <code>getThreadGroup</code> method returns \n <code>null</code>, the group is set to be the same ThreadGroup \n as the thread that is creating the new thread.\n \n",non-directive
" <p>If there is a security manager, its <code>checkAccess</code> \n method is called with the ThreadGroup as its argument.\n ",directive
"<p>In addition, its <code>checkPermission</code>\n method is called with the\n <code>RuntimePermission(\"enableContextClassLoaderOverride\")</code>\n permission when invoked directly or indirectly by the constructor\n of a subclass which overrides the <code>getContextClassLoader</code>\n or <code>setContextClassLoader</code> methods.\n ",directive
"This may result in a SecurityException.\n\n ",directive
"<p>\n If the <code>target</code> argument is not <code>null</code>, the \n <code>run</code> method of the <code>target</code> is called when \n this thread is started. ",non-directive
"If the target argument is \n <code>null</code>, this thread's <code>run</code> method is called \n when this thread is started. \n ",non-directive
"<p>\n The priority of the newly created thread is set equal to the \n priority of the thread creating it, that is, the currently running \n thread. ",non-directive
"The method <code>setPriority</code> may be used to \n change the priority to a new value. \n ",directive
"<p>\n The newly created thread is initially marked as being a daemon \n thread if and only if the thread creating it is currently marked \n as a daemon thread. ",directive
"The method <code>setDaemon </code> may be used \n to change whether or not a thread is a daemon. \n\n ",directive
"@param      group     the thread group.\n ",non-directive
"@param      target   the object whose <code>run</code> method is called.\n ",non-directive
"@param      name     the name of the new thread.\n ",non-directive
"@see        Runnable#run()\n ",non-directive
"@see        #run()\n ",non-directive
"@see        #setDaemon(boolean)\n ",non-directive
"@see        #setPriority(int)\n ",non-directive
"@see        ThreadGroup#checkAccess()\n ",non-directive
"@see        SecurityManager#checkAccess\n",non-directive
" Returns the same hash code for the given object as\n would be returned by the default method hashCode(),\n whether or not the given object's class overrides\n hashCode().\n ",non-directive
"The hash code for the null reference is zero.\n\n ",non-directive
"@param x object for which the hashCode is to be calculated\n ",non-directive
"@return  the hashCode\n ",non-directive
"@since   JDK1.1\n",non-directive
" Copies characters from this string into the destination character\n array.\n ",non-directive
"<p>\n The first character to be copied is at index <code>srcBegin</code>;\n the last character to be copied is at index <code>srcEnd-1</code>\n (thus the total number of characters to be copied is\n <code>srcEnd-srcBegin</code>). ",non-directive
"The characters are copied into the\n subarray of <code>dst</code> starting at index <code>dstBegin</code>\n and ending at index:\n <p><blockquote><pre>\n     dstbegin + (srcEnd-srcBegin) - 1\n </pre></blockquote>\n\n ",non-directive
"@param      srcBegin   index of the first character in the string\n                        to copy.\n ",non-directive
"@param      srcEnd     index after the last character in the string\n                        to copy.\n ",non-directive
"@param      dst        the destination array.\n ",non-directive
"@param      dstBegin   the start offset in the destination array.\n ",non-directive
"-- <code>srcBegin</code> is negative.\n            ",directive
"-- <code>srcBegin</code> is greater than <code>srcEnd</code>\n            ",non-directive
"-- <code>srcEnd</code> is greater than the length of this\n                string\n            ",non-directive
"-- <code>dstBegin</code> is negative\n            ",non-directive
"-- <code>dstBegin+(srcEnd-srcBegin)</code> is larger than\n                <code>dst.length</code>\n",non-directive
" Tests if two string regions are equal.\n ",non-directive
"<p>\n A substring of this <tt>String</tt> object is compared to a substring\n of the argument <tt>other</tt>. ",non-directive
"The result is <tt>true</tt> if these\n substrings represent character sequences that are the same, ignoring\n case if and only if <tt>ignoreCase</tt> is true. ",non-directive
"The substring of\n this <tt>String</tt> object to be compared begins at index\n <tt>toffset</tt> and has length <tt>len</tt>. ",non-directive
"The substring of\n <tt>other</tt> to be compared begins at index <tt>ooffset</tt> and\n has length <tt>len</tt>. ",non-directive
"The result is <tt>false</tt> if and only if\n at least one of the following is true:\n ",non-directive
"-- <tt>toffset</tt> is negative.\n ",non-directive
"-- <tt>ooffset</tt> is negative.\n ",non-directive
"-- <tt>toffset+len</tt> is greater than the length of this\n <tt>String</tt> object.\n ",non-directive
"-- <tt>ooffset+len</tt> is greater than the length of the other\n argument.\n ",non-directive
"-- <tt>ignoreCase</tt> is <tt>false</tt> and there is some nonnegative\n integer <i>k</i> less than <tt>len</tt> such that:\n <blockquote><pre>\n this.charAt(toffset+k) != other.charAt(ooffset+k)\n </pre></blockquote>\n ",non-directive
"-- <tt>ignoreCase</tt> is <tt>true</tt> and there is some nonnegative\n integer <i>k</i> less than <tt>len</tt> such that:\n <blockquote><pre>\n Character.toLowerCase(this.charAt(toffset+k)) !=\n               Character.toLowerCase(other.charAt(ooffset+k))\n </pre></blockquote>\n and:\n <blockquote><pre>\n Character.toUpperCase(this.charAt(toffset+k)) !=\n         Character.toUpperCase(other.charAt(ooffset+k))\n </pre></blockquote>\n \n\n ",non-directive
"@param   ignoreCase   if <code>true</code>, ignore case when comparing\n                       characters.\n ",non-directive
"@param   toffset      the starting offset of the subregion in this\n                       string.\n ",non-directive
"@param   other        the string argument.\n ",non-directive
"@param   ooffset      the starting offset of the subregion in the string\n                       argument.\n ",non-directive
"@param   len          the number of characters to compare.\n ",non-directive
"@return  <code>true</code> if the specified subregion of this string\n          matches the specified subregion of the string argument;\n          <code>false</code> otherwise. ",non-directive
"Whether the matching is exact\n          or case insensitive depends on the <code>ignoreCase</code>\n          argument.\n",non-directive
" Returns the index within this string of the first occurrence of the\n specified character, starting the search at the specified index.\n ",non-directive
"<p>\n If a character with value <code>ch</code> occurs in the\n character sequence represented by this <code>String</code>\n object at an index no smaller than <code>fromIndex</code>, then\n the index of the first such occurrence is returned. ",non-directive
"For values\n of <code>ch</code> in the range from 0 to 0xFFFF (inclusive),\n this is the smallest value <i>k</i> such that:\n <blockquote><pre>\n (this.charAt(<i>k</i>) == ch) && (<i>k</i> &gt;= fromIndex)\n </pre></blockquote>\n is true. ",non-directive
"For other values of <code>ch</code>, it is the\n smallest value <i>k</i> such that:\n <blockquote><pre>\n (this.codePointAt(<i>k</i>) == ch) && (<i>k</i> &gt;= fromIndex)\n </pre></blockquote>\n is true. ",non-directive
"In either case, if no such character occurs in this\n string at or after position <code>fromIndex</code>, then\n <code>-1</code> is returned.\n\n ",non-directive
"<p>\n There is no restriction on the value of <code>fromIndex</code>. ",non-directive
"If it\n is negative, it has the same effect as if it were zero: this entire\n string may be searched. ",non-directive
"If it is greater than the length of this\n string, it has the same effect as if it were equal to the length of\n this string: <code>-1</code> is returned.\n\n ",non-directive
"<p>All indices are specified in <code>char</code> values\n (Unicode code units).\n\n ",non-directive
"@param   ch          a character (Unicode code point).\n ",non-directive
"@param   fromIndex   the index to start the search from.\n ",non-directive
"@return  the index of the first occurrence of the character in the\n          character sequence represented by this object that is greater\n          than or equal to <code>fromIndex</code>, or <code>-1</code>\n          if the character does not occur.\n",non-directive
" Replaces the first substring of this string that matches the given <a\n href=\"../util/regex/Pattern.html#sum\">regular expression</a> with the\n given replacement.\n\n ",non-directive
"<p> An invocation of this method of the form\n <i>str</i><tt>.replaceFirst(</tt><i>regex</i><tt>,</tt> <i>repl</i><tt>)</tt>\n yields exactly the same result as the expression\n\n <blockquote><tt>\n {@link java.util.regex.Pattern}.{@link java.util.regex.Pattern#compile\n compile}(</tt><i>regex</i><tt>).{@link\n java.util.regex.Pattern#matcher(java.lang.CharSequence)\n matcher}(</tt><i>str</i><tt>).{@link java.util.regex.Matcher#replaceFirst\n replaceFirst}(</tt><i>repl</i><tt>)</tt></blockquote>\n\n<p>\n Note that backslashes (<tt>\</tt>) and dollar signs (<tt>$</tt>) in the\n replacement string may cause the results to be different than if it were\n being treated as a literal replacement string; see\n {@link java.util.regex.Matcher#replaceFirst}.\n ",directive
"Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n meaning of these characters, if desired.\n\n ",directive
"@param   regex\n          the regular expression to which this string is to be matched\n ",non-directive
"@param   replacement\n          the string to be substituted for the first match\n\n ",non-directive
"@return  The resulting <tt>String</tt>\n\n ",non-directive
"@see java.util.regex.Pattern\n\n ",non-directive
"@since 1.4\n @spec JSR-51\n",non-directive
" Returns the smaller of two <code>int</code> values. ",non-directive
"That is,\n the result the argument closer to the value of\n <code>Integer.MIN_VALUE</code>.  ",non-directive
"If the arguments have the same\n value, the result is that same value.\n\n ",non-directive
"@param   a   an argument.\n ",non-directive
"@param   b   another argument.\n ",non-directive
"@return  the smaller of <code>a</code> and <code>b</code>.\n ",non-directive
"@see     java.lang.Long#MIN_VALUE\n",non-directive
" Returns the floating-point value adjacent to {@code d} in\n the direction of positive infinity.  ",non-directive
"This method is\n semantically equivalent to {@code nextAfter(d,\n Double.POSITIVE_INFINITY)}; however, a {@code nextUp}\n implementation may run faster than its equivalent\n {@code nextAfter} call.\n\n ",directive
"<p>Special Cases:\n \n ",non-directive
"--  If the argument is NaN, the result is NaN.\n\n ",non-directive
"--  If the argument is positive infinity, the result is\n positive infinity.\n\n ",non-directive
"--  If the argument is zero, the result is\n {@link Double#MIN_VALUE}\n\n \n\n ",non-directive
"@param d starting floating-point value\n ",non-directive
"@return The adjacent floating-point value closer to positive\n infinity.\n ",non-directive
"@since 1.6\n",non-directive
" Compares this object to the specified object.  ",non-directive
"The result is\n <code>true</code> if and only if the argument is not\n <code>null</code> and is a <code>Short</code> object that\n contains the same <code>short</code> value as this object.\n\n ",non-directive
"@param obj	the object to compare with\n ",non-directive
"@return 		<code>true</code> if the objects are the same;\n			<code>false</code> otherwise.\n",non-directive
" Creates a <code>SecurityException</code> with the specified\n detail message and cause.\n\n ",non-directive
"@param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n ",non-directive
"@param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  ",non-directive
"(A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n ",non-directive
"@since 1.5\n",non-directive
" Returns the number of processors available to the Java virtual machine.\n\n ",non-directive
"<p> This value may change during a particular invocation of the virtual\n machine.  ",directive
"Applications that are sensitive to the number of available\n processors should therefore occasionally poll this property and adjust\n their resource usage appropriately. ",directive
"</p>\n\n ",non-directive
"@return  the maximum number of processors available to the virtual\n          machine; never smaller than one\n ",directive
"@since 1.4\n",non-directive
" Returns the amount of free memory in the Java Virtual Machine.\n ",non-directive
"Calling the \n <code>gc</code> method may result in increasing the value returned \n by <code>freeMemory.</code>\n\n ",directive
"@return  an approximation to the total amount of memory currently\n          available for future allocated objects, measured in bytes.\n",non-directive
" Constructs a process builder with the specified operating\n system program and arguments.  ",non-directive
"This constructor does <i>not</i>\n make a copy of the <code>command</code> list.  ",directive
"Subsequent\n updates to the list will be reflected in the state of the\n process builder.  ",directive
"It is not checked whether\n <code>command</code> corresponds to a valid operating system\n command.</p>\n\n ",directive
"@param   command  The list containing the program and its arguments\n\n ",non-directive
" Compare this package's specification version with a\n desired version. ",non-directive
"It returns true if\n this packages specification version number is greater than or equal\n to the desired version number. ",directive
"<p>\n\n Version numbers are compared by sequentially comparing corresponding\n components of the desired and specification strings.\n ",non-directive
"Each component is converted as a decimal integer and the values\n compared.\n ",non-directive
"If the specification value is greater than the desired\n value true is returned. ",non-directive
"If the value is less false is returned.\n ",non-directive
"If the values are equal the period is skipped and the next pair of\n components is compared.\n\n ",non-directive
"@param desired the version string of the desired version.\n ",non-directive
"@return true if this package's version number is greater\n 		than or equal to the desired version number\n\n ",non-directive
" Returns the string representation of this Package.\n ",non-directive
"Its value is the string \"package \" and the package name.\n ",non-directive
"If the package title is defined it is appended.\n ",non-directive
"If the package version is defined it is appended.\n ",non-directive
"@return the string representation of the package.\n",non-directive
" Returns the size of an ulp of the argument.  ",non-directive
"An ulp of a\n <code>float</code> value is the positive distance between this\n floating-point value and the <code>float</code> value next\n larger in magnitude.  ",non-directive
"Note that for non-NaN <i>x</i>,\n <code>ulp(-<i>x</i>) == ulp(<i>x</i>)</code>.\n \n",directive
" <p>Special Cases:\n \n ",non-directive
"--  If the argument is NaN, then the result is NaN.\n ",directive
"--  If the argument is positive or negative infinity, then the\n result is positive infinity.\n ",non-directive
"--  If the argument is positive or negative zero, then the result is\n <code>Float.MIN_VALUE</code>.\n ",non-directive
"--  If the argument is &plusmn;<code>Float.MAX_VALUE</code>, then\n the result is equal to 2<sup>104</sup>.\n ",non-directive
"\n\n ",non-directive
"@param f the floating-point value whose ulp is to be returned\n ",non-directive
"@return the size of an ulp of the argument\n ",non-directive
"@author Joseph D. ",non-directive
"Darcy\n ",non-directive
"@since 1.5\n",non-directive
" Returns the unbiased exponent used in the representation of a\n {@code float}.  ",non-directive
"Special cases:\n\n \n ",non-directive
"-- If the argument is NaN or infinite, then the result is\n {@link Float#MAX_EXPONENT} + 1.\n ",directive
"-- If the argument is zero or subnormal, then the result is\n {@link Float#MIN_EXPONENT} -1.\n ",non-directive
"\n ",non-directive
"@param f a {@code float} value\n ",non-directive
"@return the unbiased exponent of the argument\n ",non-directive
"@since 1.6\n",non-directive
" Returns a <tt>long</tt> value with at most a single one-bit, in the\n position of the lowest-order (\"rightmost\") one-bit in the specified\n <tt>long</tt> value.  ",non-directive
"Returns zero if the specified value has no\n one-bits in its two's complement binary representation, that is, if it\n is equal to zero.\n\n ",non-directive
"@return a <tt>long</tt> value with a single one-bit, in the position\n     of the lowest-order one-bit in the specified value, or zero if\n     the specified value is itself equal to zero.\n ",non-directive
"@since 1.5\n",non-directive
" Returns the number of zero bits following the lowest-order (\"rightmost\")\n one-bit in the two's complement binary representation of the specified\n <tt>long</tt> value.  ",non-directive
"Returns 64 if the specified value has no\n one-bits in its two's complement representation, in other words if it is\n equal to zero.\n\n ",non-directive
"@return the number of zero bits following the lowest-order (\"rightmost\")\n     one-bit in the two's complement binary representation of the\n     specified <tt>long</tt> value, or 64 if the value is equal\n     to zero.\n ",non-directive
"@since 1.5\n",non-directive
" Constructs a newly allocated <code>Long</code> object that\n represents the <code>long</code> value indicated by the\n <code>String</code> parameter. ",non-directive
"The string is converted to a\n <code>long</code> value in exactly the manner used by the\n <code>parseLong</code> method for radix 10.\n\n ",directive
"@param      s   the <code>String</code> to be converted to a \n		   <code>Long</code>.\n ",non-directive
"@see        java.lang.Long#parseLong(java.lang.String, int)\n",non-directive
" Returns a <code>String</code> object representing this\n <code>Integer</code>'s value. ",non-directive
"The value is converted to signed\n decimal representation and returned as a string, exactly as if\n the integer value were given as an argument to the {@link\n java.lang.Integer#toString(int)} method.\n\n ",directive
"@return  a string representation of the value of this object in\n          base&nbsp;10.\n",non-directive
" Returns the number of one-bits in the two's complement binary\n representation of the specified <tt>int</tt> value.  ",non-directive
"This function is\n sometimes referred to as the <i>population count</i>.\n\n ",non-directive
"@return the number of one-bits in the two's complement binary\n     representation of the specified <tt>int</tt> value.\n ",non-directive
"@since 1.5\n",non-directive
" Returns the value obtained by reversing the order of the bytes in the\n two's complement representation of the specified <tt>int</tt> value.\n\n ",non-directive
"@return the value obtained by reversing the bytes in the specified\n     <tt>int</tt> value.\n ",non-directive
"@since 1.5\n",non-directive
" Returns a hash code for this <code>Float</code> object. ",non-directive
"The\n result is the integer bit representation, exactly as produced\n by the method {@link #floatToIntBits(float)}, of the primitive\n <code>float</code> value represented by this <code>Float</code>\n object.\n\n ",non-directive
"@return a hash code value for this object.  \n",non-directive
" Returns a representation of the specified floating-point value\n according to the IEEE 754 floating-point \"single format\" bit\n layout, preserving Not-a-Number (NaN) values.\n ",directive
"<p>\n Bit 31 (the bit that is selected by the mask \n <code>0x80000000</code>) represents the sign of the floating-point \n number. \n ",non-directive
"Bits 30-23 (the bits that are selected by the mask \n <code>0x7f800000</code>) represent the exponent. \n ",non-directive
"Bits 22-0 (the bits that are selected by the mask \n <code>0x007fffff</code>) represent the significand (sometimes called \n the mantissa) of the floating-point number. \n ",non-directive
"<p>If the argument is positive infinity, the result is \n <code>0x7f800000</code>. \n ",directive
"<p>If the argument is negative infinity, the result is \n <code>0xff800000</code>.\n ",directive
"<p>\n If the argument is NaN, the result is the integer representing\n the actual NaN value.  ",directive
"Unlike the <code>floatToIntBits</code>\n method, <code>floatToRawIntBits</code> does not collapse all the\n bit patterns encoding a NaN to a single &quot;canonical&quot;\n NaN value.\n ",directive
"<p>\n In all cases, the result is an integer that, when given to the\n {@link #intBitsToFloat(int)} method, will produce a\n floating-point value the same as the argument to\n <code>floatToRawIntBits</code>.\n ",non-directive
"@param   value   a floating-point number.\n ",non-directive
"@return the bits that represent the floating-point number.\n ",non-directive
"@since 1.3\n",non-directive
" Constructs an ExceptionInInitializerError with the specified detail \n message string.  ",non-directive
"A detail message is a String that describes this \n particular exception. ",non-directive
"The detail message string is saved for later \n retrieval by the {@link Throwable#getMessage()} method. ",non-directive
"There is no \n saved throwable object. \n\n\n ",directive
"@param s the detail message\n",non-directive
" Constructs a newly allocated <code>Double</code> object that\n represents the floating-point value of type <code>double</code>\n represented by the string. ",non-directive
"The string is converted to a\n <code>double</code> value as if by the <code>valueOf</code> method.\n\n ",directive
"@param      s   a string to be converted to a <code>Double</code>.\n ",non-directive
"@see        java.lang.Double#valueOf(java.lang.String)\n",non-directive
" Returns the <code>Class</code> object associated with the class or\n interface with the given string name, using the given class loader.\n ",non-directive
"Given the fully qualified name for a class or interface (in the same\n format returned by <code>getName</code>) this method attempts to\n locate, load, and link the class or interface.  ",non-directive
"The specified class\n loader is used to load the class or interface.  ",non-directive
"If the parameter\n <code>loader</code> is null, the class is loaded through the bootstrap\n class loader.  ",non-directive
"The class is initialized only if the\n <code>initialize</code> parameter is <code>true</code> and if it has\n not been initialized earlier.\n\n ",directive
"<p> If <code>name</code> denotes a primitive type or void, an attempt\n will be made to locate a user-defined class in the unnamed package whose\n name is <code>name</code>. ",directive
"Therefore, this method cannot be used to\n obtain any of the <code>Class</code> objects representing primitive\n types or void.\n\n ",directive
"<p> If <code>name</code> denotes an array class, the component type of\n the array class is loaded but not initialized.\n\n ",directive
"<p> For example, in an instance method the expression:\n\n <blockquote><pre>\n  Class.forName(\"Foo\")\n </pre></blockquote>\n\n is equivalent to:\n\n <blockquote><pre>\n  Class.forName(\"Foo\", true, this.getClass().getClassLoader())\n </pre></blockquote>\n\n Note that this method throws errors related to loading, linking or\n initializing as specified in Sections 12.2, 12.3 and 12.4 of <em>The\n Java Language Specification</em>.\n ",directive
"Note that this method does not check whether the requested class \n is accessible to its caller.\n\n ",directive
"<p> If the <code>loader</code> is <code>null</code>, and a security\n manager is present, and the caller's class loader is not null, then this\n method calls the security manager's <code>checkPermission</code> method\n with a <code>RuntimePermission(\"getClassLoader\")</code> permission to\n ensure it's ok to access the bootstrap class loader.\n\n ",non-directive
"@param name       fully qualified name of the desired class\n ",non-directive
"@param initialize whether the class must be initialized\n ",non-directive
"@param loader     class loader from which the class must be loaded\n ",non-directive
"@return           class object representing the desired class\n \n ",non-directive
"@see 	  java.lang.Class#forName(String) \n ",non-directive
"@see 	  java.lang.ClassLoader\n ",non-directive
"@since 	  1.2\n",non-directive
" Returns <tt>true</tt> if this class is a synthetic class;\n returns <tt>false</tt> otherwise.\n ",non-directive
"@return <tt>true</tt> if and only if this class is a synthetic class as\n         defined by the Java Language Specification.\n ",non-directive
"@since 1.5\n",non-directive
" Returns the  name of the entity (class, interface, array class,\n primitive type, or void) represented by this <tt>Class</tt> object,\n as a <tt>String</tt>.\n \n",non-directive
" <p> If this class object represents a reference type that is not an\n array type then the binary name of the class is returned, as specified\n by the Java Language Specification, Second Edition.\n\n ",directive
"<p> If this class object represents a primitive type or void, then the\n name returned is a <tt>String</tt> equal to the Java language\n keyword corresponding to the primitive type or void.\n \n",directive
" <p> If this class object represents a class of arrays, then the internal\n form of the name consists of the name of the element type preceded by\n one or more '<tt>[</tt>' characters representing the depth of the array\n nesting.  ",directive
"The encoding of element type names is as follows:\n\n <blockquote><table summary=\"Element types and encodings\">\n <tr><th> Element Type <th> &nbsp;&nbsp;&nbsp; <th> Encoding\n <tr><td> boolean      <td> &nbsp;&nbsp;&nbsp; <td align=center> Z\n <tr><td> byte         <td> &nbsp;&nbsp;&nbsp; <td align=center> B\n <tr><td> char         <td> &nbsp;&nbsp;&nbsp; <td align=center> C\n <tr><td> class or interface  \n                       <td> &nbsp;&nbsp;&nbsp; <td align=center> L<i>classname</i>;\n <tr><td> double       <td> &nbsp;&nbsp;&nbsp; <td align=center> D\n <tr><td> float        <td> &nbsp;&nbsp;&nbsp; <td align=center> F\n <tr><td> int          <td> &nbsp;&nbsp;&nbsp; <td align=center> I\n <tr><td> long         <td> &nbsp;&nbsp;&nbsp; <td align=center> J\n <tr><td> short        <td> &nbsp;&nbsp;&nbsp; <td align=center> S\n </table></blockquote>\n\n <p> The class or interface name <i>classname</i> is the binary name of\n the class specified above.\n\n ",directive
"<p> Examples:\n <blockquote><pre>\n String.class.getName()\n     returns \"java.lang.String\"\n byte.class.getName()\n     returns \"byte\"\n (new Object[3]).getClass().getName()\n     returns \"[Ljava.lang.Object;\"\n (new int[3][4][5][6][7][8][9]).getClass().getName()\n     returns \"[[[[[[[I\"\n </pre></blockquote>\n\n ",non-directive
"@return  the name of the class or interface\n          represented by this object.\n",non-directive
" Returns the class loader for the class.  ",non-directive
"Some implementations may use\n null to represent the bootstrap class loader. ",non-directive
"This method will return\n null in such implementations if this class was loaded by the bootstrap\n class loader.\n\n ",non-directive
"<p> If a security manager is present, and the caller's class loader is\n not null and the caller's class loader is not the same as or an ancestor of\n the class loader for the class whose class loader is requested, then\n this method calls the security manager's <code>checkPermission</code> \n method with a <code>RuntimePermission(\"getClassLoader\")</code> \n permission to ensure it's ok to access the class loader for the class.\n \n",directive
" <p>If this object\n represents a primitive type or void, null is returned.\n\n ",non-directive
"@return  the class loader that loaded the class or interface\n          represented by this object.\n ",non-directive
"@see java.lang.ClassLoader\n ",non-directive
"@see SecurityManager#checkPermission\n ",non-directive
"@see java.lang.RuntimePermission\n",non-directive
" Casts an object to the class or interface represented\n by this <tt>Class</tt> object.\n\n ",non-directive
"@param obj the object to be cast\n ",non-directive
"@return the object after casting, or null if obj is null\n\n ",non-directive
"@since 1.5\n",non-directive
" Determines if the specified character (Unicode code point) is a\n lowercase character.\n ",non-directive
"<p>\n A character is lowercase if its general category type, provided\n by {@link Character#getType getType(codePoint)}, is\n <code>LOWERCASE_LETTER</code>.\n ",non-directive
"<p>\n The following are examples of lowercase characters:\n <p><blockquote><pre>\n a b c d e f g h i j k l m n o p q r s t u v w x y z\n '&#92;u00DF' '&#92;u00E0' '&#92;u00E1' '&#92;u00E2' '&#92;u00E3' '&#92;u00E4' '&#92;u00E5' '&#92;u00E6' \n '&#92;u00E7' '&#92;u00E8' '&#92;u00E9' '&#92;u00EA' '&#92;u00EB' '&#92;u00EC' '&#92;u00ED' '&#92;u00EE'\n '&#92;u00EF' '&#92;u00F0' '&#92;u00F1' '&#92;u00F2' '&#92;u00F3' '&#92;u00F4' '&#92;u00F5' '&#92;u00F6'\n '&#92;u00F8' '&#92;u00F9' '&#92;u00FA' '&#92;u00FB' '&#92;u00FC' '&#92;u00FD' '&#92;u00FE' '&#92;u00FF'\n </pre></blockquote>\n <p> Many other Unicode characters are lowercase too.\n\n ",non-directive
"@param   codePoint the character (Unicode code point) to be tested.\n ",non-directive
"@return  <code>true</code> if the character is lowercase;\n          <code>false</code> otherwise.\n ",non-directive
"@see     java.lang.Character#isLowerCase(int)\n ",non-directive
"@see     java.lang.Character#isTitleCase(int)\n ",non-directive
"@see     java.lang.Character#toLowerCase(int)\n ",non-directive
"@see     java.lang.Character#getType(int)\n ",non-directive
"@since   1.5\n",non-directive
" Determines if the specified character is a letter or digit.\n ",non-directive
"<p>\n A character is considered to be a letter or digit if either\n <code>Character.isLetter(char ch)</code> or\n <code>Character.isDigit(char ch)</code> returns\n <code>true</code> for the character.\n\n ",non-directive
"<p><b>Note:</b> This method cannot handle <a\n href=\"#supplementary\"> supplementary characters</a>. ",directive
"To support\n all Unicode characters, including supplementary characters, use\n the {@link #isLetterOrDigit(int)} method.\n\n ",directive
"@param   ch   the character to be tested.\n ",non-directive
"@return  <code>true</code> if the character is a letter or digit;\n          <code>false</code> otherwise.\n ",non-directive
"@see     java.lang.Character#isDigit(char)\n ",non-directive
"@see     java.lang.Character#isJavaIdentifierPart(char)\n ",non-directive
"@see     java.lang.Character#isJavaLetter(char)\n ",non-directive
"@see     java.lang.Character#isJavaLetterOrDigit(char)\n ",non-directive
"@see     java.lang.Character#isLetter(char)\n ",non-directive
"@see     java.lang.Character#isUnicodeIdentifierPart(char)\n ",non-directive
"@since   1.0.2\n",non-directive
" Determines if the specified character may be part of a Java\n identifier as other than the first character.\n ",non-directive
"<p>\n A character may be part of a Java identifier if any of the following\n are true:\n \n ",non-directive
"--   it is a letter\n ",directive
"--   it is a currency symbol (such as <code>'$'</code>)\n ",non-directive
"--   it is a connecting punctuation character (such as <code>'_'</code>)\n ",non-directive
"--   it is a digit\n ",non-directive
"--   it is a numeric letter (such as a Roman numeral character)\n ",non-directive
"--   it is a combining mark\n ",non-directive
"--   it is a non-spacing mark\n ",non-directive
"--  <code>isIdentifierIgnorable</code> returns\n <code>true</code> for the character\n \n\n ",non-directive
"<p><b>Note:</b> This method cannot handle <a\n href=\"#supplementary\"> supplementary characters</a>. ",directive
"To support\n all Unicode characters, including supplementary characters, use\n the {@link #isJavaIdentifierPart(int)} method.\n\n ",directive
"@param   ch      the character to be tested.\n ",non-directive
"@return <code>true</code> if the character may be part of a\n          Java identifier; <code>false</code> otherwise.\n ",non-directive
"@see     java.lang.Character#isIdentifierIgnorable(char)\n ",non-directive
"@see     java.lang.Character#isJavaIdentifierStart(char)\n ",non-directive
"@see     java.lang.Character#isLetterOrDigit(char)\n ",non-directive
"@see     java.lang.Character#isUnicodeIdentifierPart(char)\n ",non-directive
"@see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n ",non-directive
"@since   1.1\n",non-directive
" Determines if the character (Unicode code point) may be part of a Java\n identifier as other than the first character.\n ",non-directive
"<p>\n A character may be part of a Java identifier if any of the following\n are true:\n \n ",non-directive
"--   it is a letter\n ",non-directive
"--   it is a currency symbol (such as <code>'$'</code>)\n ",non-directive
"--   it is a connecting punctuation character (such as <code>'_'</code>)\n ",non-directive
"--   it is a digit\n ",non-directive
"--   it is a numeric letter (such as a Roman numeral character)\n ",non-directive
"--   it is a combining mark\n ",non-directive
"--   it is a non-spacing mark\n ",non-directive
"--  {@link #isIdentifierIgnorable(int)\n isIdentifierIgnorable(codePoint)} returns <code>true</code> for\n the character\n \n\n ",non-directive
"@param   codePoint the character (Unicode code point) to be tested.\n ",non-directive
"@return <code>true</code> if the character may be part of a\n          Java identifier; <code>false</code> otherwise.\n ",non-directive
"@see     java.lang.Character#isIdentifierIgnorable(int)\n ",non-directive
"@see     java.lang.Character#isJavaIdentifierStart(int)\n ",non-directive
"@see     java.lang.Character#isLetterOrDigit(int)\n ",non-directive
"@see     java.lang.Character#isUnicodeIdentifierPart(int)\n ",non-directive
"@see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n ",non-directive
"@since   1.5\n",non-directive
" Determines if the specified character is permissible as the\n first character in a Unicode identifier.\n ",non-directive
"<p>\n A character may start a Unicode identifier if and only if\n one of the following conditions is true:\n \n ",non-directive
"--  {@link #isLetter(char) isLetter(ch)} returns <code>true</code>\n ",non-directive
"--  {@link #getType(char) getType(ch)} returns \n      <code>LETTER_NUMBER</code>.\n ",non-directive
"\n\n ",non-directive
"<p><b>Note:</b> This method cannot handle <a\n href=\"#supplementary\"> supplementary characters</a>. ",directive
"To support\n all Unicode characters, including supplementary characters, use\n the {@link #isUnicodeIdentifierStart(int)} method.\n\n ",directive
"@param   ch      the character to be tested.\n ",non-directive
"@return  <code>true</code> if the character may start a Unicode \n          identifier; <code>false</code> otherwise.\n ",non-directive
"@see     java.lang.Character#isJavaIdentifierStart(char)\n ",non-directive
"@see     java.lang.Character#isLetter(char)\n ",non-directive
"@see     java.lang.Character#isUnicodeIdentifierPart(char)\n ",non-directive
"@since   1.1\n",non-directive
" Determines if the specified character (Unicode code point) is\n white space according to Java.  ",non-directive
"A character is a Java\n whitespace character if and only if it satisfies one of the\n following criteria:\n \n ",non-directive
"--  It is a Unicode space character ({@link #SPACE_SEPARATOR},\n      {@link #LINE_SEPARATOR}, or {@link #PARAGRAPH_SEPARATOR}) \n      but is not also a non-breaking space (<code>'&#92;u00A0'</code>,\n      <code>'&#92;u2007'</code>, <code>'&#92;u202F'</code>).\n ",non-directive
"--  It is <code>'&#92;u0009'</code>, HORIZONTAL TABULATION.\n ",non-directive
"--  It is <code>'&#92;u000A'</code>, LINE FEED.\n ",non-directive
"--  It is <code>'&#92;u000B'</code>, VERTICAL TABULATION.\n ",non-directive
"--  It is <code>'&#92;u000C'</code>, FORM FEED.\n ",non-directive
"--  It is <code>'&#92;u000D'</code>, CARRIAGE RETURN.\n ",non-directive
"--  It is <code>'&#92;u001C'</code>, FILE SEPARATOR.\n ",non-directive
"--  It is <code>'&#92;u001D'</code>, GROUP SEPARATOR.\n ",non-directive
"--  It is <code>'&#92;u001E'</code>, RECORD SEPARATOR.\n ",non-directive
"--  It is <code>'&#92;u001F'</code>, UNIT SEPARATOR.\n ",non-directive
"\n ",non-directive
"<p>\n\n ",non-directive
"@param   codePoint the character (Unicode code point) to be tested.\n ",non-directive
"@return  <code>true</code> if the character is a Java whitespace\n          character; <code>false</code> otherwise.\n ",non-directive
"@see     java.lang.Character#isSpaceChar(int)\n ",non-directive
"@since   1.5\n",non-directive
" Returns a value indicating a character's general category.\n\n ",non-directive
"@param   codePoint the character (Unicode code point) to be tested.\n ",non-directive
"@return  a value of type <code>int</code> representing the \n          character's general category.\n ",non-directive
"@see     Character#COMBINING_SPACING_MARK COMBINING_SPACING_MARK\n ",non-directive
"@see     Character#CONNECTOR_PUNCTUATION CONNECTOR_PUNCTUATION\n ",non-directive
"@see     Character#CONTROL CONTROL\n ",non-directive
"@see     Character#CURRENCY_SYMBOL CURRENCY_SYMBOL\n ",non-directive
"@see     Character#DASH_PUNCTUATION DASH_PUNCTUATION\n ",non-directive
"@see     Character#DECIMAL_DIGIT_NUMBER DECIMAL_DIGIT_NUMBER\n ",non-directive
"@see     Character#ENCLOSING_MARK ENCLOSING_MARK\n ",non-directive
"@see     Character#END_PUNCTUATION END_PUNCTUATION\n ",non-directive
"@see     Character#FINAL_QUOTE_PUNCTUATION FINAL_QUOTE_PUNCTUATION\n ",non-directive
"@see     Character#FORMAT FORMAT\n ",non-directive
"@see     Character#INITIAL_QUOTE_PUNCTUATION INITIAL_QUOTE_PUNCTUATION\n ",non-directive
"@see     Character#LETTER_NUMBER LETTER_NUMBER\n ",non-directive
"@see     Character#LINE_SEPARATOR LINE_SEPARATOR\n ",non-directive
"@see     Character#LOWERCASE_LETTER LOWERCASE_LETTER\n ",non-directive
"@see     Character#MATH_SYMBOL MATH_SYMBOL\n ",non-directive
"@see     Character#MODIFIER_LETTER MODIFIER_LETTER\n ",non-directive
"@see     Character#MODIFIER_SYMBOL MODIFIER_SYMBOL\n ",non-directive
"@see     Character#NON_SPACING_MARK NON_SPACING_MARK\n ",non-directive
"@see     Character#OTHER_LETTER OTHER_LETTER\n ",non-directive
"@see     Character#OTHER_NUMBER OTHER_NUMBER\n ",non-directive
"@see     Character#OTHER_PUNCTUATION OTHER_PUNCTUATION\n ",non-directive
"@see     Character#OTHER_SYMBOL OTHER_SYMBOL\n ",non-directive
"@see     Character#PARAGRAPH_SEPARATOR PARAGRAPH_SEPARATOR\n ",non-directive
"@see     Character#PRIVATE_USE PRIVATE_USE\n ",non-directive
"@see     Character#SPACE_SEPARATOR SPACE_SEPARATOR\n ",non-directive
"@see     Character#START_PUNCTUATION START_PUNCTUATION\n ",non-directive
"@see     Character#SURROGATE SURROGATE\n ",non-directive
"@see     Character#TITLECASE_LETTER TITLECASE_LETTER\n ",non-directive
"@see     Character#UNASSIGNED UNASSIGNED\n ",non-directive
"@see     Character#UPPERCASE_LETTER UPPERCASE_LETTER\n ",non-directive
"@since   1.5\n",non-directive
" Returns a <code>Boolean</code> with a value represented by the\n specified string.  ",non-directive
"The <code>Boolean</code> returned represents a\n true value if the string argument is not <code>null</code>\n and is equal, ignoring case, to the string {@code \"true\"}.\n\n ",directive
"@param   s   a string.\n ",non-directive
"@return  the <code>Boolean</code> value represented by the string.\n",non-directive
" Removes the next reference object in this queue, blocking until either\n one becomes available or the given timeout period expires.\n\n ",non-directive
"<p> This method does not offer real-time guarantees: It schedules the\n timeout as if by invoking the {@link Object#wait(long)} method.\n\n ",directive
"@param  timeout  If positive, block for up to <code>timeout</code>\n                  milliseconds while waiting for a reference to be\n                  added to this queue.  ",directive
"If zero, block indefinitely.\n\n ",directive
"@return  A reference object, if one was available within the specified\n          timeout period, otherwise <code>null</code>\n\n ",non-directive
" Constructs an AnnotationTypeMismatchException for the specified\n annotation type element and found data type.\n\n ",non-directive
"@param element the <tt>Method</tt> object for the annotation element\n ",non-directive
"@param foundType the (erroneous) type of data found in the annotation.\n        ",non-directive
"This string may, but is not required to, contain the value\n        as well.  ",directive
"The exact format of the string is unspecified.\n",directive
" Return <tt>true</tt> if the integer argument includes the\n <tt>protected</tt> modifier, <tt>false</tt> otherwise.\n\n ",non-directive
"@param 	mod a set of modifiers\n ",non-directive
"@return <tt>true</tt> if <code>mod</code> includes the\n <tt>protected</tt> modifier; <tt>false</tt> otherwise.\n",non-directive
" Return <tt>true</tt> if the integer argument includes the\n <tt>strictfp</tt> modifier, <tt>false</tt> otherwise.\n\n ",non-directive
"@param 	mod a set of modifiers\n ",non-directive
"@return <tt>true</tt> if <code>mod</code> includes the\n <tt>strictfp</tt> modifier; <tt>false</tt> otherwise.\n",non-directive
" Returns the default value for the annotation member represented by\n this <tt>Method</tt> instance.  ",non-directive
"If the member is of a primitive type,\n an instance of the corresponding wrapper type is returned. ",directive
"Returns\n null if no default is associated with the member, or if the method\n instance does not represent a declared member of an annotation type.\n\n ",non-directive
"@return the default value for the annotation member represented\n     by this <tt>Method</tt> instance.\n ",non-directive
"@since  1.5\n",non-directive
" Returns <tt>true</tt> if this member was introduced by\n the compiler; returns <tt>false</tt> otherwise.\n\n ",non-directive
"@return true if and only if this member was introduced by\n the compiler.\n ",non-directive
"@since 1.5\n",non-directive
" Sets the field represented by this <code>Field</code> object on the\n specified object argument to the specified new value. ",non-directive
"The new\n value is automatically unwrapped if the underlying field has a\n primitive type.\n\n ",directive
"<p>The operation proceeds as follows:\n\n <p>If the underlying field is static, the <code>obj</code> argument is\n ignored; it may be null.\n\n ",non-directive
"<p>Otherwise the underlying field is an instance field.  ",non-directive
"If the\n specified object argument is null, the method throws a\n <code>NullPointerException</code>.  ",non-directive
"If the specified object argument is not\n an instance of the class or interface declaring the underlying\n field, the method throws an <code>IllegalArgumentException</code>.\n\n ",non-directive
"<p>If this <code>Field</code> object enforces Java language access control, and\n the underlying field is inaccessible, the method throws an\n <code>IllegalAccessException</code>.\n\n ",non-directive
"<p>If the underlying field is final, the method throws an\n <code>IllegalAccessException</code> unless\n <code>setAccessible(true)</code> has succeeded for this field\n and this field is non-static. ",non-directive
"Setting a final field in this way\n is meaningful only during deserialization or reconstruction of\n instances of classes with blank final fields, before they are\n made available for access by other parts of a program. ",directive
"Use in\n any other context may have unpredictable effects, including cases\n in which other parts of a program continue to use the original\n value of this field.\n\n ",directive
"<p>If the underlying field is of a primitive type, an unwrapping\n conversion is attempted to convert the new value to a value of\n a primitive type.  ",non-directive
"If this attempt fails, the method throws an\n <code>IllegalArgumentException</code>.\n\n ",non-directive
"<p>If, after possible unwrapping, the new value cannot be\n converted to the type of the underlying field by an identity or\n widening conversion, the method throws an\n <code>IllegalArgumentException</code>.\n\n ",directive
"<p>If the underlying field is static, the class that declared the\n field is initialized if it has not already been initialized.\n\n ",non-directive
"<p>The field is set to the possibly unwrapped and widened new value.\n\n ",non-directive
"<p>If the field is hidden in the type of <code>obj</code>,\n the field's value is set according to the preceding rules.\n\n ",non-directive
"@param obj the object whose field should be modified\n ",directive
"@param value the new value for the field of <code>obj</code>\n being modified\n \n ",non-directive
" Returns an array of <code>Class</code> objects that represent the types\n of exceptions declared to be thrown by the underlying constructor\n represented by this <code>Constructor</code> object.  ",non-directive
"Returns an array of\n length 0 if the constructor declares no exceptions in its <code>throws</code> clause.\n\n ",non-directive
"@return the exception types declared as being thrown by the\n constructor this object represents\n",non-directive
" Returns <tt>true</tt> if this constructor was declared to take\n a variable number of arguments; returns <tt>false</tt>\n otherwise.\n\n ",non-directive
"@return <tt>true</tt> if an only if this constructor was declared to\n take a variable number of arguments.\n ",non-directive
"@since 1.5\n",non-directive
" Returns the value of the indexed component in the specified\n array object, as a <code>char</code>.\n\n ",non-directive
"@param array the array\n ",non-directive
"@param index the index\n ",non-directive
"@return the value of the indexed component in the specified array\n ",non-directive
"@see Array#get\n",non-directive
" Returns the value of the indexed component in the specified\n array object, as a <code>short</code>.\n\n ",non-directive
"@param array the array\n ",non-directive
"@param index the index\n ",non-directive
"@return the value of the indexed component in the specified array\n ",non-directive
"@see Array#get\n",non-directive
" Returns the value of the indexed component in the specified\n array object, as a <code>long</code>.\n\n ",non-directive
"@param array the array\n ",non-directive
"@param index the index\n ",non-directive
"@return the value of the indexed component in the specified array\n ",non-directive
"@see Array#get\n",non-directive
" Returns true if an annotation for the specified type\n is present on this element, else false.  ",non-directive
"This method\n is designed primarily for convenient access to marker annotations.\n\n ",directive
"@param annotationClass the Class object corresponding to the\n        annotation type\n ",non-directive
"@return true if an annotation for the specified annotation\n     type is present on this element, else false\n ",non-directive
"@since 1.5\n",non-directive
" Returns the Java virtual machine specification vendor. \n ",non-directive
"This method is equivalent to {@link System#getProperty \n System.getProperty(\"java.vm.specification.vendor\")}.\n\n ",directive
"@return the Java virtual machine specification vendor.\n\n ",non-directive
"@see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n ",non-directive
"@see java.lang.System#getProperty\n",non-directive
"\n Returns the maximum amount of memory in bytes that can be \n used for memory management.  ",non-directive
"This method returns <tt>-1</tt> \n if the maximum memory size is undefined.\n\n ",directive
"<p> This amount of memory is not guaranteed to be available \n for memory management if it is greater than the amount of \n committed memory.  ",directive
"The Java virtual machine may fail to allocate \n memory even if the amount of used memory does not exceed this \n maximum size.\n \n",directive
"@return the maximum amount of memory in bytes; \n <tt>-1</tt> if undefined.\n",non-directive
"\n Returns the current memory usage of the heap that\n is used for object allocation.  ",non-directive
"The heap consists \n of one or more memory pools.  ",non-directive
"The <tt>used</tt>\n and <tt>committed</tt> size of the returned memory\n usage is the sum of those values of all heap memory pools\n whereas the <tt>init</tt> and <tt>max</tt> size of the\n returned memory usage represents the setting of the heap\n memory which may not be the sum of those of all heap\n memory pools.\n ",non-directive
"<p>\n The amount of used memory in the returned memory usage\n is the amount of memory occupied by both live objects\n and garbage objects that have not been collected, if any.\n\n ",non-directive
"<p>\n <b>MBeanServer access</b>:<br>\n The mapped type of <tt>MemoryUsage</tt> is\n <tt>CompositeData</tt> with attributes as specified in \n {@link MemoryUsage#from MemoryUsage}.\n\n ",directive
"@return a {@link MemoryUsage} object representing \n the heap memory usage.\n",non-directive
" Returns an integer number format for the current default locale. ",non-directive
"The\n returned number format is configured to round floating point numbers\n to the nearest integer using half-even rounding (see {@link\n java.math.RoundingMode#HALF_EVEN RoundingMode.HALF_EVEN}) for formatting,\n and to parse only the integer part of an input string (see {@link\n #isParseIntegerOnly isParseIntegerOnly}).\n\n ",directive
"@see #getRoundingMode()\n ",non-directive
"@return a number format for integer values\n ",non-directive
"@since 1.4\n",non-directive
" Formats an object to produce a string. ",non-directive
"This is equivalent to\n <blockquote>\n {@link #format(Object, StringBuffer, FieldPosition) format}<code>(obj,\n         new StringBuffer(), new FieldPosition(0)).toString();</code>\n </blockquote>\n\n ",non-directive
"@param obj    The object to format\n ",non-directive
"@return       Formatted string.\n ",non-directive
" Parses text from a string to produce an object.\n ",non-directive
"<p>\n The method attempts to parse text starting at the index given by\n <code>pos</code>.\n ",non-directive
"If parsing succeeds, then the index of <code>pos</code> is updated\n to the index after the last character used (parsing does not necessarily\n use all characters up to the end of the string), and the parsed\n object is returned. ",non-directive
"The updated <code>pos</code> can be used to\n indicate the starting point for the next call to this method.\n ",directive
"If an error occurs, then the index of <code>pos</code> is not\n changed, the error index of <code>pos</code> is set to the index of\n the character where the error occurred, and null is returned.\n\n ",non-directive
"@param source A <code>String</code>, part of which should be parsed.\n ",non-directive
"@param pos A <code>ParsePosition</code> object with index and error\n            index information as described above.\n ",non-directive
"@return An <code>Object</code> parsed from the string. ",non-directive
"In case of\n         error, returns null.\n ",non-directive
" Parses text from the beginning of the given string to produce an object.\n ",non-directive
"The method may not use the entire text of the given string.\n\n ",directive
"@param source A <code>String</code> whose beginning should be parsed.\n ",non-directive
"@return An <code>Object</code> parsed from the string.\n ",non-directive
" Set the grouping size. ",non-directive
"Grouping size is the number of digits between\n grouping separators in the integer portion of a number.  ",non-directive
"For example,\n in the number \"123,456.78\", the grouping size is 3.\n <br>\n",directive
" The value passed in is converted to a byte, which may lose information.\n ",directive
"@see #getGroupingSize\n ",non-directive
"@see java.text.NumberFormat#setGroupingUsed\n ",non-directive
"@see java.text.DecimalFormatSymbols#setGroupingSeparator\n",non-directive
" Creates a DecimalFormat using the given pattern and the symbols\n for the default locale. ",non-directive
"This is a convenient way to obtain a\n DecimalFormat when internationalization is not the main concern.\n ",directive
"<p>\n To obtain standard formats for a given locale, use the factory methods\n on NumberFormat such as getNumberInstance. ",directive
"These factories will\n return the most appropriate sub-class of NumberFormat for a given\n locale.\n\n ",non-directive
"@param pattern A non-localized pattern string.\n ",non-directive
"@see java.text.NumberFormat#getInstance\n ",non-directive
"@see java.text.NumberFormat#getNumberInstance\n ",non-directive
"@see java.text.NumberFormat#getCurrencyInstance\n ",non-directive
"@see java.text.NumberFormat#getPercentInstance\n",non-directive
" Gets localized date-time pattern characters. ",non-directive
"For example: 'u', 't', etc.\n ",non-directive
"@return the localized date-time pattern characters.\n",non-directive
" Gets the date formatter with the given formatting style\n for the default locale.\n ",non-directive
"@param style the given formatting style. ",non-directive
"For example,\n SHORT for \"M/d/yy\" in the US locale.\n ",non-directive
"@return a date formatter.\n",non-directive
" Set the calendar to be used by this date format.  ",non-directive
"Initially, the default\n calendar for the specified or default locale is used.\n ",directive
"@param newCalendar the new Calendar to be used by the date format\n",non-directive
" Compare this CollationKey to the target CollationKey. ",non-directive
"The collation rules of the\n Collator object which created these keys are applied. ",non-directive
"<strong>Note:</strong>\n CollationKeys created by different Collators can not be compared.\n ",directive
"@param target target CollationKey\n ",non-directive
"@return Returns an integer value. ",non-directive
"Value is less than zero if this is less\n than target, value is zero if this and target are equal and value is greater than\n zero if this is greater than target.\n ",non-directive
"@see java.text.Collator#compare\n",non-directive
" Get the previous collation element in the string.  ",non-directive
"<p>This iterator iterates\n over a sequence of collation elements that were built from the string.\n ",non-directive
"Because there isn't necessarily a one-to-one mapping from characters to\n collation elements, this doesn't mean the same thing as \"return the\n collation element [or ordering priority] of the previous character in the\n string\".</p>\n <p>This function updates the iterator's internal pointer to point to the\n collation element preceding the one it's currently pointing to and then\n returns that element, while next() returns the current element and then\n updates the pointer.  ",directive
"This means that when you change direction while\n iterating (i.e., call next() and then call previous(), or call previous()\n and then call next()), you'll get back the same element twice.</p>\n ",directive
"@since 1.2\n",non-directive
" Returns the first boundary following the specified character offset. ",non-directive
"If the \n specified offset equals to the last text boundary, it returns \n <code>BreakIterator.DONE</code> and the iterator's current position is unchanged. \n ",directive
"Otherwise, the iterator's current position is set to the returned boundary. \n ",non-directive
"The value returned is always greater than the offset or the value \n <code>BreakIterator.DONE</code>.\n ",directive
"@param offset the character offset to begin scanning.\n ",non-directive
"@return The first boundary after the specified offset or \n <code>BreakIterator.DONE</code> if the last text boundary is passed in \n as the offset.\n ",non-directive
" Set a new text string to be scanned.  ",non-directive
"The current scan\n position is reset to first().\n ",directive
"@param newText new text to scan.\n",non-directive
" Return the level of the nth logical run in this line.\n ",non-directive
"@param run the index of the run, between 0 and <code>getRunCount()</code>\n ",non-directive
"@return the level of the run\n",non-directive
" Return the index of the character past the end of the nth logical run in this line, as \n an offset from the start of the line.  ",non-directive
"For example, this will return the length\n of the line for the last run on the line.\n ",non-directive
"@param run the index of the run, between 0 and <code>getRunCount()</code>\n ",non-directive
"@return limit the limit of the run\n",non-directive
" Adds the given SQL command to the current list of commmands for this\n <code>Statement</code> object. ",non-directive
"The commands in this list can be\n executed as a batch by calling the method <code>executeBatch</code>.\n ",directive
"<P>\n\n ",non-directive
"@param sql typically this is a SQL <code>INSERT</code> or \n <code>UPDATE</code> statement\n ",directive
"@see #executeBatch\n ",non-directive
"@see DatabaseMetaData#supportsBatchUpdates\n ",non-directive
"@since 1.2\n",non-directive
" Retrieves whether this <code>Statement</code> object has been closed. ",non-directive
"A <code>Statement</code> is closed if the\n method close has been called on it, or if it is automatically closed.\n ",directive
"@return true if this <code>Statement</code> object is closed; false if it is still open\n ",non-directive
"@since 1.6\n",non-directive
" Constructs a  <code>SQLWarning</code> object.\n ",non-directive
"The <code>reason</code>, <code>SQLState</code> are initialized\n to <code>null</code> and the vendor code is initialized to 0.\n\n ",non-directive
"The <code>cause</code> is not initialized, and may subsequently be\n initialized by a call to the \n {@link Throwable#initCause(java.lang.Throwable)} method.\n ",directive
"<p>\n",non-directive
" Constructs a <code>SQLTransientConnectionException</code> object \n with a given\n <code>reason</code> and  <code>cause</code>.  \n ",non-directive
"The <code>SQLState</code> is  initialized to <code>null</code>\n and the vendor code is initialized to 0.\n ",directive
"<p>\n ",non-directive
"@param reason a description of the exception. \n ",non-directive
"@param cause the underlying reason for this <code>SQLException</code>(which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating\n     the cause is non-existent or unknown.\n ",non-directive
"@since 1.6\n",non-directive
" Constructs a <code>SQLSyntaxErrorException</code> object \n   with a given  <code>cause</code>.\n ",non-directive
"The <code>SQLState</code> is initialized\n to <code>null</code> and the vendor code is initialized to 0. \n ",directive
"The <code>reason</code>  is initialized to <code>null</code> if \n <code>cause==null</code> or to <code>cause.toString()</code> if \n <code>cause!=null</code>.\n ",directive
"<p>\n ",non-directive
"@param cause the underlying reason for this <code>SQLException</code> (which is saved for later retrieval bythe <code>getCause()</code> method); may be null indicating\n     the cause is non-existent or unknown.\n ",non-directive
"@since 1.6\n",non-directive
" Writes the next attribute to the stream as a stream of ASCII characters.\n\n ",non-directive
"@param x the value to pass to the database\n ",non-directive
"@since 1.2\n",non-directive
" Constructs a <code>SQLNonTransientConnectionException</code> object\n  with a given <code>reason</code>. ",non-directive
"The <code>SQLState</code> \n is initialized to <code>null</code> and the vender code is initialized \n to 0.\n\n ",non-directive
"The <code>cause</code> is not initialized, and may subsequently be\n initialized by a call to the \n {@link Throwable#initCause(java.lang.Throwable)} method.\n ",directive
"<p>\n ",non-directive
"@param reason a description of the exception\n ",non-directive
"@since 1.6\n",non-directive
" Constructs a <code>SQLIntegrityConstraintViolationException</code> object.\n ",non-directive
"The <code>reason</code>, <code>SQLState</code> are initialized\n to <code>null</code> and the vendor code is initialized to 0.\n\n ",non-directive
"The <code>cause</code> is not initialized, and may subsequently be\n initialized by a call to the \n {@link Throwable#initCause(java.lang.Throwable)} method.\n ",directive
"<p>\n ",non-directive
"@since 1.6\n",non-directive
" Constructs an <code>SQLIntegrityConstraintViolationException</code> object with\n  a given  <code>cause</code>.\n ",non-directive
"The <code>SQLState</code> is initialized\n to <code>null</code> and the vendor code is initialized to 0. \n ",directive
"The <code>reason</code>  is initialized to <code>null</code> if \n <code>cause==null</code> or to <code>cause.toString()</code> if \n <code>cause!=null</code>.\n ",non-directive
"<p>\n ",non-directive
"@param cause the underlying reason for this <code>SQLException</code> (which is saved for later retrieval by the <code>getCause()</code>  method); may be null indicating\n     the cause is non-existent or unknown.\n ",non-directive
"@since 1.6\n",non-directive
" Reads the next attribute in the stream and returns it as a <code>boolean</code> \n in the Java programming language.\n\n ",non-directive
"@return the attribute; if the value is SQL <code>NULL</code>, returns <code>false</code>\n ",non-directive
"@since 1.2\n",non-directive
" Reads the next attribute in the stream and returns it as a <code>byte</code> \n in the Java programming language.\n\n ",non-directive
"@return the attribute; if the value is SQL <code>NULL</code>, returns <code>0</code>\n ",non-directive
"@since 1.2\n",non-directive
" Reads the next attribute in the stream and returns it as a <code>long</code> \n in the Java programming language.\n\n ",non-directive
"@return the attribute; if the value is SQL <code>NULL</code>, returns <code>0</code>\n ",non-directive
"@since 1.2\n",non-directive
" Reads the next attribute in the stream and returns it as a <code>double</code> \n in the Java programming language.\n\n ",non-directive
"@return the attribute; if the value is SQL <code>NULL</code>, returns <code>0</code>\n ",non-directive
"@since 1.2\n",non-directive
" Reads an SQL <code>REF</code> value from the stream and returns it as a\n <code>Ref</code> object in the Java programming language.\n\n ",non-directive
"@return a <code>Ref</code> object representing the SQL <code>REF</code> value\n at the head of the stream; <code>null</code> if the value read is \n SQL <code>NULL</code>\n ",non-directive
"@since 1.2\n",non-directive
" Constructs a <code>SQLFeatureNotSupportedException</code> object \n with a given\n <code>reason</code>, <code>SQLState</code> and  <code>cause</code>.  \n ",non-directive
"The vendor code is initialized to 0.\n ",directive
"<p>\n ",non-directive
"@param reason a description of the exception. \n ",non-directive
"@param SQLState an XOPEN or SQL:2003 code identifying the exception \n ",non-directive
"@param cause the (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating\n     the cause is non-existent or unknown.\n ",non-directive
"@since 1.6\n",non-directive
" Compares this <code>RowId</code> to the specified object. ",non-directive
"The result is \n <code>true</code> if and only if the argument is not null and is a RowId \n object that represents the same ROWID as  this object. \n ",non-directive
"<p>\n It is important \n to consider both the origin and the valid lifetime of a <code>RowId</code>\n when comparing it to another <code>RowId</code>. ",directive
"If both are valid, and \n both are from the same table on the same data source, then if they are equal\n they identify \n the same row; if one or more is no longer guaranteed to be valid, or if \n they originate from different data sources, or different tables on the\n same data source, they  may be equal but still\n not identify the same row. \n \n",directive
"@param obj the <code>Object</code> to compare this <code>RowId</code> object\n     against.\n ",non-directive
"@return true if the <code>RowId</code>s are equal; false otherwise\n ",non-directive
"@since 1.6\n",non-directive
" Retrieves the value of the designated column in the current row\n of this <code>ResultSet</code> object as a\n <code>java.math.BigDecimal</code> with full precision.\n\n ",non-directive
"@param columnLabel the label for the column specified with the SQL AS clause.  ",non-directive
"If the SQL AS clause was not specified, then the label is the name of the column\n ",non-directive
"@return the column value (full precision);\n if the value is SQL <code>NULL</code>, the value returned is\n <code>null</code> in the Java programming language.\n ",non-directive
"@since 1.2\n\n",non-directive
" Retrieves whether the cursor is on the first row of\n this <code>ResultSet</code> object.\n ",non-directive
"<p>\n <strong>Note:</strong>Support for the <code>isFirst</code> method \n is optional for <code>ResultSet</code>s with a result \n set type of <code>TYPE_FORWARD_ONLY</code>\n\n ",directive
"@return <code>true</code> if the cursor is on the first row;\n <code>false</code> otherwise   \n ",non-directive
"@since 1.2\n",non-directive
" Moves the cursor to the last row in\n this <code>ResultSet</code> object.\n\n ",non-directive
"@return <code>true</code> if the cursor is on a valid row;\n <code>false</code> if there are no rows in the result set\n ",non-directive
"@since 1.2\n",non-directive
" Retrieves whether the current row has had an insertion.\n ",non-directive
"The value returned depends on whether or not this\n <code>ResultSet</code> object can detect visible inserts.\n ",directive
"<p>\n <strong>Note:</strong> Support for the <code>rowInserted</code> method is optional with a result set \n concurrency of <code>CONCUR_READ_ONLY</code>\n ",directive
"@return <code>true</code> if the current row is detected to \n have been inserted; <code>false</code> otherwise\n ",non-directive
"@see DatabaseMetaData#insertsAreDetected\n ",non-directive
"@since 1.2\n",non-directive
" Updates the designated column with a <code>java.sql.Date</code> value.\n ",non-directive
"The updater methods are used to update column values in the\n current row or the insert row.  ",non-directive
"The updater methods do not \n update the underlying database; instead the <code>updateRow</code> or\n <code>insertRow</code> methods are called to update the database.\n\n ",directive
"@param columnLabel the label for the column specified with the SQL AS clause.  ",non-directive
"If the SQL AS clause was not specified, then the label is the name of the column\n ",directive
"@param x the new column value\n ",non-directive
"@since 1.2\n",non-directive
" Refreshes the current row with its most recent value in \n the database.  ",non-directive
"This method cannot be called when\n the cursor is on the insert row.\n\n ",directive
"<P>The <code>refreshRow</code> method provides a way for an \n application to \n explicitly tell the JDBC driver to refetch a row(s) from the\n database.  ",non-directive
"An application may want to call <code>refreshRow</code> when \n caching or prefetching is being done by the JDBC driver to\n fetch the latest value of a row from the database.  ",directive
"The JDBC driver \n may actually refresh multiple rows at once if the fetch size is \n greater than one.\n \n",directive
" <P> All values are refetched subject to the transaction isolation \n level and cursor sensitivity.  ",non-directive
"If <code>refreshRow</code> is called after\n calling an updater method, but before calling\n the method <code>updateRow</code>, then the\n updates made to the row are lost.  ",directive
"Calling the method\n <code>refreshRow</code> frequently will likely slow performance.\n\n ",directive
"@since 1.2\n",non-directive
" Retrieves the value of the designated column in the current row\n of this <code>ResultSet</code> object as a <code>Blob</code> object\n in the Java programming language.\n\n ",non-directive
"@param columnLabel the label for the column specified with the SQL AS clause.  ",non-directive
"If the SQL AS clause was not specified, then the label is the name of the column\n ",non-directive
"@return a <code>Blob</code> object representing the SQL <code>BLOB</code> \n         value in the specified column\n ",non-directive
"@since 1.2\n",non-directive
" Retrieves the value of the designated column in the current row\n of this <code>ResultSet</code> object as a <code>java.net.URL</code>\n object in the Java programming language.\n \n",non-directive
"@param columnLabel the label for the column specified with the SQL AS clause.  ",non-directive
"If the SQL AS clause was not specified, then the label is the name of the column\n ",non-directive
"@return the column value as a <code>java.net.URL</code> object;\n if the value is SQL <code>NULL</code>,\n the value returned is <code>null</code> in the Java programming language\n ",non-directive
"@since 1.4\n",non-directive
" Updates the designated column with a <code>java.sql.SQLXML</code> value.\n ",non-directive
"The updater\n methods are used to update column values in the current row or the insert\n row. ",non-directive
"The updater methods do not update the underlying database; instead \n the <code>updateRow</code> or <code>insertRow</code> methods are called \n to update the database.\n ",directive
"<p>\n\n ",non-directive
"@param columnIndex the first column is 1, the second 2, ...\n ",non-directive
"@param xmlObject the value for the column to be updated\n ",non-directive
"The <code>getCause</code> method \n  of the exception may provide a more detailed exception, for example, if the \n  stream does not contain valid XML.\n ",directive
"@since 1.6\n",non-directive
" Retrieves the value of the designated column in the current row\n of this <code>ResultSet</code> object as\n a <code>String</code> in the Java programming language.\n ",non-directive
"It is intended for use when\n accessing  <code>NCHAR</code>,<code>NVARCHAR</code>\n and <code>LONGNVARCHAR</code> columns.\n\n ",directive
"@param columnLabel the label for the column specified with the SQL AS clause.  ",non-directive
"If the SQL AS clause was not specified, then the label is the name of the column\n ",non-directive
"@return the column value; if the value is SQL <code>NULL</code>, the\n value returned is <code>null</code>\n ",non-directive
"@since 1.6\n",non-directive
"\n Updates the designated column using the given input stream, which\n will have the specified number of bytes.\n \n",non-directive
" <p>\n The updater methods are used to update column values in the\n current row or the insert row.  ",non-directive
"The updater methods do not \n update the underlying database; instead the <code>updateRow</code> or\n <code>insertRow</code> methods are called to update the database.\n\n ",directive
"@param columnLabel the label for the column specified with the SQL AS clause.  ",non-directive
"If the SQL AS clause was not specified, then the label is the name of the column\n ",directive
"@param inputStream An object that contains the data to set the parameter\n value to.\n ",non-directive
"@param length the number of bytes in the parameter data.\n ",non-directive
"@since 1.6\n",non-directive
" Updates the designated column using the given <code>Reader</code>\n object, which is the given number of characters long.\n ",non-directive
"When a very large UNICODE value is input to a <code>LONGVARCHAR</code>\n parameter, it may be more practical to send it via a\n <code>java.io.Reader</code> object. ",directive
"The JDBC driver will\n do any necessary conversion from UNICODE to the database char format.\n \n",non-directive
" <p>\n The updater methods are used to update column values in the\n current row or the insert row.  ",non-directive
"The updater methods do not \n update the underlying database; instead the <code>updateRow</code> or\n <code>insertRow</code> methods are called to update the database.\n\n ",directive
"@param columnIndex the first column is 1, the second 2, ...\n ",directive
"@param reader An object that contains the data to set the parameter value to.\n ",non-directive
"@param length the number of characters in the parameter data.\n ",non-directive
"@since 1.6\n",non-directive
" Sets the designated parameter to the given Java <code>float</code> value. \n ",non-directive
"The driver converts this\n to an SQL <code>REAL</code> value when it sends it to the database.\n\n ",directive
"@param parameterIndex the first parameter is 1, the second is 2, ...\n ",non-directive
"@param x the parameter value\n ",non-directive
" Sets the designated parameter to the given Java <code>String</code> value. \n ",non-directive
"The driver converts this\n to an SQL <code>VARCHAR</code> or <code>LONGVARCHAR</code> value\n (depending on the argument's\n size relative to the driver's limits on <code>VARCHAR</code> values)\n when it sends it to the database.\n\n ",directive
"@param parameterIndex the first parameter is 1, the second is 2, ...\n ",non-directive
"@param x the parameter value\n ",non-directive
" Sets the designated parameter to the given <code>java.sql.Date</code> value\n using the default time zone of the virtual machine that is running\n the application. \n ",non-directive
"The driver converts this\n to an SQL <code>DATE</code> value when it sends it to the database.\n\n ",directive
"@param parameterIndex the first parameter is 1, the second is 2, ...\n ",non-directive
"@param x the parameter value\n ",non-directive
" Retrieves whether null values are allowed in the designated parameter.\n\n ",non-directive
"@param param the first parameter is 1, the second is 2, ...\n ",non-directive
"@return the nullability status of the given parameter; one of \n        <code>ParameterMetaData.parameterNoNulls</code>, \n        <code>ParameterMetaData.parameterNullable</code>, or \n        <code>ParameterMetaData.parameterNullableUnknown</code>\n ",directive
"@since 1.4\n",non-directive
" Retrieves a comma-separated list of system functions available with\n this database.  ",non-directive
"These are the  Open Group CLI system function names used \n in the JDBC function escape clause.\n\n ",directive
"@return a list of system functions supported by this database\n ",non-directive
" Retrieves whether this database supports the JDBC scalar function \n <code>CONVERT</code> for the conversion of one JDBC type to another.\n ",non-directive
"The JDBC types are the generic SQL data types defined \n in <code>java.sql.Types</code>.\n\n ",non-directive
"@return <code>true</code> if so; <code>false</code> otherwise\n ",non-directive
" Retrieves whether inserts made by others are visible.\n\n ",non-directive
"@param type the <code>ResultSet</code> type; one of\n        <code>ResultSet.TYPE_FORWARD_ONLY</code>,\n        <code>ResultSet.TYPE_SCROLL_INSENSITIVE</code>, or\n        <code>ResultSet.TYPE_SCROLL_SENSITIVE</code>\n ",directive
"@return <code>true</code> if inserts made by others\n         are visible for the given result set type;\n         <code>false</code> otherwise\n ",non-directive
"@since 1.2\n",non-directive
" Retrieves whether this database supports statement pooling.\n\n ",non-directive
"@return <code>true</code> if so; <code>false</code> otherwise\n ",non-directive
"@since 1.4\n",non-directive
" Creates a savepoint with the given name in the current transaction\n and returns the new <code>Savepoint</code> object that represents it.\n\n ",non-directive
"<p> if setSavepoint is invoked outside of an active transaction, a transaction will be started at this newly created \nsavepoint.\n\n ",directive
"@param name a <code>String</code> containing the name of the savepoint\n ",non-directive
"@return the new <code>Savepoint</code> object\n ",non-directive
"@see Savepoint\n ",non-directive
"@since 1.4\n",non-directive
" Creates a <code>CallableStatement</code> object that will generate\n <code>ResultSet</code> objects with the given type and concurrency.\n ",non-directive
"This method is the same as the <code>prepareCall</code> method\n above, but it allows the default result set\n type, result set concurrency type and holdability to be overridden.\n\n ",directive
"@param sql a <code>String</code> object that is the SQL statement to\n            be sent to the database; may contain on or more '?' parameters\n ",non-directive
"@param resultSetType one of the following <code>ResultSet</code> \n        constants:\n         <code>ResultSet.TYPE_FORWARD_ONLY</code>, \n         <code>ResultSet.TYPE_SCROLL_INSENSITIVE</code>, or\n         <code>ResultSet.TYPE_SCROLL_SENSITIVE</code>\n ",directive
"@param resultSetConcurrency one of the following <code>ResultSet</code> \n        constants:\n         <code>ResultSet.CONCUR_READ_ONLY</code> or\n         <code>ResultSet.CONCUR_UPDATABLE</code>\n ",directive
"@param resultSetHoldability one of the following <code>ResultSet</code> \n        constants:\n         <code>ResultSet.HOLD_CURSORS_OVER_COMMIT</code> or\n         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT</code>\n ",directive
"@return a new <code>CallableStatement</code> object, containing the\n         pre-compiled SQL statement, that will generate\n         <code>ResultSet</code> objects with the given type,\n         concurrency, and holdability\n ",non-directive
"@see ResultSet\n ",non-directive
"@since 1.4\n",non-directive
" Constructs an object that implements the <code>Blob</code> interface. ",non-directive
"The object\n returned initially contains no data.  ",non-directive
"The <code>setBinaryStream</code> and\n <code>setBytes</code> methods of the <code>Blob</code> interface may be used to add data to\n the <code>Blob</code>.\n ",directive
"@return  An object that implements the <code>Blob</code> interface\n ",non-directive
"@since 1.6\n",non-directive
" Constructs an object that implements the <code>SQLXML</code> interface. ",non-directive
"The object\n returned initially contains no data. ",non-directive
"The <code>createXmlStreamWriter</code> object and\n <code>setString</code> method of the <code>SQLXML</code> interface may be used to add data to the <code>SQLXML</code>\n object.\n ",directive
"@return An object that implements the <code>SQLXML</code> interface\n ",non-directive
"@since 1.6\n",non-directive
" Sets the value of the connection's client info properties.  ",non-directive
"The \n <code>Properties</code> object contains the names and values of the client info \n properties to be set.  ",non-directive
"The set of client info properties contained in \n the properties list replaces the current set of client info properties \n on the connection.  ",non-directive
"If a property that is currently set on the \n connection is not present in the properties list, that property is \n cleared.  ",directive
"Specifying an empty properties list will clear all of the \n properties on the connection.  ",directive
"See <code>setClientInfo (String, String)</code> for \n more information.\n ",directive
"<p>  \n If an error occurs in setting any of the client info properties, a \n <code>SQLClientInfoException</code> is thrown. ",directive
"The <code>SQLClientInfoException</code>\n contains information indicating which client info properties were not set. \n ",directive
"The state of the client information is unknown because \n some databases do not allow multiple client info properties to be set \n atomically.  ",directive
"For those databases, one or more properties may have been \n set before the error occurred.\n ",directive
"<p>\n \n ",non-directive
"@param properties		the list of client info properties to set\n <p>\n ",non-directive
"@see java.sql.Connection#setClientInfo(String, String) setClientInfo(String, String)\n ",non-directive
"@since 1.6\n <p>\n ",non-directive
"\n Retrieves the character position at which the specified  \n <code>Clob</code> object <code>searchstr</code> appears in this \n <code>Clob</code> object.  ",non-directive
"The search begins at position \n <code>start</code>.\n\n ",non-directive
"@param searchstr the <code>Clob</code> object for which to search\n ",non-directive
"@param start the position at which to begin searching; the first\n              position is 1\n ",non-directive
"@return the position at which the <code>Clob</code> object appears \n              or -1 if it is not present; the first position is 1\n ",directive
"@since 1.2\n",non-directive
" Retrieves the value of the designated JDBC <code>FLOAT</code> parameter \n as a <code>float</code> in the Java programming language.\n\n ",non-directive
"@param parameterIndex the first parameter is 1, the second is 2, \n        and so on\n ",non-directive
"@return the parameter value.  ",non-directive
"If the value is SQL <code>NULL</code>, the result \n         is <code>0</code>.\n ",non-directive
"@see #setFloat\n",non-directive
" Retrieves the value of the designated JDBC <code>TIME</code> parameter as a \n <code>java.sql.Time</code> object.\n\n ",non-directive
"@param parameterIndex the first parameter is 1, the second is 2, \n        and so on\n ",directive
"@return the parameter value.  ",non-directive
"If the value is SQL <code>NULL</code>, the result \n         is <code>null</code>.\n ",non-directive
"@see #setTime\n",non-directive
" Retrieves the value of the designated JDBC <code>TIMESTAMP</code> parameter as a\n <code>java.sql.Timestamp</code> object, using\n the given <code>Calendar</code> object to construct\n the <code>Timestamp</code> object.\n ",non-directive
"With a <code>Calendar</code> object, the driver\n can calculate the timestamp taking into account a custom timezone and locale.\n ",directive
"If no <code>Calendar</code> object is specified, the driver uses the\n default timezone and locale.\n\n\n ",directive
"@param parameterIndex the first parameter is 1, the second is 2, \n and so on\n ",non-directive
"@param cal the <code>Calendar</code> object the driver will use\n            to construct the timestamp\n ",non-directive
"@return the parameter value.  ",non-directive
"If the value is SQL <code>NULL</code>, the result \n         is <code>null</code>.\n ",non-directive
"@see #setTimestamp\n ",non-directive
"@since 1.2\n",non-directive
" Sets the designated parameter to the given Java <code>boolean</code> value.\n ",non-directive
"The driver converts this\n to an SQL <code>BIT</code> or <code>BOOLEAN</code> value when it sends it to the database.\n\n ",directive
"@param parameterName the name of the parameter\n ",non-directive
"@param x the parameter value\n ",non-directive
"@see #getBoolean\n ",non-directive
"@since 1.4\n",non-directive
" Sets the designated parameter to the given Java <code>byte</code> value.  \n ",non-directive
"The driver converts this\n to an SQL <code>TINYINT</code> value when it sends it to the database.\n\n ",non-directive
"@param parameterName the name of the parameter\n ",non-directive
"@param x the parameter value\n ",non-directive
"@see #getByte\n ",non-directive
"@since 1.4\n",non-directive
" Sets the value of the designated parameter with the given object.\n ",non-directive
"This method is like the method <code>setObject</code>\n above, except that it assumes a scale of zero.\n\n ",directive
"@param parameterName the name of the parameter\n ",non-directive
"@param x the object containing the input parameter value\n ",non-directive
"@param targetSqlType the SQL type (as defined in java.sql.Types) to be \n                      sent to the database\n ",directive
"@see #getObject\n ",non-directive
"@since 1.4\n",non-directive
" Sets the designated parameter to the given <code>java.sql.Date</code> value,\n using the given <code>Calendar</code> object.  ",non-directive
"The driver uses\n the <code>Calendar</code> object to construct an SQL <code>DATE</code> value,\n which the driver then sends to the database.  ",non-directive
"With a\n a <code>Calendar</code> object, the driver can calculate the date\n taking into account a custom timezone.  ",non-directive
"If no\n <code>Calendar</code> object is specified, the driver uses the default\n timezone, which is that of the virtual machine running the application.\n\n ",directive
"@param parameterName the name of the parameter\n ",non-directive
"@param x the parameter value\n ",non-directive
"@param cal the <code>Calendar</code> object the driver will use\n            to construct the date\n ",non-directive
"@see #getDate\n ",non-directive
"@since 1.4\n",non-directive
" Sets the designated parameter to the given <code>java.sql.Time</code> value,\n using the given <code>Calendar</code> object.  ",non-directive
"The driver uses\n the <code>Calendar</code> object to construct an SQL <code>TIME</code> value,\n which the driver then sends to the database.  ",non-directive
"With a\n a <code>Calendar</code> object, the driver can calculate the time\n taking into account a custom timezone.  ",non-directive
"If no\n <code>Calendar</code> object is specified, the driver uses the default\n timezone, which is that of the virtual machine running the application.\n\n ",directive
"@param parameterName the name of the parameter\n ",non-directive
"@param x the parameter value\n ",non-directive
"@param cal the <code>Calendar</code> object the driver will use\n            to construct the time\n ",non-directive
"@see #getTime\n ",non-directive
"@since 1.4\n",non-directive
" Retrieves the value of a JDBC <code>ARRAY</code> parameter as an\n {@link java.sql.Array} object in the Java programming language.\n\n ",non-directive
"@param parameterName the name of the parameter\n ",non-directive
"@return the parameter value as an <code>Array</code> object in\n         Java programming language.  ",non-directive
"If the value was SQL <code>NULL</code>, \n         the value <code>null</code> is returned.\n ",non-directive
"@since 1.4\n",non-directive
" Sets the designated parameter to a <code>java.sql.NClob</code> object. ",non-directive
"The object\n implements the <code>java.sql.NClob</code> interface. ",non-directive
"This <code>NClob</code>\n object maps to a SQL <code>NCLOB</code>.\n ",directive
"@param parameterName the name of the parameter to be set\n ",non-directive
"@param value the parameter value\n ",non-directive
"@since 1.6\n",non-directive
" Constructs a <code>BatchUpdateException</code> object initialized with a given\n <code>reason</code> and <code>updateCounts</code>.\n ",non-directive
"The <code>cause</code> is not initialized, and may subsequently be\n initialized by a call to the \n {@link Throwable#initCause(java.lang.Throwable)} method.  ",directive
"The \n <code>SQLState</code> is initialized to <code>null</code>\n and the vender code is initialized to 0.\n ",directive
"<p>\n\n\n ",non-directive
"@param reason a description of the exception \n ",non-directive
"@param updateCounts an array of <code>int</code>, with each element\n indicating the update count, <code>Statement.SUCCESS_NO_INFO</code> or\n <code>Statement.EXECUTE_FAILED</code> for each SQL command in \n the batch for JDBC drivers that continue processing\n after a command failure; an update count or\n <code>Statement.SUCCESS_NO_INFO</code> for each SQL command in the batch\n prior to the failure for JDBC drivers that stop processing after a command\n failure\n ",directive
"@since 1.2\n",non-directive
" Constructs a <code>BatchUpdateException</code> object initialized with a\n given <code>cause</code> and <code>updateCounts</code>.\n ",non-directive
"The <code>SQLState</code> is initialized\n to <code>null</code> and the vendor code is initialized to 0. \n ",directive
"The <code>reason</code>  is initialized to <code>null</code> if \n <code>cause==null</code> or to <code>cause.toString()</code> if \n <code>cause!=null</code>.\n\n ",directive
"@param updateCounts an array of <code>int</code>, with each element\n indicating the update count, <code>Statement.SUCCESS_NO_INFO</code> or\n <code>Statement.EXECUTE_FAILED</code> for each SQL command in \n the batch for JDBC drivers that continue processing\n after a command failure; an update count or\n <code>Statement.SUCCESS_NO_INFO</code> for each SQL command in the batch\n prior to the failure for JDBC drivers that stop processing after a command\n failure\n ",directive
"@param cause the underlying reason for this <code>SQLException</code>\n (which is saved for later retrieval by the <code>getCause()</code> method); may be null indicating\n the cause is non-existent or unknown.\n ",non-directive
"@since 1.6\n",non-directive
" Gets the base URL. ",non-directive
"This is the URL of the directory which contains the applet.\n\n ",non-directive
"@return  the base {@link java.net.URL} of\n          the directory which contains the applet.\n ",non-directive
"@see     java.applet.AppletStub#getDocumentBase()\n",non-directive
" Creates an audio clip.\n\n ",non-directive
"@param   url   an absolute URL giving the location of the audio clip.\n ",non-directive
"@return  the audio clip at the specified URL.\n",non-directive
" Finds all the keys of the streams in this applet context.\n ",non-directive
"<p>\n For security reasons, mapping of streams and keys exists for each \n codebase. ",directive
"In other words, applet from one codebase cannot access \n the streams created by an applet from a different codebase\n <p>\n ",directive
"@return  an Iterator of all the names of the streams in this applet \n          context.\n ",non-directive
"@since 1.4\n",non-directive
" Called by the browser or applet viewer to inform\n this applet that it has been loaded into the system. ",non-directive
"It is always\n called before the first time that the <code>start</code> method is\n called.\n ",directive
"<p>\n A subclass of <code>Applet</code> should override this method if\n it has initialization to perform. ",directive
"For example, an applet with\n threads would use the <code>init</code> method to create the\n threads and the <code>destroy</code> method to kill them.\n ",non-directive
"<p>\n The implementation of this method provided by the\n <code>Applet</code> class does nothing.\n\n ",non-directive
"@see     java.applet.Applet#destroy()\n ",non-directive
"@see     java.applet.Applet#start()\n ",non-directive
"@see     java.applet.Applet#stop()\n",non-directive
" Compares the host components of two URLs.\n ",non-directive
"@param u1 the URL of the first host to compare \n ",non-directive
"@param u2 the URL of the second host to compare \n ",non-directive
"@return	<tt>true</tt> if and only if they \n are equal, <tt>false</tt> otherwise.\n ",non-directive
"@since 1.3\n",non-directive
" Loads filename map (a mimetable) from a data file. ",non-directive
"It will\n first try to load the user-specific table, defined\n by &quot;content.types.user.table&quot; property. ",non-directive
"If that fails,\n it tries to load the default built-in table at \n lib/content-types.properties under java home.\n\n ",non-directive
"@return the FileNameMap\n ",non-directive
"@since 1.2\n ",non-directive
"@see #setFileNameMap(java.net.FileNameMap)\n",non-directive
" Returns setting for read timeout. ",non-directive
"0 return implies that the\n option is disabled (i.e., timeout of infinity).\n\n ",directive
"@return an <code>int</code> that indicates the read timeout\n         value in milliseconds\n\n ",non-directive
"@see #setReadTimeout(int)\n ",non-directive
"@see InputStream#read()\n ",non-directive
"@since 1.5\n",non-directive
" Returns the value of this <code>URLConnection</code>'s\n <code>doOutput</code> flag.\n\n ",non-directive
"@return  the value of this <code>URLConnection</code>'s\n          <code>doOutput</code> flag.\n ",non-directive
"@see     #setDoOutput(boolean)\n",non-directive
" Sets the default value of the <code>useCaches</code> field to the \n specified value. \n\n ",non-directive
"@param   defaultusecaches   the new value.\n ",non-directive
"@see     #getDefaultUseCaches()\n",non-directive
" Gets the path part of this <code>URL</code>.\n\n ",non-directive
"@return  the path part of this <code>URL</code>, or an\n empty string if one does not exist\n ",non-directive
"@since 1.3\n",non-directive
" Gets the host name of this <code>URL</code>, if applicable.\n ",non-directive
"The format of the host conforms to RFC 2732, i.e. ",non-directive
"for a\n literal IPv6 address, this method will return the IPv6 address\n enclosed in square brackets (<tt>'['</tt> and <tt>']'</tt>).\n\n ",non-directive
"@return  the host name of this <code>URL</code>.\n",non-directive
" Normalizes this URI's path.\n\n ",non-directive
"<p> If this URI is opaque, or if its path is already in normal form,\n then this URI is returned.  ",non-directive
"Otherwise a new URI is constructed that is\n identical to this URI except that its path is computed by normalizing\n this URI's path in a manner consistent with <a\n href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC&nbsp;2396</a>,\n section&nbsp;5.2, step&nbsp;6, sub-steps&nbsp;c through&nbsp;f; that is:\n </p>\n\n \n\n   ",directive
"-- <p> All <tt>\".\"</tt> segments are removed. ",non-directive
"</p>\n\n   ",non-directive
"-- <p> If a <tt>\"..\"</tt> segment is preceded by a non-<tt>\"..\"</tt>\n   segment then both of these segments are removed.  ",non-directive
"This step is\n   repeated until it is no longer applicable. ",non-directive
"</p>\n\n   ",non-directive
"-- <p> If the path is relative, and if its first segment contains a\n   colon character (<tt>':'</tt>), then a <tt>\".\"</tt> segment is\n   prepended.  ",non-directive
"This prevents a relative URI with a path such as\n   <tt>\"a:b/c/d\"</tt> from later being re-parsed as an opaque URI with a\n   scheme of <tt>\"a\"</tt> and a scheme-specific part of <tt>\"b/c/d\"</tt>.\n   ",non-directive
"<b><i>(Deviation from RFC&nbsp;2396)</i></b> </p>\n\n \n\n ",directive
"<p> A normalized path will begin with one or more <tt>\"..\"</tt> segments\n if there were insufficient non-<tt>\"..\"</tt> segments preceding them to\n allow their removal.  ",non-directive
"A normalized path will begin with a <tt>\".\"</tt>\n segment if one was inserted by step 3 above.  ",non-directive
"Otherwise, a normalized\n path will not contain any <tt>\".\"</tt> or <tt>\"..\"</tt> segments. ",non-directive
"</p>\n\n ",non-directive
"@return  A URI equivalent to this URI,\n          but whose path is in normal form\n",non-directive
" Tells whether or not this URI is opaque.\n\n ",non-directive
"<p> A URI is opaque if, and only if, it is absolute and its\n scheme-specific part does not begin with a slash character ('/').\n ",directive
"An opaque URI has a scheme, a scheme-specific part, and possibly\n a fragment; all other components are undefined. ",directive
"</p>\n\n ",non-directive
"@return  <tt>true</tt> if, and only if, this URI is opaque\n",non-directive
" Returns the content of this URI as a US-ASCII string.\n\n ",non-directive
"<p> If this URI does not contain any characters in the <i>other</i>\n category then an invocation of this method will return the same value as\n an invocation of the {@link #toString() toString} method.  ",directive
"Otherwise\n this method works as if by invoking that method and then <a\n href=\"#encode\">encoding</a> the result.  ",directive
"</p>\n\n ",non-directive
"@return  The string form of this URI, encoded as needed\n          so that it only contains characters in the US-ASCII\n          charset\n",non-directive
" Connects this socket to the specified port on the named host. \n\n ",non-directive
"@param      host   the name of the remote host.\n ",non-directive
"@param      port   the port number.\n ",non-directive
" Places the input stream for this socket at \"end of stream\".\n ",non-directive
"Any data sent to this socket is acknowledged and then\n silently discarded.\n\n ",directive
"If you read from a socket input stream after invoking \n shutdownInput() on the socket, the stream will return EOF.\n\n ",directive
"@see java.net.Socket#shutdownOutput()\n ",non-directive
"@see java.net.Socket#close()\n ",non-directive
"@see java.net.Socket#setSoLinger(boolean, int)\n ",non-directive
"@since 1.3\n",non-directive
" Returns the unique {@link java.nio.channels.SocketChannel SocketChannel}\n object associated with this socket, if any.\n\n ",non-directive
"<p> A socket will have a channel if, and only if, the channel itself was\n created via the {@link java.nio.channels.SocketChannel#open\n SocketChannel.open} or {@link\n java.nio.channels.ServerSocketChannel#accept ServerSocketChannel.accept}\n methods.\n\n ",directive
"@return  the socket channel associated with this socket,\n          or <tt>null</tt> if this socket was not created\n          for a channel\n\n ",non-directive
"@since 1.4\n @spec JSR-51\n",non-directive
" Returns an output stream for this socket.\n\n ",non-directive
"<p> If this socket has an associated channel then the resulting output\n stream delegates all of its operations to the channel.  ",directive
"If the channel\n is in non-blocking mode then the output stream's <tt>write</tt>\n operations will throw an {@link\n java.nio.channels.IllegalBlockingModeException}.\n\n ",directive
"<p> Closing the returned {@link java.io.OutputStream OutputStream}\n will close the associated socket.\n\n ",directive
"@return     an output stream for writing bytes to this socket.\n ",non-directive
"@revised 1.4\n @spec JSR-51\n",non-directive
" Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).\n\n ",non-directive
"@param on <code>true</code> to enable TCP_NODELAY, \n <code>false</code> to disable.\n\n ",non-directive
"@since   JDK1.1\n\n ",non-directive
"@see #getTcpNoDelay()\n",non-directive
" Returns setting for SO_LINGER. ",non-directive
"-1 returns implies that the\n option is disabled.\n\n ",directive
"The setting only affects socket close.\n\n ",directive
"@return the setting for SO_LINGER.\n ",non-directive
"@since   JDK1.1\n ",non-directive
"@see #setSoLinger(boolean, int)\n",non-directive
" Sets the client socket implementation factory for the\n application. ",non-directive
"The factory can be specified only once.\n ",directive
"<p>\n When an application creates a new client socket, the socket\n implementation factory's <code>createSocketImpl</code> method is\n called to create the actual socket implementation.\n ",directive
"<p>\n Passing <code>null</code> to the method is a no-op unless the factory\n was already set.\n ",non-directive
"<p>If there is a security manager, this method first calls\n the security manager's <code>checkSetFactory</code> method \n to ensure the operation is allowed. \n ",directive
"This could result in a SecurityException.\n\n ",directive
"@param      fac   the desired factory.\n ",non-directive
"@see        java.net.SocketImplFactory#createSocketImpl()\n ",non-directive
"@see        SecurityManager#checkSetFactory\n",non-directive
" Get an Enumeration with all the subinterfaces (also known as virtual\n interfaces) attached to this network interface.\n ",non-directive
"<p>\n For instance eth0:1 will be a subinterface to eth0.\n\n ",non-directive
"@return an Enumeration object with all of the subinterfaces\n of this network interface\n ",non-directive
"@since 1.6\n",non-directive
" Create a multicast socket.\n \n",non-directive
" <p>If there is a security manager, \n its <code>checkListen</code> method is first called\n with 0 as its argument to ensure the operation is allowed. \n ",directive
"This could result in a SecurityException.\n ",directive
"<p>\n When the socket is created the \n {@link DatagramSocket#setReuseAddress(boolean)} method is \n called to enable the SO_REUSEADDR socket option. \n\n ",directive
"@see SecurityManager#checkListen\n ",non-directive
"@see java.net.DatagramSocket#setReuseAddress(boolean) \n",non-directive
" Creates a socket address where the IP address is the wildcard address\n and the port number a specified value.\n ",non-directive
"<p>\n A valid port value is between 0 and 65535.\n ",directive
"A port number of <code>zero</code> will let the system pick up an\n ephemeral port in a <code>bind</code> operation.\n ",directive
"<p>\n ",non-directive
"@param	port	The port number\n ",non-directive
" Utility routine to check if the multicast address has node scope.\n\n ",non-directive
"@return a <code>boolean</code> indicating if the address has \n         is a multicast address of node-local scope, false if it is not \n         of node-local scope or it is not a multicast address\n ",non-directive
"@since 1.4\n",non-directive
" Create an Inet6Address in the exact manner of {@link InetAddress#getByAddress(String,byte[])}\n except that the IPv6 scope_id is set to the given numeric value.\n ",non-directive
"The scope_id is not checked to determine if it corresponds to any interface on the system.\n ",directive
"See <a href=\"Inet6Address.html#scoped\">here</a> for a description of IPv6\n scoped addresses.\n\n ",directive
"@param host the specified host\n ",non-directive
"@param addr the raw IP address in network byte order\n ",non-directive
"@param scope_id the numeric scope_id for the address.\n ",non-directive
"@return  an Inet6Address object created from the raw IP address.\n ",non-directive
"@since 1.5\n",non-directive
" Utility routine to check if the multicast address has link scope.\n\n ",non-directive
"@return a <code>boolean</code> indicating if the address has \n         is a multicast address of link-local scope, false if it is not \n         of link-local scope or it is not a multicast address\n ",non-directive
"@since 1.4\n",non-directive
" Utility routine to check if the multicast address has node scope.\n\n ",non-directive
"@return a <code>boolean</code> indicating if the address has \n         is a multicast address of node-local scope, false if it is not \n         of node-local scope or it is not a multicast address\n ",non-directive
"@since 1.4\n",non-directive
" Returns the raw IP address of this <code>InetAddress</code>\n object. ",non-directive
"The result is in network byte order: the highest order\n byte of the address is in <code>getAddress()[0]</code>.\n\n ",directive
"@return  the raw IP address of this object.\n",non-directive
" Compares this object against the specified object.\n ",non-directive
"The result is <code>true</code> if and only if the argument is\n not <code>null</code> and it represents the same IP address as\n this object.\n ",non-directive
"<p>\n Two instances of <code>InetAddress</code> represent the same IP\n address if the length of the byte arrays returned by\n <code>getAddress</code> is the same for both, and each of the\n array components is the same for the byte arrays.\n\n ",non-directive
"@param   obj   the object to compare against.\n ",non-directive
"@return  <code>true</code> if the objects are the same;\n          <code>false</code> otherwise.\n ",non-directive
"@see     java.net.InetAddress#getAddress()\n",non-directive
" Gets the HTTP response message, if any, returned along with the\n response code from a server.  ",non-directive
"From responses like:\n <PRE>\n HTTP/1.0 200 OK\n HTTP/1.0 404 Not Found\n </PRE>\n Extracts the Strings \"OK\" and \"Not Found\" respectively.\n ",non-directive
"Returns null if none could be discerned from the responses \n (the result was not valid HTTP).\n ",non-directive
"@return the HTTP response message, or <code>null</code>\n",non-directive
" Set the TTL (time-to-live) option.\n ",non-directive
"@param ttl an <tt>int</tt> specifying the time-to-live value\n ",non-directive
"@see #getTimeToLive()\n",non-directive
" Gets traffic class or type-of-service in the IP datagram \n header for packets sent from this DatagramSocket.\n ",non-directive
"<p>\n As the underlying network implementation may ignore the\n traffic class or type-of-service set using {@link #setTrafficClass(int)}\n this method may return a different value than was previously\n set using the {@link #setTrafficClass(int)} method on this \n DatagramSocket.\n\n ",directive
"@return the traffic class or type-of-service already set\n ",non-directive
"@since 1.4\n ",non-directive
"@see #setTrafficClass(int)\n",non-directive
" Constructs a datagram socket and binds it to the specified port\n on the local host machine.  ",non-directive
"The socket will be bound to the wildcard\n address, an IP address chosen by the kernel.\n \n",directive
" <p>If there is a security manager, \n its <code>checkListen</code> method is first called\n with the <code>port</code> argument\n as its argument to ensure the operation is allowed. \n ",directive
"This could result in a SecurityException.\n\n ",directive
"@param      port port to use.\n ",non-directive
"@see SecurityManager#checkListen\n",non-directive
" Returns the offset of the data to be sent or the offset of the\n data received.\n\n ",non-directive
"@return  the offset of the data to be sent or the offset of the\n          data received.\n\n ",non-directive
"@since 1.2\n",non-directive
" Sets the port number on the remote host to which this datagram\n is being sent.\n ",non-directive
"@param iport the port number\n ",non-directive
"@since   JDK1.1\n ",non-directive
"@see #getPort()\n",non-directive
" Remove a cookie from store.\n\n ",non-directive
"@param uri       the uri this cookie associated with.\n                  ",non-directive
"if <tt>null</tt>, the cookie to be removed is not associated\n                  with an URI when added; if not <tt>null</tt>, the cookie\n                  to be removed is associated with the given URI when added.\n ",non-directive
"@param cookie    the cookie to remove\n\n ",non-directive
"@return          <tt>true</tt> if this store contained the specified cookie\n\n ",non-directive
" Gets the <code>hostname</code> of the\n site or proxy requesting authentication, or <code>null</code>\n if not available.\n \n",non-directive
"@return the hostname of the connection requiring authentication, or null\n		if it's not available.\n ",non-directive
"@since 1.4\n",non-directive
" Returns the value to which the specified key is mapped,\n or {@code null} if this map contains no mapping for the key.\n\n ",non-directive
"<p>More formally, if this map contains a mapping from a key\n {@code k} to a value {@code v} such that {@code (key==null ? k==null :\n key.equals(k))}, then this method returns {@code v}; otherwise\n it returns {@code null}.  ",directive
"(There can be at most one such mapping.)\n\n <p>A return value of {@code null} does not <i>necessarily</i>\n indicate that the map contains no mapping for the key; it's also\n possible that the map explicitly maps the key to {@code null}.\n ",directive
"The {@link #containsKey containsKey} operation may be used to\n distinguish these two cases.\n\n ",directive
"@see #put(Object, Object)\n",non-directive
" Returns <tt>true</tt> if this map maps one or more keys to the\n specified value.\n\n ",non-directive
"@param value value whose presence in this map is to be tested\n ",non-directive
"@return <tt>true</tt> if this map maps one or more keys to the\n         specified value\n",non-directive
" Constructs a new <tt>WeakHashMap</tt> with the same mappings as the\n specified map.  ",non-directive
"The <tt>WeakHashMap</tt> is created with the default\n load factor (0.75) and an initial capacity sufficient to hold the\n mappings in the specified map.\n\n ",directive
"@param   m the map whose mappings are to be placed in this map\n ",non-directive
"@since	1.3\n",non-directive
" Returns {@code true} if this vector contains the specified element.\n ",non-directive
"More formally, returns {@code true} if and only if this vector\n contains at least one element {@code e} such that\n <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.\n\n ",non-directive
"@param o element whose presence in this vector is to be tested\n ",non-directive
"@return {@code true} if this vector contains the specified element\n",non-directive
" Adds the specified component to the end of this vector,\n increasing its size by one. ",non-directive
"The capacity of this vector is\n increased if its size becomes greater than its capacity.\n\n ",non-directive
"<p>This method is identical in functionality to the\n {@link #add(Object) add(E)}\n method (which is part of the {@link List} interface).\n\n ",directive
"@param   obj   the component to be added\n",non-directive
" Removes the first occurrence of the specified element in this Vector\n If the Vector does not contain the element, it is unchanged.  ",non-directive
"More\n formally, removes the element with the lowest index i such that\n {@code (o==null ? get(i)==null : o.equals(get(i)))} (if such\n an element exists).\n\n ",non-directive
"@param o element to be removed from this Vector, if present\n ",non-directive
"@return true if the Vector contained the specified element\n ",non-directive
"@since 1.2\n",non-directive
" Gets the time zone offset, for current date, modified in case of\n daylight savings. ",non-directive
"This is the offset to add to UTC to get local time.\n ",directive
"<p>\n This method returns a historically correct offset if an\n underlying <code>TimeZone</code> implementation subclass\n supports historical Daylight Saving Time schedule and GMT\n offset changes.\n\n ",directive
"@param era the era of the given date.\n ",non-directive
"@param year the year in the given date.\n ",non-directive
"@param month the month in the given date.\n ",non-directive
"Month is 0-based. ",directive
"e.g., 0 for January.\n ",directive
"@param day the day-in-month of the given date.\n ",non-directive
"@param dayOfWeek the day-of-week of the given date.\n ",non-directive
"@param milliseconds the milliseconds in day in <em>standard</em>\n local time.\n\n ",non-directive
"@return the offset in milliseconds to add to GMT to get local time.\n\n ",non-directive
"@see Calendar#ZONE_OFFSET\n ",non-directive
"@see Calendar#DST_OFFSET\n",non-directive
" Tests if there are more tokens available from this tokenizer's string. \n ",non-directive
"If this method returns <tt>true</tt>, then a subsequent call to \n <tt>nextToken</tt> with no argument will successfully return a token.\n\n ",directive
"@return  <code>true</code> if and only if there is at least one token \n          in the string after the current position; <code>false</code> \n          otherwise.\n",non-directive
" Sets the daylight saving time start rule. ",non-directive
"For example, if daylight saving\n time starts on the first Sunday in April at 2 am in local wall clock\n time, you can set the start rule by calling:\n <pre><code>setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2*60*60*1000);</code></pre>\n\n ",directive
"@param startMonth      The daylight saving time starting month. ",non-directive
"Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. ",directive
"e.g., 0 for January).\n ",directive
"@param startDay        The day of the month on which the daylight saving time starts.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param startDayOfWeek  The daylight saving time starting day-of-week.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param startTime       The daylight saving time starting time in local wall clock\n                        time, which is local standard time in this case.\n ",non-directive
" Sets the daylight saving time end rule. ",non-directive
"For example, if daylight saving time\n ends on the last Sunday in October at 2 am in wall clock time,\n you can set the end rule by calling:\n <code>setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2*60*60*1000);</code>\n\n ",directive
"@param endMonth        The daylight saving time ending month. ",non-directive
"Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. ",directive
"e.g., 9 for October).\n ",directive
"@param endDay          The day of the month on which the daylight saving time ends.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param endDayOfWeek    The daylight saving time ending day-of-week.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param endTime         The daylight saving ending time in local wall clock time,\n                        (in milliseconds within the day) which is local daylight\n                        time in this case.\n ",non-directive
" Constructs a SimpleTimeZone with the given base time zone offset from\n GMT, time zone ID, and rules for starting and ending the daylight\n time.\n ",non-directive
"Both <code>startTime</code> and <code>endTime</code> are assumed to be\n represented in the wall clock time. ",directive
"This constructor is equivalent to:\n <pre><code>\n     SimpleTimeZone(rawOffset,\n                    ID,\n                    startMonth,\n                    startDay,\n                    startDayOfWeek,\n                    startTime,\n                    SimpleTimeZone.{@link #WALL_TIME},\n                    endMonth,\n                    endDay,\n                    endDayOfWeek,\n                    endTime,\n                    SimpleTimeZone.{@link #WALL_TIME},\n                    dstSavings)\n </code></pre>\n\n ",directive
"@param rawOffset       The given base time zone offset from GMT.\n ",non-directive
"@param ID              The time zone ID which is given to this object.\n ",non-directive
"@param startMonth      The daylight saving time starting month. ",non-directive
"Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. ",directive
"e.g., 0 for January).\n ",directive
"@param startDay        The day of the month on which the daylight saving time starts.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param startDayOfWeek  The daylight saving time starting day-of-week.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param startTime       The daylight saving time starting time in local wall clock\n                        time, which is local standard time in this case.\n ",non-directive
"@param endMonth        The daylight saving time ending month. ",non-directive
"Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. ",directive
"e.g., 9 for October).\n ",directive
"@param endDay          The day of the month on which the daylight saving time ends.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param endDayOfWeek    The daylight saving time ending day-of-week.\n                        ",non-directive
"See the class description for the special cases of this parameter.\n ",directive
"@param endTime         The daylight saving ending time in local wall clock time,\n                        which is local daylight time in this case.\n ",non-directive
"@param dstSavings      The amount of time in milliseconds saved during\n                        daylight saving time.\n ",non-directive
"@since 1.2\n",non-directive
" Returns the number of elements in this set (its cardinality).  ",non-directive
"If this\n set contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n ",directive
"@return the number of elements in this set (its cardinality)\n",non-directive
" Clear this loader's provider cache so that all providers will be\n reloaded.\n\n ",non-directive
"<p> After invoking this method, subsequent invocations of the {@link\n #iterator() iterator} method will lazily look up and instantiate\n providers from scratch, just as is done by a newly-created loader.\n\n ",directive
"<p> This method is intended for use in situations in which new providers\n can be installed into a running Java virtual machine.\n",directive
" Returns true if the next token matches the pattern constructed from the \n specified string. ",non-directive
"The scanner does not advance past any input.\n\n ",directive
"<p> An invocation of this method of the form <tt>hasNext(pattern)</tt>\n behaves in exactly the same way as the invocation \n <tt>hasNext(Pattern.compile(pattern))</tt>.\n\n ",directive
"@param pattern a string specifying the pattern to scan\n ",non-directive
"@return true if and only if this scanner has another token matching\n         the specified pattern\n ",non-directive
" Returns the next token if it matches the pattern constructed from the \n specified string.  ",non-directive
"If the match is successful, the scanner advances \n past the input that matched the pattern.\n\n ",non-directive
"<p> An invocation of this method of the form <tt>next(pattern)</tt>\n behaves in exactly the same way as the invocation \n <tt>next(Pattern.compile(pattern))</tt>.\n\n ",directive
"@param pattern a string specifying the pattern to scan\n ",non-directive
"@return the next token\n ",non-directive
" Skips input that matches a pattern constructed from the specified\n string.\n\n ",non-directive
"<p> An invocation of this method of the form <tt>skip(pattern)</tt>\n behaves in exactly the same way as the invocation \n <tt>skip(Pattern.compile(pattern))</tt>.\n\n ",directive
"@param pattern a string specifying the pattern to skip over\n ",non-directive
"@return this scanner\n ",non-directive
" Returns true if the next token in this scanner's input can be\n interpreted as a boolean value using a case insensitive pattern \n created from the string \"true|false\".  ",non-directive
"The scanner does not\n advance past the input that matched.\n\n ",directive
"@return true if and only if this scanner's next token is a valid\n         boolean value\n ",non-directive
" Returns true if the next token in this scanner's input can be\n interpreted as an int value in the specified radix using the \n {@link #nextInt} method. ",non-directive
"The scanner does not advance past any input.\n\n ",non-directive
"@param radix the radix used to interpret the token as an int value\n ",non-directive
"@return true if and only if this scanner's next token is a valid\n         int value\n ",non-directive
" Scans the next token of the input as an <tt>int</tt>.\n ",non-directive
"This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid int value as\n described below. ",directive
"If the translation is successful, the scanner advances\n past the input that matched.\n\n ",non-directive
"<p> If the next token matches the <a\n href=\"#Integer-regex\"><i>Integer</i></a> regular expression defined \n above then the token is converted into an <tt>int</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Integer#parseInt(String, int) Integer.parseInt} with the\n specified radix.\n\n ",directive
"@param radix the radix used to interpret the token as an int value\n ",non-directive
"@return the <tt>int</tt> scanned from the input\n ",non-directive
" Returns true if the next token in this scanner's input can be\n interpreted as a long value in the default radix using the \n {@link #nextLong} method. ",non-directive
"The scanner does not advance past any input.\n\n ",directive
"@return true if and only if this scanner's next token is a valid\n         long value\n ",non-directive
" Gets a resource bundle using the specified base name, the default locale,\n and the caller's class loader. ",non-directive
"Calling this method is equivalent to calling\n <blockquote>\n <code>getBundle(baseName, Locale.getDefault(), this.getClass().getClassLoader())</code>,\n </blockquote>\n except that <code>getClassLoader()</code> is run with the security\n privileges of <code>ResourceBundle</code>.\n ",directive
"See {@link #getBundle(String, Locale, ClassLoader) getBundle}\n for a complete description of the search and instantiation strategy.\n\n ",directive
"@param baseName the base name of the resource bundle, a fully qualified class name\n ",non-directive
"@return a resource bundle for the given base name and the default locale\n",non-directive
" Gets an object for the given key from this resource bundle.\n ",non-directive
"Returns null if this resource bundle does not contain an\n object for the given key.\n\n ",non-directive
"@param key the key for the desired object\n ",non-directive
"@return the object for the given key, or null\n",non-directive
" Returns a <code>Set</code> of the keys contained\n <em>only</em> in this <code>ResourceBundle</code>.\n\n ",non-directive
"@return a <code>Set</code> of the keys contained only in this\n         <code>ResourceBundle</code>\n ",non-directive
"@since 1.6\n ",non-directive
"@see #keySet()\n",non-directive
" Calls the <tt>Hashtable</tt> method <code>put</code>. ",non-directive
"Provided for\n parallelism with the <tt>getProperty</tt> method. ",directive
"Enforces use of\n strings for property keys and values. ",directive
"The value returned is the\n result of the <tt>Hashtable</tt> call to <code>put</code>.\n\n ",non-directive
"@param key the key to be placed into this property list.\n ",non-directive
"@param value the value corresponding to <tt>key</tt>.\n ",non-directive
"@return     the previous value of the specified key in this property\n             list, or <code>null</code> if it did not have one.\n ",non-directive
"@see #getProperty\n ",non-directive
"@since    1.2\n",non-directive
" Reads a property list (key and element pairs) from the input\n byte stream. ",non-directive
"The input stream is in a simple line-oriented\n format as specified in\n {@link #load(java.io.Reader) load(Reader)} and is assumed to use\n the ISO 8859-1 character encoding; that is each byte is one Latin1\n character. ",directive
"Characters not in Latin1, and certain special characters,\n are represented in keys and elements using\n <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#3.3\">Unicode escapes</a>.\n ",directive
"<p>\n The specified stream remains open after this method returns.\n\n ",directive
"@param      inStream   the input stream.\n ",non-directive
"@since 1.2\n",non-directive
" Calls the <code>store(OutputStream out, String comments)</code> method\n and suppresses IOExceptions that were thrown.\n\n ",non-directive
"@deprecated This method does not throw an IOException if an I/O error\n occurs while saving the property list.  ",directive
"The preferred way to save a\n properties list is via the <code>store(OutputStream out, \n String comments)</code> method or the \n <code>storeToXML(OutputStream os, String comment)</code> method.\n\n ",directive
"@param   out      an output stream.\n ",non-directive
"@param   comments   a description of the property list.\n ",non-directive
" Writes this property list (key and element pairs) in this\n <code>Properties</code> table to the output character stream in a \n format suitable for using the {@link #load(java.io.Reader) load(Reader)}\n method.\n ",non-directive
"<p>\n Properties from the defaults table of this <code>Properties</code>\n table (if any) are <i>not</i> written out by this method.\n ",directive
"<p>\n If the comments argument is not null, then an ASCII <code>#</code>\n character, the comments string, and a line separator are first written\n to the output stream. ",non-directive
"Thus, the <code>comments</code> can serve as an\n identifying comment. ",non-directive
"Any one of a line feed ('\n'), a carriage\n return ('\r'), or a carriage return followed immediately by a line feed\n in comments is replaced by a line separator generated by the <code>Writer</code>\n and if the next character in comments is not character <code>#</code> or \n character <code>!</code> then an ASCII <code>#</code> is written out \n after that line separator.\n ",directive
"<p>\n Next, a comment line is always written, consisting of an ASCII\n <code>#</code> character, the current date and time (as if produced\n by the <code>toString</code> method of <code>Date</code> for the\n current time), and a line separator as generated by the <code>Writer</code>.\n ",non-directive
"<p>\n Then every entry in this <code>Properties</code> table is\n written out, one per line. ",non-directive
"For each entry the key string is\n written, then an ASCII <code>=</code>, then the associated\n element string. ",non-directive
"For the key, all space characters are\n written with a preceding <code>\</code> character.  ",directive
"For the\n element, leading space characters, but not embedded or trailing\n space characters, are written with a preceding <code>\</code>\n character. ",directive
"The key and element characters <code>#</code>,\n <code>!</code>, <code>=</code>, and <code>:</code> are written\n with a preceding backslash to ensure that they are properly loaded.\n ",directive
"<p>\n After the entries have been written, the output stream is flushed.  \n ",non-directive
"The output stream remains open after this method returns.\n ",directive
"<p>\n\n ",non-directive
"@param   writer      an output character stream writer.\n ",non-directive
"@param   comments   a description of the property list.\n ",non-directive
"@since 1.6\n",non-directive
" Returns a set of keys in this property list where\n the key and its corresponding value are strings,\n including distinct keys in the default property list if a key\n of the same name has not already been found from the main\n properties list.  ",non-directive
"Properties whose key or value is not \n of type <tt>String</tt> are omitted.\n ",directive
"<p>\n The returned set is not backed by the <tt>Properties</tt> object.\n ",directive
"Changes to this <tt>Properties</tt> are not reflected in the set,\n or vice versa.\n\n ",directive
"@return  a set of keys in this property list where\n          the key and its corresponding value are strings,\n          including the keys in the default property list.\n ",non-directive
"@see     java.util.Properties#defaults\n ",non-directive
"@since   1.6\n",non-directive
" Prints this property list out to the specified output stream.\n ",non-directive
"This method is useful for debugging.\n\n ",directive
"@param   out   an output stream.\n ",non-directive
"@since   JDK1.1\n",non-directive
" Tests if this object has changed. \n\n ",non-directive
"@return  <code>true</code> if and only if the <code>setChanged</code> \n          method has been called more recently than the \n          <code>clearChanged</code> method on this object; \n          <code>false</code> otherwise.\n ",non-directive
"@see     java.util.Observable#clearChanged()\n ",non-directive
"@see     java.util.Observable#setChanged()\n",non-directive
" Returns a reverse order view of the mappings contained in this map.\n ",non-directive
"The descending map is backed by this map, so changes to the map are\n reflected in the descending map, and vice-versa.  ",directive
"If either map is\n modified while an iteration over a collection view of either map\n is in progress (except through the iterator's own {@code remove}\n operation), the results of the iteration are undefined.\n\n ",directive
"<p>The returned map has an ordering equivalent to\n <tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.\n ",non-directive
"The expression {@code m.descendingMap().descendingMap()} returns a\n view of {@code m} essentially equivalent to {@code m}.\n\n ",non-directive
"@return a reverse order view of this map\n",non-directive
" Returns a {@link Collection} view of the values contained in this map.\n ",non-directive
"The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  ",directive
"If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  ",directive
"The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  ",non-directive
"It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n\n ",directive
"@return a collection view of the values contained in this map\n",non-directive
" Gets the current value of the default locale for this instance\n of the Java Virtual Machine.\n ",non-directive
"<p>\n The Java Virtual Machine sets the default locale during startup\n based on the host environment. ",non-directive
"It is used by many locale-sensitive\n methods if no locale is explicitly specified.\n ",directive
"It can be changed using the\n {@link #setDefault(java.util.Locale) setDefault} method.\n\n ",directive
"@return the default locale for this instance of the Java Virtual Machine\n",non-directive
" Returns a name for the locale's country that is appropriate for display to the\n user.\n ",non-directive
"If possible, the name returned will be localized according to inLocale.\n ",non-directive
"For example, if the locale is fr_FR and inLocale\n is en_US, getDisplayCountry() will return \"France\"; if the locale is en_US and\n inLocale is fr_FR, getDisplayCountry() will return \"Etats-Unis\".\n ",non-directive
"If the name returned cannot be localized according to inLocale.\n ",directive
"(say, we don't have a Japanese name for Croatia),\n this function falls back on the English name, and finally\n on the ISO code as a last-resort value.  ",directive
"If the locale doesn't specify a country,\n this function returns the empty string.\n\n ",directive
" Returns a name for the locale that is appropriate for display to the\n user.  ",non-directive
"This will be the values returned by getDisplayLanguage(), getDisplayCountry(),\n and getDisplayVariant() assembled into a single string.  ",non-directive
"The display name will have\n one of the following forms:<p><blockquote>\n language (country, variant)<p>\n language (country)<p>\n language (variant)<p>\n country (variant)<p>\n language<p>\n country<p>\n variant<p></blockquote>\n depending on which fields are specified in the locale.  ",non-directive
"If the language, country,\n and variant fields are all empty, this function returns the empty string.\n\n ",non-directive
" Returns the element at the specified position in this list.\n\n ",non-directive
"@param index index of the element to return\n ",non-directive
"@return the element at the specified position in this list\n ",non-directive
" Retrieves, but does not remove, the head (first element) of this list.\n ",directive
"@return the head of this list, or <tt>null</tt> if this list is empty\n ",non-directive
"@since 1.5\n",non-directive
" Retrieves, but does not remove, the first element of this list,\n or returns <tt>null</tt> if this list is empty.\n\n ",non-directive
"@return the first element of this list, or <tt>null</tt>\n         if this list is empty\n ",non-directive
"@since 1.6\n",non-directive
" Constructs a new linked hash set with the same elements as the\n specified collection.  ",non-directive
"The linked hash set is created with an initial\n capacity sufficient to hold the elements in the specified collection\n and the default load factor (0.75).\n\n ",directive
"@param c  the collection whose elements are to be placed into\n           this set\n ",non-directive
" Removes the mapping for this key from this map if present.\n\n ",non-directive
"@param key key whose mapping is to be removed from the map\n ",non-directive
"@return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         ",non-directive
"(A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n",directive
" Returns true if this hashtable maps one or more keys to this value.\n\n ",non-directive
"<p>Note that this method is identical in functionality to {@link\n #contains contains} (which predates the {@link Map} interface).\n\n ",directive
"@param value value whose presence in this hashtable is to be tested\n ",non-directive
"@return <tt>true</tt> if this map maps one or more keys to the\n         specified value\n ",non-directive
"@since 1.2\n",non-directive
" Tests if the specified object is a key in this hashtable.\n\n ",non-directive
"@param   key   possible key\n ",non-directive
"@return  <code>true</code> if and only if the specified object\n          is a key in this hashtable, as determined by the\n          <tt>equals</tt> method; <code>false</code> otherwise.\n ",directive
"@see     #contains(Object)\n",non-directive
" Removes the key (and its corresponding value) from this\n hashtable. ",non-directive
"This method does nothing if the key is not in the hashtable.\n\n ",directive
"@param   key   the key that needs to be removed\n ",non-directive
"@return  the value to which the key had been mapped in this hashtable,\n          or <code>null</code> if the key did not have a mapping\n ",non-directive
" Converts the time value (millisecond offset from the <a\n href=\"Calendar.html#Epoch\">Epoch</a>) to calendar field values.\n ",non-directive
"The time is <em>not</em>\n recomputed first; to recompute the time, then the fields, call the\n <code>complete</code> method.\n\n ",directive
"@see Calendar#complete\n",non-directive
" Constructs a new formatter with the specified locale.\n\n ",non-directive
"<p> The destination of the formatted output is a {@link StringBuilder}\n which may be retrieved by invoking {@link #out out()} and whose current\n content may be converted into a string by invoking {@link #toString\n toString()}.\n\n ",directive
"@param  l\n         The {@linkplain java.util.Locale locale} to apply during\n         formatting.  ",non-directive
"If <tt>l</tt> is <tt>null</tt> then no localization\n         is applied.\n",non-directive
" Formats the object using the provided {@link Formatter formatter}.\n\n ",non-directive
"@param  formatter\n         The {@link Formatter formatter}.  ",non-directive
"Implementing classes may call\n         {@link Formatter#out() formatter.out()} or {@link\n         Formatter#locale() formatter.locale()} to obtain the {@link\n         Appendable} or {@link Locale} used by this\n         <tt>formatter</tt> respectively. \n\n ",directive
"@param  flags\n         The flags modify the output format.  ",non-directive
"The value is interpreted as\n         a bitmask.  ",directive
"Any combination of the following flags may be set:\n         {@link FormattableFlags#LEFT_JUSTIFY}, {@link\n         FormattableFlags#UPPERCASE}, and {@link\n         FormattableFlags#ALTERNATE}.  ",directive
"If no flags are set, the default\n         formatting of the implementing class will apply.\n\n ",directive
"@param  width\n         The minimum number of characters to be written to the output.\n         ",non-directive
"If the length of the converted value is less than the\n         <tt>width</tt> then the output will be padded by\n         <tt>'&nbsp;&nbsp;'</tt> until the total number of characters\n         equals width.  ",directive
"The padding is at the beginning by default.  ",non-directive
"If\n         the {@link FormattableFlags#LEFT_JUSTIFY} flag is set then the\n         padding will be at the end.  ",non-directive
"If <tt>width</tt> is <tt>-1</tt>\n         then there is no minimum.\n\n ",non-directive
"@param  precision\n         The maximum number of characters to be written to the output.\n         ",non-directive
"The precision is applied before the width, thus the output will\n         be truncated to <tt>precision</tt> characters even if the\n         <tt>width</tt> is greater than the <tt>precision</tt>.  ",directive
"If\n         <tt>precision</tt> is <tt>-1</tt> then there is no explicit\n         limit on the number of characters.\n\n ",non-directive
"For specification of all\n          possible formatting errors, see the <a\n          href=\"../util/Formatter.html#detail\">Details</a> section of the\n          formatter class specification.\n",directive
" Returns the value to which the specified key is mapped,\n or {@code null} if this map contains no mapping for the key.\n\n ",non-directive
"<p>More formally, if this map contains a mapping from a key\n {@code k} to a value {@code v} such that {@code (key == k)},\n then this method returns {@code v}; otherwise it returns\n {@code null}.  ",non-directive
"(There can be at most one such mapping.)\n\n <p>A return value of {@code null} does not <i>necessarily</i>\n indicate that the map contains no mapping for the key; it's also\n possible that the map explicitly maps the key to {@code null}.\n ",directive
"The {@link #containsKey containsKey} operation may be used to\n distinguish these two cases.\n",directive
" Inserts the specified element at the front of this deque if it is\n possible to do so immediately without violating capacity restrictions.\n ",non-directive
"When using a capacity-restricted deque, it is generally preferable to\n use method {@link #offerFirst}.\n\n ",directive
"@param e the element to add\n ",non-directive
" Inserts the specified element at the front of this deque unless it would\n violate capacity restrictions.  ",non-directive
"When using a capacity-restricted deque,\n this method is generally preferable to the {@link #addFirst} method,\n which can fail to insert an element only by throwing an exception.\n\n ",directive
"@param e the element to add\n ",non-directive
"@return <tt>true</tt> if the element was added to this deque, else\n         <tt>false</tt>\n ",non-directive
" Sets the year of this <tt>Date</tt> object to be the specified \n value plus 1900. ",non-directive
"This <code>Date</code> object is modified so \n that it represents a point in time within the specified year, \n with the month, date, hour, minute, and second the same as \n before, as interpreted in the local time zone. ",non-directive
"(Of course, if \n the date was February 29, for example, and the year is set to a \n non-leap year, then the new date will be treated as if it were \n on March 1.)\n\n ",directive
"@param   year    the year value.\n ",non-directive
"@see     java.util.Calendar\n ",non-directive
"@deprecated As of JDK version 1.1,\n replaced by <code>Calendar.set(Calendar.YEAR, year + 1900)</code>.\n",directive
" Returns the offset, measured in minutes, for the local time zone \n relative to UTC that is appropriate for the time represented by \n this <code>Date</code> object. \n ",non-directive
"<p>\n For example, in Massachusetts, five time zones west of Greenwich:\n <blockquote><pre>\n new Date(96, 1, 14).getTimezoneOffset() returns 300</pre></blockquote>\n because on February 14, 1996, standard time (Eastern Standard Time) \n is in use, which is offset five hours from UTC; but:\n <blockquote><pre>\n new Date(96, 5, 1).getTimezoneOffset() returns 240</pre></blockquote>\n because on June 1, 1996, daylight saving time (Eastern Daylight Time) \n is in use, which is offset only four hours from UTC.<p>\n This method produces the same result as if it computed:\n <blockquote><pre>\n (this.getTime() - UTC(this.getYear(), \n                       this.getMonth(), \n                       this.getDate(),\n                       this.getHours(), \n                       this.getMinutes(), \n                       this.getSeconds())) / (60 * 1000)\n </pre></blockquote>\n\n ",directive
"@return  the time-zone offset, in minutes, for the current time zone.\n ",non-directive
"@see     java.util.Calendar#ZONE_OFFSET\n ",non-directive
"@see     java.util.Calendar#DST_OFFSET\n ",non-directive
"@see     java.util.TimeZone#getDefault\n ",non-directive
"@deprecated As of JDK version 1.1,\n replaced by <code>-(Calendar.get(Calendar.ZONE_OFFSET) +\n Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)</code>.\n",directive
" Gets the default number of fraction digits used with this currency.\n ",non-directive
"For example, the default number of fraction digits for the Euro is 2,\n while for the Japanese Yen it's 0.\n ",non-directive
"In the case of pseudo-currencies, such as IMF Special Drawing Rights,\n -1 is returned.\n\n ",directive
"@return the default number of fraction digits used with this currency\n",non-directive
" Returns an unmodifiable view of the specified collection.  ",non-directive
"This method\n allows modules to provide users with \"read-only\" access to internal\n collections.  ",directive
"Query operations on the returned collection \"read through\"\n to the specified collection, and attempts to modify the returned\n collection, whether direct or via its iterator, result in an\n <tt>UnsupportedOperationException</tt>.<p>\n\n The returned collection does <i>not</i> pass the hashCode and equals\n operations through to the backing collection, but relies on\n <tt>Object</tt>'s <tt>equals</tt> and <tt>hashCode</tt> methods.  ",directive
"This\n is necessary to preserve the contracts of these operations in the case\n that the backing collection is a set or a list.<p>\n\n The returned collection will be serializable if the specified collection\n is serializable.\n\n ",directive
"@param  c the collection for which an unmodifiable view is to be\n	       returned.\n ",non-directive
"@return an unmodifiable view of the specified collection.\n",non-directive
" Returns a dynamically typesafe view of the specified map.  ",non-directive
"Any attempt\n to insert a mapping whose key or value have the wrong type will result\n in an immediate <tt>ClassCastException</tt>.  ",non-directive
"Similarly, any attempt to\n modify the value currently associated with a key will result in an\n immediate <tt>ClassCastException</tt>, whether the modification is\n attempted directly through the map itself, or through a {@link\n Map.Entry} instance obtained from the map's {@link Map#entrySet()\n entry set} view.\n\n ",non-directive
"<p>Assuming a map contains no incorrectly typed keys or values\n prior to the time a dynamically typesafe view is generated, and\n that all subsequent access to the map takes place through the view\n (or one of its collection views), it is <i>guaranteed</i> that the\n map cannot contain an incorrectly typed key or value.\n\n ",directive
"<p>A discussion of the use of dynamically typesafe views may be\n found in the documentation for the {@link #checkedCollection checkedCollection}\n method.\n\n ",directive
"<p>The returned map will be serializable if the specified map is\n serializable.\n\n ",directive
"@param m the map for which a dynamically typesafe view is to be\n             returned\n ",non-directive
"@param keyType the type of key that <tt>m</tt> is permitted to hold\n ",non-directive
"@param valueType the type of value that <tt>m</tt> is permitted to hold\n ",non-directive
"@return a dynamically typesafe view of the specified map\n ",non-directive
"@since 1.5\n",non-directive
" Returns <tt>true</tt> if this collection contains the specified element.\n ",non-directive
"More formally, returns <tt>true</tt> if and only if this collection\n contains at least one element <tt>e</tt> such that\n <tt>(o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e))</tt>.\n\n ",non-directive
"@param o element whose presence in this collection is to be tested\n ",non-directive
"@return <tt>true</tt> if this collection contains the specified\n         element\n ",non-directive
" Returns the index of the first bit that is set to <code>true</code>\n that occurs on or after the specified starting index. ",non-directive
"If no such\n bit exists then -1 is returned.\n\n ",directive
"To iterate over the <code>true</code> bits in a <code>BitSet</code>,\n use the following loop:\n\n <pre>\n for (int i = bs.nextSetBit(0); i >= 0; i = bs.nextSetBit(i+1)) {\n     // operate on index i here\n }</pre>\n\n ",directive
"@param   fromIndex the index to start checking from (inclusive).\n ",non-directive
"@return  the index of the next set bit.\n ",non-directive
"@since   1.4\n",non-directive
" Returns <tt>true</tt> if the two specified arrays of longs are\n <i>equal</i> to one another.  ",non-directive
"Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  ",non-directive
"In other words, two arrays\n are equal if they contain the same elements in the same order.  ",non-directive
"Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n ",non-directive
"@param a one array to be tested for equality\n ",non-directive
"@param a2 the other array to be tested for equality\n ",non-directive
"@return <tt>true</tt> if the two arrays are equal\n",non-directive
" Returns <tt>true</tt> if the two specified arrays of shorts are\n <i>equal</i> to one another.  ",non-directive
"Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  ",non-directive
"In other words, two arrays\n are equal if they contain the same elements in the same order.  ",non-directive
"Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n ",non-directive
"@param a one array to be tested for equality\n ",non-directive
"@param a2 the other array to be tested for equality\n ",non-directive
"@return <tt>true</tt> if the two arrays are equal\n",non-directive
" Returns <tt>true</tt> if the two specified arrays of bytes are\n <i>equal</i> to one another.  ",non-directive
"Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  ",non-directive
"In other words, two arrays\n are equal if they contain the same elements in the same order.  ",non-directive
"Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n ",non-directive
"@param a one array to be tested for equality\n ",non-directive
"@param a2 the other array to be tested for equality\n ",non-directive
"@return <tt>true</tt> if the two arrays are equal\n",non-directive
" Assigns the specified long value to each element of the specified\n range of the specified array of longs.  ",non-directive
"The range to be filled\n extends from index <tt>fromIndex</tt>, inclusive, to index\n <tt>toIndex</tt>, exclusive.  ",directive
"(If <tt>fromIndex==toIndex</tt>, the\n range to be filled is empty.)\n\n ",non-directive
"@param a the array to be filled\n ",non-directive
"@param fromIndex the index of the first element (inclusive) to be\n        filled with the specified value\n ",directive
"@param toIndex the index of the last element (exclusive) to be\n        filled with the specified value\n ",directive
"@param val the value to be stored in all elements of the array\n ",non-directive
" Assigns the specified char value to each element of the specified\n range of the specified array of chars.  ",non-directive
"The range to be filled\n extends from index <tt>fromIndex</tt>, inclusive, to index\n <tt>toIndex</tt>, exclusive.  ",directive
"(If <tt>fromIndex==toIndex</tt>, the\n range to be filled is empty.)\n\n ",non-directive
"@param a the array to be filled\n ",non-directive
"@param fromIndex the index of the first element (inclusive) to be\n        filled with the specified value\n ",directive
"@param toIndex the index of the last element (exclusive) to be\n        filled with the specified value\n ",directive
"@param val the value to be stored in all elements of the array\n ",non-directive
" Assigns the specified boolean value to each element of the specified\n array of booleans.\n\n ",non-directive
"@param a the array to be filled\n ",non-directive
"@param val the value to be stored in all elements of the array\n",non-directive
" Copies the specified array, truncating or padding with nulls (if necessary)\n so the copy has the specified length.  ",non-directive
"For all indices that are\n valid in both the original array and the copy, the two arrays will\n contain identical values.  ",non-directive
"For any indices that are valid in the\n copy but not the original, the copy will contain <tt>null</tt>.\n ",non-directive
"Such indices will exist if and only if the specified length\n is greater than that of the original array.\n ",non-directive
"The resulting array is of exactly the same class as the original array.\n\n ",non-directive
"@param original the array to be copied\n ",non-directive
"@param newLength the length of the copy to be returned\n ",non-directive
"@return a copy of the original array, truncated or padded with nulls\n     to obtain the specified length\n ",non-directive
"@since 1.6\n",non-directive
" Returns a hash code based on the contents of the specified array.\n ",non-directive
"For any two <tt>byte</tt> arrays <tt>a</tt> and <tt>b</tt>\n such that <tt>Arrays.equals(a, b)</tt>, it is also the case that\n <tt>Arrays.hashCode(a) == Arrays.hashCode(b)</tt>.\n\n ",directive
"<p>The value returned by this method is the same value that would be\n obtained by invoking the {@link List#hashCode() <tt>hashCode</tt>}\n method on a {@link List} containing a sequence of {@link Byte}\n instances representing the elements of <tt>a</tt> in the same order.\n ",directive
"If <tt>a</tt> is <tt>null</tt>, this method returns 0.\n\n ",non-directive
"@param a the array whose hash value to compute\n ",non-directive
"@return a content-based hash code for <tt>a</tt>\n ",non-directive
"@since 1.5\n",non-directive
" Returns a string representation of the contents of the specified array.\n ",non-directive
"The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>\"[]\"</tt>).  ",non-directive
"Adjacent elements are\n separated by the characters <tt>\", \"</tt> (a comma followed by a\n space).  ",non-directive
"Elements are converted to strings as by\n <tt>String.valueOf(long)</tt>.  ",non-directive
"Returns <tt>\"null\"</tt> if <tt>a</tt>\n is <tt>null</tt>.\n\n ",non-directive
"@param a the array whose string representation to return\n ",non-directive
"@return a string representation of <tt>a</tt>\n ",non-directive
"@since 1.5\n",non-directive
" Returns a string representation of the contents of the specified array.\n ",non-directive
"The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>\"[]\"</tt>).  ",non-directive
"Adjacent elements\n are separated by the characters <tt>\", \"</tt> (a comma followed\n by a space).  ",non-directive
"Elements are converted to strings as by\n <tt>String.valueOf(byte)</tt>.  ",non-directive
"Returns <tt>\"null\"</tt> if\n <tt>a</tt> is <tt>null</tt>.\n\n ",non-directive
"@param a the array whose string representation to return\n ",non-directive
"@return a string representation of <tt>a</tt>\n ",non-directive
"@since 1.5\n",non-directive
" Removes the element at the specified position in this list (optional\n operation).  ",non-directive
"Shifts any subsequent elements to the left (subtracts one\n from their indices).  ",directive
"Returns the element that was removed from the\n list.\n\n ",non-directive
"<p>This implementation first gets a list iterator pointing to the\n indexed element (with <tt>listIterator(index)</tt>).  ",non-directive
"Then, it removes\n the element with <tt>ListIterator.remove</tt>.\n\n ",non-directive
"<p>Note that this implementation will throw an\n <tt>UnsupportedOperationException</tt> if the list iterator does not\n implement the <tt>remove</tt> operation.\n\n ",directive
" Inserts all of the elements in the specified collection into this\n list at the specified position (optional operation).  ",non-directive
"Shifts the\n element currently at that position (if any) and any subsequent\n elements to the right (increases their indices).  ",non-directive
"The new elements\n will appear in this list in the order that they are returned by the\n specified collection's iterator.  ",non-directive
"The behavior of this operation is\n undefined if the specified collection is modified while the\n operation is in progress.  ",directive
"(Note that this will occur if the specified\n collection is this list, and it's nonempty.)\n\n <p>This implementation gets an iterator over the specified collection and\n a list iterator over this list pointing to the indexed element (with\n <tt>listIterator(index)</tt>).  ",directive
"Then, it iterates over the specified\n collection, inserting the elements obtained from the iterator into this\n list, one at a time, using <tt>ListIterator.add</tt> followed by\n <tt>ListIterator.next</tt> (to skip over the added element).\n\n ",non-directive
"<p>Note that this implementation will throw an\n <tt>UnsupportedOperationException</tt> if the list iterator returned by\n the <tt>listIterator</tt> method does not implement the <tt>add</tt>\n operation.\n\n ",directive
" Return the header string for a set of XML formatted records.\n \n",non-directive
"@param   h  The target handler (can be null)\n ",non-directive
"@return  a valid XML string\n",non-directive
" Format and publish a <tt>LogRecord</tt>.\n ",non-directive
"<p>\n The <tt>StreamHandler</tt> first checks if there is an <tt>OutputStream</tt>\n and if the given <tt>LogRecord</tt> has at least the required log level.\n ",non-directive
"If not it silently returns.  ",directive
"If so, it calls any associated\n <tt>Filter</tt> to check if the record should be published.  ",non-directive
"If so,\n it calls its <tt>Formatter</tt> to format the record and then writes \n the result to the current output stream.\n ",non-directive
"<p>\n If this is the first <tt>LogRecord</tt> to be written to a given\n <tt>OutputStream</tt>, the <tt>Formatter</tt>'s \"head\" string is \n written to the stream before the <tt>LogRecord</tt> is written.\n\n ",directive
"@param  record  description of the log event. ",non-directive
"A null record is\n                 silently ignored and is not published\n",non-directive
" Create a <tt>StreamHandler</tt> with a given <tt>Formatter</tt>\n and output stream.\n ",non-directive
"<p>\n ",non-directive
"@param out         the target output stream\n ",non-directive
"@param formatter   Formatter to be used to format output\n",non-directive
" Format the given LogRecord.\n ",non-directive
"@param record the log record to be formatted.\n ",non-directive
"@return a formatted log record\n",non-directive
"\n Gets the name of the log level associated with the specified logger.\n ",non-directive
"If the specified logger does not exist, <tt>null</tt> \n is returned. \n ",non-directive
"This method first finds the logger of the given name and \n then returns the name of the log level by calling:\n <blockquote>\n   {@link Logger#getLevel Logger.getLevel()}.{@link Level#getName getName()};\n </blockquote>\n  \n <p>\n If the <tt>Level</tt> of the specified logger is <tt>null</tt>, \n which means that this logger's effective level is inherited \n from its parent, an empty string will be returned.\n \n",directive
"@param loggerName The name of the <tt>Logger</tt> to be retrieved.\n\n ",non-directive
"@return The name of the log level of the specified logger; or\n         an empty string if the log level of the specified logger\n         is <tt>null</tt>.  ",directive
"If the specified logger does not\n         exist, <tt>null</tt> is returned.\n\n ",non-directive
"@see Logger#getLevel\n",non-directive
" Retrieve the localization resource bundle for this\n logger for the current default locale.  ",non-directive
"Note that if\n the result is null, then the Logger will use a resource \n bundle inherited from its parent.\n\n ",directive
"@return localization bundle (may be null)\n",non-directive
" Set a filter to control output on this Logger.\n ",non-directive
"<P>\n After passing the initial \"level\" check, the Logger will\n call this Filter to check if a log record should really\n be published.\n\n ",non-directive
"@param   newFilter  a filter object (may be null)\n ",non-directive
" Log a message, specifying source class and method,\n with associated Throwable information.\n ",non-directive
"<p>\n If the logger is currently enabled for the given message \n level then the given arguments are stored in a LogRecord\n which is forwarded to all registered output handlers.\n ",non-directive
"<p>\n Note that the thrown argument is stored in the LogRecord thrown\n property, rather than the LogRecord parameters property.  ",directive
"Thus is it\n processed specially by output Formatters and is not treated\n as a formatting parameter to the LogRecord message property.\n ",directive
"<p>\n ",non-directive
"@param	level   One of the message level identifiers, e.g. ",non-directive
"SEVERE\n ",non-directive
"@param   sourceClass    name of class that issued the logging request\n ",non-directive
"@param   sourceMethod   name of method that issued the logging request\n ",non-directive
"@param   msg	The string message (or a key in the message catalog)\n ",non-directive
"@param   thrown  Throwable associated with log message.\n",non-directive
" Get the Handlers associated with this logger.\n ",non-directive
"<p>\n ",non-directive
"@return  an array of all registered Handlers\n",non-directive
" Reset the logging configuration.\n ",non-directive
"<p>\n For all named loggers, the reset operation removes and closes\n all Handlers and (except for the root logger) sets the level\n to null.  ",non-directive
"The root logger's level is set to Level.INFO.\n\n ",directive
" Return the character encoding for this <tt>Handler</tt>.\n\n ",non-directive
"@return  The encoding name.  ",non-directive
"May be null, which indicates the\n	    	default encoding should be used.\n",non-directive
" Set the log level specifying which message levels will be\n logged by this <tt>Handler</tt>.  ",non-directive
"Message levels lower than this\n value will be discarded. \n ",non-directive
"<p>\n The intention is to allow developers to turn on voluminous\n logging, but to limit the messages that are sent to certain\n <tt>Handlers</tt>.\n \n",directive
"@param newLevel   the new value for the log level\n ",non-directive
" Construct a default <tt>FileHandler</tt>.  ",non-directive
"This will be configured\n entirely from <tt>LogManager</tt> properties (or their default values).\n ",directive
"<p>\n ",non-directive
" Implements the <tt>put</tt> method as per the specification in\n {@link Preferences#put(String,String)}.\n\n ",non-directive
"<p>This implementation checks that the key and value are legal,\n obtains this preference node's lock, checks that the node\n has not been removed, invokes {@link #putSpi(String,String)}, and if\n there are any preference change listeners, enqueues a notification\n event for processing by the event dispatch thread.\n\n ",directive
"@param key key with which the specified value is to be associated.\n ",non-directive
"@param value value to be associated with the specified key.\n ",non-directive
" Implements the <tt>getInt</tt> method as per the specification in\n {@link Preferences#getInt(String,int)}.\n\n ",directive
"<p>This implementation invokes {@link #get(String,String) <tt>get(key,\n null)</tt>}.  ",directive
"If the return value is non-null, the implementation\n attempts to translate it to an <tt>int</tt> with\n {@link Integer#parseInt(String)}.  ",non-directive
"If the attempt succeeds, the return\n value is returned by this method.  ",non-directive
"Otherwise, <tt>def</tt> is returned.\n\n ",directive
"@param key key whose associated value is to be returned as an int.\n ",non-directive
"@param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as an int.\n ",directive
"@return the int value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         an int.\n ",directive
" Implements the <tt>putLong</tt> method as per the specification in\n {@link Preferences#putLong(String,long)}.\n\n ",directive
"<p>This implementation translates <tt>value</tt> to a string with\n {@link Long#toString(long)} and invokes {@link #put(String,String)}\n on the result.\n\n ",directive
"@param key key with which the string form of value is to be associated.\n ",non-directive
"@param value value whose string form is to be associated with key.\n ",non-directive
" Implements the <tt>putDouble</tt> method as per the specification in\n {@link Preferences#putDouble(String,double)}.\n\n ",directive
"<p>This implementation translates <tt>value</tt> to a string with\n {@link Double#toString(double)} and invokes {@link #put(String,String)}\n on the result.\n\n ",directive
"@param key key with which the string form of value is to be associated.\n ",non-directive
"@param value value whose string form is to be associated with key.\n ",non-directive
" Implements the <tt>name</tt> method as per the specification in\n {@link Preferences#name()}.\n\n ",non-directive
"<p>This implementation merely returns the name that was\n passed to this node's constructor.\n\n ",non-directive
"@return this preference node's name, relative to its parent.\n",non-directive
" Returns the names of the children of this preference node.  ",non-directive
"(The\n returned array will be of size zero if this node has no children.)\n This method need not return the names of any nodes already cached,\n but may do so without harm.\n\n ",non-directive
"<p>This method is invoked with the lock on this node held.\n\n ",directive
"<p>If this node throws a <tt>BackingStoreException</tt>, the exception\n will propagate out beyond the enclosing {@link #childrenNames()}\n invocation.\n\n ",directive
"@return an array containing the names of the children of this\n         preference node.\n ",non-directive
" Returns true if this executor is in the process of terminating\n after <tt>shutdown</tt> or <tt>shutdownNow</tt> but has not\n completely terminated.  ",non-directive
"This method may be useful for\n debugging. ",directive
"A return of <tt>true</tt> reported a sufficient\n period after shutdown may indicate that submitted tasks have\n ignored or suppressed interruption, causing this executor not\n to properly terminate.\n ",directive
"@return true if terminating but not yet terminated\n",non-directive
" Sets a new handler for unexecutable tasks.\n\n ",non-directive
"@param handler the new handler\n ",non-directive
"@see #getRejectedExecutionHandler\n",non-directive
" Returns the thread keep-alive time, which is the amount of time\n that threads in excess of the core pool size may remain\n idle before being terminated.\n\n ",non-directive
"@param unit the desired time unit of the result\n ",non-directive
"@return the time limit\n ",non-directive
"@see #setKeepAliveTime\n",non-directive
" Executes task r in the caller's thread, unless the executor\n has been shut down, in which case the task is discarded.\n ",directive
"@param r the runnable task requested to be executed\n ",non-directive
"@param e the executor attempting to execute this task\n",non-directive
" Always returns <tt>false</tt>.\n ",directive
"A <tt>SynchronousQueue</tt> has no internal capacity.\n\n ",directive
"@param o the element\n ",non-directive
"@return <tt>false</tt>\n",non-directive
" Releases a permit, returning it to the semaphore.\n\n ",non-directive
"<p>Releases a permit, increasing the number of available permits by\n one.  ",non-directive
"If any threads are trying to acquire a permit, then one is\n selected and given the permit that was just released.  ",directive
"That thread\n is (re)enabled for thread scheduling purposes.\n\n ",directive
"<p>There is no requirement that a thread that releases a permit must\n have acquired that permit by calling {@link #acquire}.\n ",directive
"Correct usage of a semaphore is established by programming convention\n in the application.\n",directive
" Shrinks the number of available permits by the indicated\n reduction. ",non-directive
"This method can be useful in subclasses that use\n semaphores to track resources that become unavailable. ",directive
"This\n method differs from {@code acquire} in that it does not block\n waiting for permits to become available.\n\n ",directive
"@param reduction the number of permits to remove\n ",non-directive
" Inserts the specified element into this priority queue.\n\n ",non-directive
"@param e the element to add\n ",non-directive
"@return <tt>true</tt> (as specified by {@link Collection#add})\n ",non-directive
" Inserts the specified element into this priority queue. ",non-directive
"As the queue is\n unbounded this method will never block.\n\n ",directive
"@param e the element to add\n ",non-directive
" Returns an iterator over the elements in this queue in proper sequence.\n ",non-directive
"The returned <tt>Iterator</tt> is a \"weakly consistent\" iterator that\n will never throw {@link ConcurrentModificationException},\n and guarantees to traverse elements as they existed upon\n construction of the iterator, and may (but is not guaranteed to)\n reflect any modifications subsequent to construction.\n\n ",directive
"@return an iterator over the elements in this queue in proper sequence\n",non-directive
" Returns an iterator over the elements in this deque in reverse\n sequential order.  ",non-directive
"The elements will be returned in order from\n last (tail) to first (head).\n ",non-directive
"The returned <tt>Iterator</tt> is a \"weakly consistent\" iterator that\n will never throw {@link ConcurrentModificationException},\n and guarantees to traverse elements as they existed upon\n construction of the iterator, and may (but is not guaranteed to)\n reflect any modifications subsequent to construction.\n",directive
" Returns a {@link Callable} object that, when\n called, runs the given task and returns the given result.  ",non-directive
"This\n can be useful when applying methods requiring a\n <tt>Callable</tt> to an otherwise resultless action.\n ",directive
"@param task the task to run\n ",non-directive
"@param result the result to return\n ",non-directive
"@return a callable object\n ",non-directive
" Blocks until all tasks have completed execution after a shutdown\n request, or the timeout occurs, or the current thread is\n interrupted, whichever happens first.\n\n ",directive
"@param timeout the maximum time to wait\n ",non-directive
"@param unit the time unit of the timeout argument\n ",non-directive
"@return <tt>true</tt> if this executor terminated and\n         <tt>false</tt> if the timeout elapsed before termination\n ",directive
" Inserts the specified element into this delay queue.\n\n ",non-directive
"@param e the element to add\n ",non-directive
"@return <tt>true</tt>\n ",non-directive
" Retrieves, but does not remove, the head of this queue, or\n returns <tt>null</tt> if this queue is empty.  ",non-directive
"Unlike\n <tt>poll</tt>, if no expired elements are available in the queue,\n this method returns the element that will expire next,\n if one exists.\n\n ",directive
"@return the head of this queue, or <tt>null</tt> if this\n         queue is empty.\n",non-directive
" Waits until all {@linkplain #getParties parties} have invoked\n <tt>await</tt> on this barrier, or the specified waiting time elapses.\n\n ",non-directive
"<p>If the current thread is not the last to arrive then it is\n disabled for thread scheduling purposes and lies dormant until\n one of the following things happens:\n \n ",directive
"-- The last thread arrives; or\n ",non-directive
"-- The specified timeout elapses; or\n ",non-directive
"-- Some other thread {@linkplain Thread#interrupt interrupts}\n the current thread; or\n ",directive
"-- Some other thread {@linkplain Thread#interrupt interrupts}\n one of the other waiting threads; or\n ",directive
"-- Some other thread times out while waiting for barrier; or\n ",directive
"-- Some other thread invokes {@link #reset} on this barrier.\n ",directive
"\n\n ",non-directive
"<p>If the current thread:\n \n ",directive
"-- has its interrupted status set on entry to this method; or\n ",non-directive
"-- is {@linkplain Thread#interrupt interrupted} while waiting\n \n ",directive
"then {@link InterruptedException} is thrown and the current thread's\n interrupted status is cleared.\n\n ",directive
"<p>If the specified waiting time elapses then {@link TimeoutException}\n is thrown. ",non-directive
"If the time is less than or equal to zero, the\n method will not wait at all.\n\n ",non-directive
"<p>If the barrier is {@link #reset} while any thread is waiting,\n or if the barrier {@linkplain #isBroken is broken} when\n <tt>await</tt> is invoked, or while any thread is waiting, then\n {@link BrokenBarrierException} is thrown.\n\n ",directive
"<p>If any thread is {@linkplain Thread#interrupt interrupted} while\n waiting, then all other waiting threads will throw {@link\n BrokenBarrierException} and the barrier is placed in the broken\n state.\n\n ",directive
"<p>If the current thread is the last thread to arrive, and a\n non-null barrier action was supplied in the constructor, then the\n current thread runs the action before allowing the other threads to\n continue.\n ",directive
"If an exception occurs during the barrier action then that exception\n will be propagated in the current thread and the barrier is placed in\n the broken state.\n\n ",directive
"@param timeout the time to wait for the barrier\n ",non-directive
"@param unit the time unit of the timeout parameter\n ",non-directive
"@return the arrival index of the current thread, where index\n         <tt>{@link #getParties()} - 1</tt> indicates the first\n         to arrive and zero indicates the last to arrive\n ",directive
" Causes the current thread to wait until the latch has counted down to\n zero, unless the thread is {@linkplain Thread#interrupt interrupted}.\n\n ",non-directive
"<p>If the current count is zero then this method returns immediately.\n\n ",directive
"<p>If the current count is greater than zero then the current\n thread becomes disabled for thread scheduling purposes and lies\n dormant until one of two things happen:\n \n ",non-directive
"-- The count reaches zero due to invocations of the\n {@link #countDown} method; or\n ",directive
"-- Some other thread {@linkplain Thread#interrupt interrupts}\n the current thread.\n ",directive
"\n\n ",non-directive
"<p>If the current thread:\n \n ",directive
"-- has its interrupted status set on entry to this method; or\n ",non-directive
"-- is {@linkplain Thread#interrupt interrupted} while waiting,\n \n ",directive
"then {@link InterruptedException} is thrown and the current thread's\n interrupted status is cleared.\n\n ",directive
" Returns a string identifying this latch, as well as its state.\n ",non-directive
"The state, in brackets, includes the String {@code \"Count =\"}\n followed by the current count.\n\n ",non-directive
"@return a string identifying this latch, as well as its state\n",non-directive
" Adds all of the elements in the specified collection to this set if\n they're not already present.  ",non-directive
"If the specified collection is also a\n set, the <tt>addAll</tt> operation effectively modifies this set so\n that its value is the <i>union</i> of the two sets.  ",directive
"The behavior of\n this operation is undefined if the specified collection is modified\n while the operation is in progress.\n\n ",directive
"@param  c collection containing elements to be added to this set\n ",non-directive
"@return <tt>true</tt> if this set changed as a result of the call\n ",non-directive
"@see #add(Object)\n",non-directive
" Retains only the elements in this list that are contained in the\n specified collection.  ",non-directive
"In other words, removes from this list all of\n its elements that are not contained in the specified collection.\n\n ",non-directive
"@param c collection containing elements to be retained in this list\n ",non-directive
"@return <tt>true</tt> if this list changed as a result of the call\n ",non-directive
"@see #remove(Object)\n",non-directive
" Returns an iterator over the elements in this list in proper sequence.\n\n ",non-directive
"<p>The returned iterator provides a snapshot of the state of the list\n when the iterator was constructed. ",directive
"No synchronization is needed while\n traversing the iterator. ",directive
"The iterator does <em>NOT</em> support the\n <tt>remove</tt> method.\n\n ",directive
"@return an iterator over the elements in this list in proper sequence\n",non-directive
" Replaces the entry for a key only if currently mapped to a given value.\n ",non-directive
"This is equivalent to\n <pre>\n   if (map.containsKey(key) &amp;&amp; map.get(key).equals(oldValue)) {\n       map.put(key, newValue);\n       return true;\n   } else return false;</pre>\n except that the action is performed atomically.\n\n ",directive
"@param key key with which the specified value is associated\n ",non-directive
"@param oldValue value expected to be associated with the specified key\n ",non-directive
"@param newValue value to be associated with the specified key\n ",non-directive
"@return <tt>true</tt> if the value was replaced\n ",non-directive
" Returns the number of key-value mappings in this map.  ",non-directive
"If the\n map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n ",non-directive
"@return the number of key-value mappings in this map\n",non-directive
" Returns an enumeration of the keys in this table.\n\n ",non-directive
"@return an enumeration of the keys in this table\n ",non-directive
"@see #keySet()\n",non-directive
" Retrieves and removes the head of this queue, waiting up to the\n specified wait time if necessary for an element to become available.\n\n ",non-directive
"@param timeout how long to wait before giving up, in units of\n        <tt>unit</tt>\n ",non-directive
"@param unit a <tt>TimeUnit</tt> determining how to interpret the\n        <tt>timeout</tt> parameter\n ",non-directive
"@return the head of this queue, or <tt>null</tt> if the\n         specified waiting time elapses before an element is available\n ",non-directive
" Removes the last occurrence of the specified element from this deque.\n ",non-directive
"If the deque does not contain the element, it is unchanged.\n ",non-directive
"More formally, removes the last element <tt>e</tt> such that\n <tt>o.equals(e)</tt> (if such an element exists).\n ",non-directive
"Returns <tt>true</tt> if this deque contained the specified element\n (or equivalently, if this deque changed as a result of the call).\n\n ",non-directive
"@param o element to be removed from this deque, if present\n ",non-directive
"@return <tt>true</tt> if an element was removed as a result of this call\n ",non-directive
" Returns <tt>true</tt> if this deque contains the specified element.\n ",non-directive
"More formally, returns <tt>true</tt> if and only if this deque contains\n at least one element <tt>e</tt> such that <tt>o.equals(e)</tt>.\n\n ",non-directive
"@param o object to be checked for containment in this deque\n ",non-directive
"@return <tt>true</tt> if this deque contains the specified element\n ",non-directive
" Removes a single instance of the specified element from this queue,\n if it is present.  ",non-directive
"More formally, removes an element <tt>e</tt> such\n that <tt>o.equals(e)</tt>, if this queue contains one or more such\n elements.\n ",non-directive
"Returns <tt>true</tt> if this queue contained the specified element\n (or equivalently, if this queue changed as a result of the call).\n\n ",non-directive
"@param o element to be removed from this queue, if present\n ",non-directive
"@return <tt>true</tt> if this queue changed as a result of the call\n",non-directive
" Atomically sets the element at position {@code i} to the given\n updated value if the current value {@code ==} the expected value.\n ",non-directive
"@param i the index\n ",non-directive
"@param expect the expected value\n ",non-directive
"@param update the new value\n ",non-directive
"@return true if successful. ",non-directive
"False return indicates that\n the actual value was not equal to the expected value.\n",directive
" Gets the current value at position {@code i}.\n\n ",non-directive
"@param i the index\n ",non-directive
"@return the current value\n",non-directive
" Atomically decrements by one the element at index {@code i}.\n\n ",non-directive
"@param i the index\n ",non-directive
"@return the updated value\n",non-directive
" Atomically adds the given value to the current value.\n\n ",non-directive
"@param delta the value to add\n ",non-directive
"@return the updated value\n",non-directive
" Returns an estimate of the number of threads waiting to acquire\n either the read or write lock.  ",non-directive
"The value is only an estimate\n because the number of threads may change dynamically while this\n method traverses internal data structures.  ",non-directive
"This method is\n designed for use in monitoring of the system state, not for\n synchronization control.\n\n ",directive
"@return the estimated number of threads waiting for this lock\n",non-directive
" Returns a string identifying this lock, as well as its lock state.\n ",non-directive
"The state, in brackets, includes the String {@code \"Read locks =\"}\n followed by the number of held read locks.\n\n ",non-directive
"@return a string identifying this lock, as well as its lock state\n",non-directive
" Acquires the lock.\n\n ",non-directive
"<p>Acquires the lock if it is not held by another thread and returns\n immediately, setting the lock hold count to one.\n\n ",directive
"<p>If the current thread already holds the lock then the hold\n count is incremented by one and the method returns immediately.\n\n ",directive
"<p>If the lock is held by another thread then the\n current thread becomes disabled for thread scheduling\n purposes and lies dormant until the lock has been acquired,\n at which time the lock hold count is set to one.\n",directive
" Returns a {@link Condition} instance for use with this\n {@link Lock} instance.\n\n ",non-directive
"<p>The returned {@link Condition} instance supports the same\n usages as do the {@link Object} monitor methods ({@link\n Object#wait() wait}, {@link Object#notify notify}, and {@link\n Object#notifyAll notifyAll}) when used with the built-in\n monitor lock.\n\n ",directive
"\n\n ",non-directive
"-- If this lock is not held when any of the {@link Condition}\n {@linkplain Condition#await() waiting} or {@linkplain\n Condition#signal signalling} methods are called, then an {@link\n IllegalMonitorStateException} is thrown.\n\n ",non-directive
"-- When the condition {@linkplain Condition#await() waiting}\n methods are called the lock is released and, before they\n return, the lock is reacquired and the lock hold count restored\n to what it was when the method was called.\n\n ",directive
"-- If a thread is {@linkplain Thread#interrupt interrupted}\n while waiting then the wait will terminate, an {@link\n InterruptedException} will be thrown, and the thread's\n interrupted status will be cleared.\n\n ",directive
"--  Waiting threads are signalled in FIFO order.\n\n ",directive
"-- The ordering of lock reacquisition for threads returning\n from waiting methods is the same as for threads initially\n acquiring the lock, which is in the default case not specified,\n but for <em>fair</em> locks favors those threads that have been\n waiting the longest.\n\n ",directive
"\n\n ",non-directive
"@return the Condition object\n",non-directive
" Queries if this lock is held by any thread. ",non-directive
"This method is\n designed for use in monitoring of the system state,\n not for synchronization control.\n\n ",directive
"@return {@code true} if any thread holds this lock and\n         {@code false} otherwise\n",non-directive
" Makes available the permit for the given thread, if it\n was not already available.  ",non-directive
"If the thread was blocked on\n {@code park} then it will unblock.  ",directive
"Otherwise, its next call\n to {@code park} is guaranteed not to block. ",directive
"This operation\n is not guaranteed to have any effect at all if the given\n thread has not been started.\n\n ",directive
"@param thread the thread to unpark, or {@code null}, in which case\n        this operation has no effect\n",non-directive
" Returns true if the given thread is currently queued.\n\n ",non-directive
"<p>This implementation traverses the queue to determine\n presence of the given thread.\n\n ",non-directive
"@param thread the thread\n ",non-directive
"@return {@code true} if the given thread is on the queue\n ",non-directive
" Queries whether the given ConditionObject\n uses this synchronizer as its lock.\n\n ",non-directive
"@param condition the condition\n ",non-directive
"@return <tt>true</tt> if owned\n ",non-directive
" Implements timed condition wait.\n ",non-directive
"\n ",non-directive
"--  If current thread is interrupted, throw InterruptedException\n ",non-directive
"--  Save lock state returned by {@link #getState}\n ",directive
"--  Invoke {@link #release} with\n      saved state as argument, throwing\n      IllegalMonitorStateException  if it fails.\n ",directive
"--  Block until signalled, interrupted, or timed out\n ",non-directive
"--  Reacquire by invoking specialized version of\n      {@link #acquire} with saved state as argument.\n ",directive
"--  If interrupted while blocked in step 4, throw InterruptedException\n \n",non-directive
" Returns an estimate of the number of threads waiting on\n this condition.\n ",non-directive
"Implements {@link AbstractQueuedSynchronizer#getWaitQueueLength}.\n\n ",non-directive
"@return the estimated number of waiting threads\n ",non-directive
" Queries whether any threads are waiting to acquire. ",non-directive
"Note that\n because cancellations due to interrupts and timeouts may occur\n at any time, a {@code true} return does not guarantee that any\n other thread will ever acquire.\n\n ",directive
"<p>In this implementation, this operation returns in\n constant time.\n\n ",directive
"@return {@code true} if there may be other threads waiting to acquire\n",non-directive
" Returns a collection containing threads that may be waiting to\n acquire.  ",non-directive
"Because the actual set of threads may change\n dynamically while constructing this result, the returned\n collection is only a best-effort estimate.  ",directive
"The elements of the\n returned collection are in no particular order.  ",directive
"This method is\n designed to facilitate construction of subclasses that provide\n more extensive monitoring facilities.\n\n ",directive
"@return the collection of threads\n",non-directive
" Implements timed condition wait.\n ",non-directive
"\n ",non-directive
"--  If current thread is interrupted, throw InterruptedException\n ",directive
"--  Save lock state returned by {@link #getState}\n ",directive
"--  Invoke {@link #release} with\n      saved state as argument, throwing\n      IllegalMonitorStateException  if it fails.\n ",directive
"--  Block until signalled, interrupted, or timed out\n ",non-directive
"--  Reacquire by invoking specialized version of\n      {@link #acquire} with saved state as argument.\n ",directive
"--  If interrupted while blocked in step 4, throw InterruptedException\n \n",non-directive
" Returns a localized name for the given variant code and the given locale that \n is appropriate for display to the user.\n ",non-directive
"If the name returned cannot be localized according to <code>locale</code>,\n this method returns null.\n ",non-directive
"@param variant the variant string\n ",non-directive
"@param locale the desired locale\n ",non-directive
"@return the name of the given variant string for the specified locale, or null if it's not\n     available.\n ",non-directive
"@see java.util.Locale#getDisplayVariant(java.util.Locale)\n",non-directive
" Resets this matcher with a new input sequence.\n\n ",non-directive
"<p> Resetting a matcher discards all of its explicit state information\n and sets its append position to zero.  ",directive
"The matcher's region is set to\n the default region, which is its entire character sequence.  ",directive
"The \n anchoring and transparency of this matcher's region boundaries are \n unaffected.\n\n ",directive
"@param  input\n         The new input character sequence\n\n ",non-directive
"@return  This matcher\n",non-directive
" Returns a Map of the entries contained in this Manifest. ",non-directive
"Each entry\n is represented by a String name (key) and associated Attributes (value).\n ",non-directive
"The Map permits the {@code null} key, but no entry with a null key is\n created by {@link #read}, nor is such an entry written by using {@link\n #write}.\n\n ",non-directive
"@return a Map of the entries contained in this Manifest\n",non-directive
" Returns the uncompressed size of the entry data, or -1 if not known.\n ",directive
"@return the uncompressed size of the entry data, or -1 if not known\n ",directive
"@see #setSize(long)\n",non-directive
" Returns the size of the compressed entry data, or -1 if not known.\n ",directive
"In the case of a stored entry, the compressed size will be the same\n as the uncompressed size of the entry.\n ",directive
"@return the size of the compressed entry data, or -1 if not known\n ",directive
"@see #setCompressedSize(long)\n",non-directive
" Creates a new input stream with the specified decompressor and\n buffer size.\n ",non-directive
"@param in the input stream\n ",non-directive
"@param inf the decompressor (\"inflater\")\n ",non-directive
"@param size the input buffer size\n ",non-directive
" Creates a new input stream with the specified decompressor and a\n default buffer size.\n ",non-directive
"@param in the input stream\n ",non-directive
"@param inf the decompressor (\"inflater\")\n",non-directive
" Returns true if no data remains in the input buffer. ",non-directive
"This can\n be used to determine if #setInput should be called in order\n to provide more input.\n ",directive
"@return true if no data remains in the input buffer\n",non-directive
" Writes a byte to the compressed output stream. ",non-directive
"This method will\n block until the byte can be written.\n ",directive
"@param b the byte to be written\n ",non-directive
" Reads compressed data into a byte array.\n ",non-directive
"This method will block until some input can be read and compressed.\n\n ",directive
"@param b buffer into which the data is read\n ",non-directive
"@param off starting offset of the data within {@code b}\n ",non-directive
"@param len maximum number of compressed bytes to read into {@code b}\n ",non-directive
"@return the actual number of bytes read, or -1 if the end of the\n uncompressed input stream is reached\n ",directive
" Returns 0 after EOF has been reached, otherwise always return 1.\n ",non-directive
"<p>\n Programs should not count on this method to return the actual number\n of bytes that could be read without blocking\n ",directive
"@return zero after the end of the underlying input stream has been\n reached, otherwise always returns 1\n ",non-directive
" Creates an input stream using the specified Checksum.\n ",non-directive
"@param in the input stream\n ",non-directive
"@param cksum the Checksum\n",non-directive
" Returns a BigInteger whose value is {@code (this % val)}.\n\n ",non-directive
"@param  val value by which this BigInteger is to be divided, and the\n	       remainder computed.\n ",non-directive
"@return {@code this % val}\n ",non-directive
" Returns a BigInteger whose value is {@code (this ^ val)}.  ",non-directive
"(This method\n returns a negative BigInteger if and only if exactly one of this and\n val are negative.)\n\n ",directive
"@param val value to be XOR'ed with this BigInteger.\n ",non-directive
"@return {@code this ^ val}\n",non-directive
" Returns a BigInteger whose value is {@code (this & ~val)}.  ",non-directive
"This\n method, which is equivalent to {@code and(val.not())}, is provided as\n a convenience for masking operations.  ",non-directive
"(This method returns a negative\n BigInteger if and only if {@code this} is negative and {@code val} is\n positive.)\n\n ",directive
"@param val value to be complemented and AND'ed with this BigInteger.\n ",non-directive
"@return {@code this & ~val}\n",non-directive
" Returns a BigInteger whose value is equivalent to this BigInteger\n with the designated bit set.  ",non-directive
"(Computes {@code (this | (1<<n))}.)\n\n ",non-directive
"@param  n index of bit to set.\n ",non-directive
"@return {@code this | (1<<n)}\n ",non-directive
" Returns the minimum of this BigInteger and {@code val}.\n\n ",non-directive
"@param  val value with which the minimum is to be computed.\n ",non-directive
"@return the BigInteger whose value is the lesser of this BigInteger and \n	       {@code val}.  ",non-directive
"If they are equal, either may be returned.\n",directive
" Converts this BigInteger to a {@code long}.  ",non-directive
"This\n conversion is analogous to a <a\n href=\"http://java.sun.com/docs/books/jls/second_edition/html/conversions.doc.html#25363\"><i>narrowing\n primitive conversion</i></a> from {@code long} to\n {@code int} as defined in the <a\n href=\"http://java.sun.com/docs/books/jls/html/\">Java Language\n Specification</a>: if this BigInteger is too big to fit in a\n {@code long}, only the low-order 64 bits are returned.\n ",directive
"Note that this conversion can lose information about the\n overall magnitude of the BigInteger value as well as return a\n result with the opposite sign.\n\n ",directive
"@return this BigInteger converted to a {@code long}.\n",non-directive
" Translates a {@code long} value into a {@code BigDecimal}\n with a scale of zero.  ",non-directive
"This {@literal \"static factory method\"}\n is provided in preference to a ({@code long}) constructor\n because it allows for reuse of frequently used\n {@code BigDecimal} values.\n\n ",directive
"@param val value of the {@code BigDecimal}.\n ",non-directive
"@return a {@code BigDecimal} whose value is {@code val}.\n",non-directive
" Returns a {@code BigDecimal} whose value is {@code (this +\n augend)}, and whose scale is {@code max(this.scale(),\n augend.scale())}.\n\n ",non-directive
"@param  augend value to be added to this {@code BigDecimal}.\n ",non-directive
"@return {@code this + augend}\n",non-directive
" Returns a {@code BigDecimal} whose value is <tt>(this &times;\n multiplicand)</tt>, with rounding according to the context settings.\n\n ",non-directive
"@param  multiplicand value to be multiplied by this {@code BigDecimal}.\n ",non-directive
"@param  mc the context to use.\n ",non-directive
"@return {@code this * multiplicand}, rounded as necessary.\n ",non-directive
"@since  1.5\n",non-directive
" Returns a {@code BigDecimal} whose value is {@code (this /\n divisor)}, with rounding according to the context settings.\n\n ",non-directive
"@param  divisor value by which this {@code BigDecimal} is to be divided.\n ",non-directive
"@param  mc the context to use.\n ",non-directive
"@return {@code this / divisor}, rounded as necessary.\n ",non-directive
"@since  1.5\n",non-directive
" Returns a {@code BigDecimal} whose value is {@code (+this)},\n with rounding according to the context settings.\n \n",non-directive
" <p>The effect of this method is identical to that of the {@link\n #round(MathContext)} method.\n\n ",directive
"@param mc the context to use.\n ",non-directive
"@return {@code this}, rounded as necessary.  ",non-directive
"A zero result will\n         have a scale of 0.\n ",directive
"@see    #round(MathContext)\n ",non-directive
"@since  1.5\n",non-directive
" Translates a character array representation of a\n {@code BigDecimal} into a {@code BigDecimal}, accepting the\n same sequence of characters as the {@link #BigDecimal(String)}\n constructor, while allowing a sub-array to be specified.\n \n",non-directive
" <p>Note that if the sequence of characters is already available\n within a character array, using this constructor is faster than\n converting the {@code char} array to string and using the\n {@code BigDecimal(String)} constructor .\n\n ",directive
"@param  in {@code char} array that is the source of characters.\n ",non-directive
"@param  offset first character in the array to inspect.\n ",non-directive
"@param  len number of characters to consider.\n ",non-directive
"@since  1.5\n",non-directive
" Translates a {@code long} into a {@code BigDecimal}, with\n rounding according to the context settings.  ",non-directive
"The scale of the\n {@code BigDecimal}, before any rounding, is zero.\n \n",non-directive
"@param  val {@code long} value to be converted to {@code BigDecimal}.\n ",non-directive
"@param  mc the context to use.\n ",non-directive
"@since  1.5\n",non-directive
" Returns the canonical string representation of the actions,\n which currently is the empty string \"\", since there are no actions for \n an UnresolvedPermission. ",non-directive
"That is, the actions for the\n permission that will be created when this UnresolvedPermission\n is resolved may be non-null, but an UnresolvedPermission\n itself is never considered to have any actions.\n\n ",directive
"@return the empty string \"\".\n",non-directive
" Initializes this signature object with the specified\n private key and source of randomness for signing operations.\n\n ",non-directive
"<p>This concrete method has been added to this previously-defined\n abstract class. ",non-directive
"(For backwards compatibility, it cannot be abstract.)\n\n ",non-directive
"@param privateKey the private key of the identity whose signature\n will be generated.\n ",non-directive
"@param random the source of randomness\n\n ",non-directive
"\n Returns the signature bytes of all the data\n updated so far.    \n ",non-directive
"The format of the signature depends on the underlying \n signature scheme.\n\n ",directive
"@return the signature bytes of the signing operation's result.\n\n ",non-directive
" Initializes this object for verification. ",non-directive
"If this method is called\n again with a different argument, it negates the effect\n of this call.\n\n ",directive
"@param publicKey the public key of the identity whose signature is\n going to be verified.\n\n ",non-directive
" Initialize this object for signing. ",non-directive
"If this method is called\n again with a different argument, it negates the effect\n of this call.\n\n ",directive
"@param privateKey the private key of the identity whose signature\n is going to be generated.\n \n",non-directive
"@param random the source of randomness for this signature.\n \n",non-directive
" Returns a SecureRandom object that implements the specified\n Random Number Generator (RNG) algorithm. \n\n ",non-directive
"<p> A new SecureRandom object encapsulating the\n SecureRandomSpi implementation from the specified Provider\n object is returned.  ",non-directive
"Note that the specified Provider object\n does not have to be registered in the provider list.\n\n ",directive
"<p> The returned SecureRandom object has not been seeded.  ",directive
"To seed the\n returned object, call the <code>setSeed</code> method.\n ",directive
"If <code>setSeed</code> is not called, the first call to\n <code>nextBytes</code> will force the SecureRandom object to seed itself.\n ",directive
"This self-seeding will not occur if <code>setSeed</code> was\n previously called.\n\n ",directive
"@param algorithm the name of the RNG algorithm.\n ",non-directive
"See Appendix A in the <a href=\n \"../../../technotes/guides/security/crypto/CryptoSpec.html#AppA\">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard RNG algorithm names.\n\n ",directive
"@param provider the provider.\n\n ",non-directive
"@return the new SecureRandom object.\n\n ",non-directive
"@see Provider\n\n ",non-directive
"@since 1.4\n",non-directive
" Constructs a secure random number generator (RNG) implementing the\n default random number algorithm.\n ",non-directive
"The SecureRandom instance is seeded with the specified seed bytes.\n\n ",non-directive
"<p> This constructor traverses the list of registered security Providers,\n starting with the most preferred Provider.\n ",non-directive
"A new SecureRandom object encapsulating the\n SecureRandomSpi implementation from the first\n Provider that supports a SecureRandom (RNG) algorithm is returned.\n ",non-directive
"If none of the Providers support a RNG algorithm,\n then an implementation-specific default is returned.\n\n ",directive
"<p> Note that the list of registered providers may be retrieved via\n the {@link Security#getProviders() Security.getProviders()} method.\n\n ",directive
"<p> See Appendix A in the <a href=\n \"../../../technotes/guides/security/crypto/CryptoSpec.html#AppA\">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard RNG algorithm names.\n\n ",directive
"@param seed the seed.\n",non-directive
" Constructs a ProviderException with the specified detail\n message. ",non-directive
"A detail message is a String that describes this\n particular exception.  \n\n ",non-directive
"@param s the detail message.  \n",non-directive
" Checks two Permission objects for equality.\n ",non-directive
"<P>\n Do not use the <code>equals</code> method for making access control\n decisions; use the <code>implies</code> method.\n  \n",directive
"@param obj the object we are testing for equality with this object.\n\n ",non-directive
"@return true if both Permission objects are equivalent.\n",non-directive
" Completes the hash computation by performing final operations\n such as padding. ",non-directive
"The digest is reset after this call is made.\n\n ",directive
"@return the array of bytes for the resulting hash value.  \n",non-directive
" Creates a message digest with the specified algorithm name.\n \n",non-directive
"@param algorithm the standard name of the digest algorithm. \n ",non-directive
"See Appendix A in the <a href=\n \"../../../technotes/guides/security/crypto/CryptoSpec.html#AppA\">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard algorithm names.\n",directive
" Checks if the given alias exists in this keystore.\n\n ",non-directive
"@param alias the alias name\n\n ",non-directive
"@return true if the alias exists, false otherwise\n",non-directive
" Stores this keystore to the given output stream, and protects its\n integrity with the given password.\n\n ",non-directive
"@param stream the output stream to which this keystore is written.\n ",non-directive
"@param password the password to generate the keystore integrity check\n\n ",non-directive
" Creates a <code>KeyManagementException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n ",directive
"@param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  ",non-directive
"(A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n ",non-directive
"@since 1.5\n",non-directive
" Returns this identity's public key.\n \n",non-directive
"@return the public key for this identity.\n \n",non-directive
"@see #setPublicKey\n",non-directive
"\n Constructs a DigestException with the specified detail\n message.  ",non-directive
"(A detail message is a String that describes this\n particular exception.)\n\n ",non-directive
"@param msg the detail message.  \n",non-directive
" Constructs a provider with the specified name, version number,\n and information.\n\n ",non-directive
"@param name the provider name.\n ",non-directive
"@param version the provider version number.\n ",non-directive
"@param info a description of the provider and its services.\n",non-directive
" Returns a (transparent) specification of this parameter object.\n ",non-directive
"<code>paramSpec</code> identifies the specification class in which \n the parameters should be returned. ",non-directive
"It could, for example, be\n <code>DSAParameterSpec.class</code>, to indicate that the\n parameters should be returned in an instance of the \n <code>DSAParameterSpec</code> class.\n\n ",non-directive
"@param paramSpec the specification class in which \n the parameters should be returned.\n\n ",non-directive
"@return the parameter specification.\n\n ",non-directive
"\n Returns an AlgorithmParameterGenerator object for generating\n a set of parameters to be used with the specified algorithm.\n\n ",non-directive
"<p> A new AlgorithmParameterGenerator object encapsulating the\n AlgorithmParameterGeneratorSpi implementation from the specified Provider\n object is returned.  ",non-directive
"Note that the specified Provider object\n does not have to be registered in the provider list.\n\n ",directive
"@param algorithm the string name of the algorithm this\n parameter generator is associated with.\n ",non-directive
"See Appendix A in the <a href=\n \"../../../technotes/guides/security/crypto/CryptoSpec.html#AppA\">\n Java Cryptography Architecture API Specification &amp; Reference </a>\n for information about standard algorithm names.\n\n ",directive
"@param provider the Provider object.\n\n ",non-directive
"@return the new AlgorithmParameterGenerator object.\n\n ",non-directive
"@see Provider\n\n ",non-directive
"@since 1.4\n",non-directive
" Initializes the key pair generator using the DSA family parameters\n (p,q and g) and an optional SecureRandom bit source. ",non-directive
"If a\n SecureRandom bit source is needed but not supplied, i.e. ",directive
"null, a \n default SecureRandom instance will be used.\n\n ",directive
"@param params the parameters to use to generate the keys.\n\n ",non-directive
"@param random the random bit source to use to generate key bits;\n can be null.\n\n ",non-directive
" Returns a copy of the otherPrimeInfo or null if there are \n only two prime factors (p and q).\n\n ",non-directive
"@return the otherPrimeInfo. ",non-directive
"Returns a new array each\n time this method is called.\n",directive
" Creates a new EncodedKeySpec with the given encoded key.\n\n ",non-directive
"@param encodedKey the encoded key. ",non-directive
"The contents of the \n array are copied to protect against subsequent modification.\n ",directive
" Compares this elliptic curve for equality with the\n specified object. \n ",non-directive
"@param obj the object to be compared.\n ",non-directive
"@return true if <code>obj</code> is an instance of\n EllipticCurve and the field, A, B, and seeding bytes \n match, false otherwise.\n",directive
" Creates a new ECPrivateKeySpec with the specified \n parameter values.\n ",non-directive
"@param s the private value.\n ",non-directive
"@param params the associated elliptic curve domain \n parameters.\n ",non-directive
" Creates an ECPoint from the specified affine x-coordinate\n <code>x</code> and affine y-coordinate <code>y</code>.\n ",non-directive
"@param x the affine x-coordinate.\n ",non-directive
"@param y the affine y-coordinate.\n ",non-directive
" Creates a parameter specification for EC parameter\n generation using a standard (or predefined) name\n <code>stdName</code> in order to generate the corresponding\n (precomputed) elliptic curve domain parameters. ",non-directive
"For the\n list of supported names, please consult the documentation \n of provider whose implementation will be used.\n ",directive
"@param stdName the standard name of the to-be-generated EC\n domain parameters.\n ",non-directive
" Creates a new DSAPrivateKeySpec with the specified parameter values.\n \n",non-directive
"@param x the private key.\n \n",non-directive
"@param p the prime.\n \n",non-directive
"@param q the sub-prime.\n \n",non-directive
"@param g the base.\n",non-directive
" Gets the <code>issuerUniqueID</code> value from the certificate.\n ",non-directive
"The issuer unique identifier is present in the certificate\n to handle the possibility of reuse of issuer names over time.\n ",directive
"RFC 2459 recommends that names not be reused and that\n conforming certificates not make use of unique identifiers.\n ",directive
"Applications conforming to that profile should be capable of\n parsing unique identifiers and making comparisons.\n \n",directive
" <p>The ASN.1 definition for this is:\n <pre>\n issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL<p>\n UniqueIdentifier  ::=  BIT STRING\n </pre>\n\n ",non-directive
"@return the issuer unique identifier or null if it is not\n present in the certificate.\n",non-directive
" Sets the subjectPublicKeyAlgID criterion. ",non-directive
"The\n <code>X509Certificate</code> must contain a subject public key\n with the specified algorithm. ",directive
"If <code>null</code>, no\n subjectPublicKeyAlgID check will be done.\n \n",non-directive
"@param oid The object identifier (OID) of the algorithm to check\n            for (or <code>null</code>). ",non-directive
"An OID is represented by a\n            set of nonnegative integers separated by periods.\n ",directive
"@see #getSubjectPublicKeyAlgID\n",non-directive
" Enables/disables matching all of the subjectAlternativeNames \n specified in the {@link #setSubjectAlternativeNames\n setSubjectAlternativeNames} or {@link #addSubjectAlternativeName\n addSubjectAlternativeName} methods. ",non-directive
"If enabled, \n the <code>X509Certificate</code> must contain all of the \n specified subject alternative names. ",directive
"If disabled, the \n <code>X509Certificate</code> must contain at least one of the \n specified subject alternative names.\n\n ",directive
"<p>The matchAllNames flag is <code>true</code> by default.\n\n ",non-directive
"@param matchAllNames if <code>true</code>, the flag is enabled;\n if <code>false</code>, the flag is disabled.\n ",non-directive
"@see #getMatchAllSubjectAltNames\n",non-directive
" Sets the basic constraints constraint. ",non-directive
"If the value is greater than or\n equal to zero, <code>X509Certificates</code> must include a \n basicConstraints extension with\n a pathLen of at least this value. ",directive
"If the value is -2, only end-entity\n certificates are accepted. ",directive
"If the value is -1, no check is done.\n ",directive
"<p>\n This constraint is useful when building a certification path forward \n (from the target toward the trust anchor. ",directive
"If a partial path has been \n built, any candidate certificate must have a maxPathLen value greater \n than or equal to the number of certificates in the partial path.\n\n ",directive
"@param minMaxPathLen the value for the basic constraints constraint\n ",non-directive
"@see #getBasicConstraints\n",non-directive
" Returns the subjectPublicKey criterion. ",non-directive
"The\n <code>X509Certificate</code> must contain the specified subject\n public key. ",directive
"If <code>null</code>, no subjectPublicKey check will be done.\n \n",non-directive
"@return the subject public key to check for (or <code>null</code>)\n ",non-directive
"@see #setSubjectPublicKey\n",non-directive
" Indicates if the <code>X509Certificate</code> must contain all\n or at least one of the subjectAlternativeNames \n specified in the {@link #setSubjectAlternativeNames\n setSubjectAlternativeNames} or {@link #addSubjectAlternativeName\n addSubjectAlternativeName} methods. ",non-directive
"If <code>true</code>, \n the <code>X509Certificate</code> must contain all of the \n specified subject alternative names. ",non-directive
"If <code>false</code>, the \n <code>X509Certificate</code> must contain at least one of the \n specified subject alternative names.\n\n ",non-directive
"@return <code>true</code> if the flag is enabled;\n <code>false</code> if the flag is disabled. ",non-directive
"The flag is\n <code>true</code> by default.\n ",non-directive
"@see #setMatchAllSubjectAltNames\n",non-directive
" Adds a name to the issuerNames criterion. ",non-directive
"The issuer distinguished\n name in the <code>X509CRL</code> must match at least one of the specified\n distinguished names.\n ",directive
"<p>\n This method allows the caller to add a name to the set of issuer names\n which <code>X509CRLs</code> may contain. ",non-directive
"The specified name is added to\n any previous value for the issuerNames criterion.\n ",non-directive
"If the specified name is a duplicate, it may be ignored.\n\n ",directive
"@param issuer the issuer as X500Principal\n ",non-directive
"@since 1.5\n",non-directive
" Sets the maxCRLNumber criterion. ",non-directive
"The <code>X509CRL</code> must have a\n CRL number extension whose value is less than or equal to the\n specified value. ",directive
"If <code>null</code>, no maxCRLNumber check will be \n done.\n\n ",non-directive
"@param maxCRL the maximum CRL number accepted (or <code>null</code>)\n",non-directive
" Returns the ASN.1 DER encoded form of the <code>qualifier</code> \n field of this <code>PolicyQualifierInfo</code>.\n\n ",non-directive
"@return the ASN.1 DER encoded bytes of the <code>qualifier</code>\n field. ",non-directive
"Note that a copy is returned, so the data is cloned each \n time this method is called.\n",directive
" Returns the valid policy represented by this node.\n\n ",non-directive
"@return the <code>String</code> OID of the valid policy\n represented by this node, or the special value \"any-policy\". ",non-directive
"For \n the root node, this method always returns the special value \"any-policy\".\n",directive
" Gets the PolicyQualifiersRejected flag. ",non-directive
"If this flag is true,\n certificates that include policy qualifiers in a certificate policies\n extension that is marked critical are rejected.\n ",directive
"If the flag is false, certificates are not rejected on this basis.\n\n ",directive
"<p> When a <code>PKIXParameters</code> object is created, this flag is \n set to true. ",directive
"This setting reflects the most common (and simplest) \n strategy for processing policy qualifiers. ",directive
"Applications that want to use\n a more sophisticated policy must set this flag to false.\n\n ",directive
"@return the current value of the PolicyQualifiersRejected flag\n ",non-directive
"@see #setPolicyQualifiersRejected\n",non-directive
" Returns the time for which the validity of the certification path\n should be determined. ",non-directive
"If <code>null</code>, the current time is used.\n ",non-directive
"<p>\n Note that the <code>Date</code> returned is copied to protect against \n subsequent modifications. \n\n ",directive
"@return the <code>Date</code>, or <code>null</code> if not set\n ",non-directive
"@see #setDate\n",non-directive
" Adds a <code>PKIXCertPathChecker</code> to the list of certification \n path checkers. ",non-directive
"See the {@link #setCertPathCheckers setCertPathCheckers}\n method for more details.\n ",directive
"<p>\n Note that the <code>PKIXCertPathChecker</code> is cloned to protect\n against subsequent modifications.\n\n ",directive
"@param checker a <code>PKIXCertPathChecker</code> to add to the list of \n checks. ",non-directive
"If <code>null</code>, the checker is ignored (not added to list).\n",non-directive
" Creates an instance of <code>PKIXParameters</code> with the specified\n <code>Set</code> of most-trusted CAs. ",non-directive
"Each element of the \n set is a {@link TrustAnchor TrustAnchor}.\n ",non-directive
"<p>\n Note that the <code>Set</code> is copied to protect against\n subsequent modifications.\n\n ",directive
"@param trustAnchors a <code>Set</code> of <code>TrustAnchor</code>s\n ",non-directive
" Returns a (possibly empty) collection view of the CRLs read\n from the given input stream <code>inStream</code>.\n\n ",non-directive
"<p>In order to take advantage of the specialized CRL format\n supported by this certificate factory, each element in\n the returned collection view can be typecast to the corresponding\n CRL class. ",directive
"For example, if this certificate\n factory implements X.509 CRLs, the elements in the returned\n collection can be typecast to the <code>X509CRL</code> class.\n\n ",non-directive
"<p>In the case of a certificate factory for X.509 CRLs,\n <code>inStream</code> may contain a sequence of DER-encoded CRLs.\n ",directive
"In addition, <code>inStream</code> may contain a PKCS#7 CRL\n set. ",directive
"This is a PKCS#7 <i>SignedData</i> object, with the only\n significant field being <i>crls</i>. ",directive
"In particular, the\n signature and the contents are ignored. ",directive
"This format allows multiple\n CRLs to be downloaded at once. ",directive
"If no CRLs are present,\n an empty collection is returned.\n\n ",directive
"<p>Note that if the given input stream does not support\n {@link java.io.InputStream#mark(int) mark} and\n {@link java.io.InputStream#reset() reset}, this method will\n consume the entire input stream.\n\n ",directive
"@param inStream the input stream with the CRLs.\n\n ",non-directive
"@return a (possibly empty) collection view of\n java.security.cert.CRL objects initialized with the data from the input\n stream.\n\n ",non-directive
" Creates a <code>CertificateEncodingException</code>\n with the specified cause and a detail message of\n <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n ",non-directive
"@param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  ",non-directive
"(A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n ",non-directive
"@since 1.5\n",non-directive
" Verifies that this certificate was signed using the\n private key that corresponds to the specified public key.\n ",non-directive
"This method uses the signature verification engine\n supplied by the specified provider.\n\n ",directive
"@param key the PublicKey used to carry out the verification.\n ",non-directive
"@param sigProvider the name of the signature provider.\n\n ",non-directive
" Returns the encoded form of this certification path, using the\n specified encoding.\n\n ",non-directive
"@param encoding the name of the encoding to use\n ",non-directive
"@return the encoded bytes\n ",non-directive
" Removes the specified member from the group.\n \n",non-directive
"@param user the principal to remove from this group.\n \n",non-directive
"@return true if the principal was removed, or \n false if the principal was not a member.\n",non-directive
" Returns true if the passed principal is a member of the group. \n ",non-directive
"This method does a recursive search, so if a principal belongs to a \n group which is a member of this group, true is returned.\n \n",directive
"@param member the principal whose membership is to be checked.\n \n",non-directive
"@return true if the principal is a member of this group, \n false otherwise.\n",non-directive
" Sets this ACL entry to be a negative one. ",non-directive
"That is, the associated\n principal (e.g., a user or a group) will be denied the permission set\n specified in the entry.\n\n ",non-directive
"Note: ACL entries are by default positive. ",directive
"An entry becomes a\n negative entry only if this <code>setNegativePermissions</code>\n method is called on it.\n",directive
" Creates a browser information control with the given shell as parent.\n\n ",non-directive
"@param parent the parent shell\n ",non-directive
"@param symbolicFontName the symbolic name of the font used for size computations\n ",non-directive
"@param statusFieldText the text to be used in the optional status field\n            or <code>null</code> if the status field should be hidden\n ",non-directive
"@since 3.4\n",non-directive
" Computes the substitution for the given character and if necessary\n subsequent characters. ",non-directive
"Implementation should use <code>nextChar</code>\n to read subsequent characters.\n\n ",directive
"@param c the character to be substituted\n ",non-directive
"@return the substitution for <code>c</code>\n ",non-directive
" Returns <code>true</code> if diff information is being displayed, <code>false</code> otherwise.\n\n ",non-directive
"@return <code>true</code> if diff information is being displayed, <code>false</code> otherwise\n ",non-directive
"@since 3.3\n",non-directive
" Notifies that one or more attributes of an instance of\n <code>IScheme</code> have changed. ",non-directive
"Specific details are described in\n the <code>SchemeEvent</code>.\n \n",non-directive
"@param schemeEvent\n            the scheme event. ",non-directive
"Guaranteed not to be <code>null</code>.\n",non-directive
" <p>\n Returns a list of prefixes for the current sequence. ",non-directive
"A prefix is any\n leading subsequence in a <code>TriggerSequence</code>. ",non-directive
"A prefix is\n also an instance of <code>TriggerSequence</code>.\n ",non-directive
"</p>\n <p>\n For example, consider a trigger sequence that consists of four triggers:\n A, B, C and D. ",non-directive
"The prefixes would be \"\", \"A\", \"A B\", and \"A B C\". ",non-directive
"The\n list of prefixes must always be the same as the size of the trigger list.\n ",directive
"</p>\n \n ",non-directive
"@return The array of possible prefixes for this sequence. ",non-directive
"This array must\n         not be <code>null</code>, but may be empty. ",directive
"It must only\n         contains instances of <code>TriggerSequence</code>.\n",directive
" Returns the instance of the scheme that changed.\n \n",non-directive
"@return the instance of the scheme that changed. ",non-directive
"Guaranteed not to be\n         <code>null</code>.\n",non-directive
" Makes this scheme become undefined. ",non-directive
"This has the side effect of changing\n the name, description and parent identifier to <code>null</code>.\n ",directive
"Notification is sent to all listeners.\n",non-directive
" <p>\n Notifies this manager that the context manager has changed. ",non-directive
"This method\n is intended for internal use only.\n ",directive
"</p>\n <p>\n This method completes in <code>O(1)</code>.\n ",non-directive
"</p>\n",non-directive
" <p>\n Computes the bindings for the current state of the application, but\n disregarding the current contexts. ",non-directive
"This can be useful when trying to\n display all the possible bindings.\n ",directive
"</p>\n <p>\n This method completes in <code>O(n)</code>, where <code>n</code> is\n the number of bindings.\n ",non-directive
"</p>\n \n ",non-directive
"@return A map of trigger (<code>TriggerSequence</code>) to bindings (\n         <code>Collection</code> containing <code>Binding</code>).\n         ",non-directive
"This map may be empty, but it is never <code>null</code>.\n",non-directive
" <p>\n Gets the currently active scheme.\n ",non-directive
"</p>\n <p>\n This method completes in <code>O(1)</code>.\n ",non-directive
"</p>\n \n ",non-directive
"@return The active scheme; may be <code>null</code> if there is no\n         active scheme. ",non-directive
"If a scheme is returned, it is guaranteed to be\n         defined.\n",non-directive
"@param command\n ",non-directive
"@return\n 		a trigger sequence, or <code>null</code>\n ",non-directive
"@since 3.4\n",non-directive
" <p>\n Returns the set of all bindings managed by this class.\n ",non-directive
"</p>\n <p>\n This method completes in <code>O(1)</code>.\n ",non-directive
"</p>\n \n ",non-directive
"@return The array of all bindings. ",non-directive
"This value may be <code>null</code>\n         and it may be empty.\n",non-directive
" <p>\n Gets the scheme with the given identifier. ",non-directive
"If the scheme does not already\n exist, then a new (undefined) scheme is created with that identifier.\n ",directive
"This guarantees that schemes will remain unique.\n ",directive
"</p>\n <p>\n This method completes in amortized <code>O(1)</code>.\n ",non-directive
"</p>\n \n ",non-directive
"@param schemeId\n            The identifier for the scheme to retrieve; must not be\n            <code>null</code>.\n ",non-directive
"@return A scheme with the given identifier.\n",non-directive
" <p>\n Notifies this manager that a scheme has changed. ",non-directive
"This method is intended\n for internal use only.\n ",directive
"</p>\n <p>\n This method calls out to listeners, and so the time it takes to complete\n is dependent on third-party code.\n ",directive
"</p>\n \n ",non-directive
"@param schemeEvent\n            An event describing the change in the scheme.\n",non-directive
" Provides the current conflicts in the keybindings for the given \n TriggerSequence as a {@link Collection} of {@link Binding}\n \n ",non-directive
"@param sequence The sequence for which conflict info is required\n \n ",non-directive
"@return Collection of KeyBinding. ",non-directive
"If no conflicts,\n         then returns a <code>null</code>\n ",non-directive
"@since 3.5\n",non-directive
" Returns the parameterized command to which this binding applies. ",non-directive
"If the\n identifier is <code>null</code>, then this binding is \"unbinding\" an\n existing binding.\n \n",directive
"@return The fully-parameterized command; may be <code>null</code>.\n",non-directive
" Removes the given listener from this key sequence widget.\n \n",non-directive
"@param listener\n            The listener to be removed; must not be <code>null</code>.\n ",non-directive
"@since 3.2\n",non-directive
" Given an SWT accelerator value, provide the corresponding key stroke.\n \n",non-directive
"@param accelerator\n            The accelerator to convert; should be a valid SWT accelerator\n            value.\n ",non-directive
"@return The equivalent key stroke; never <code>null</code>.\n",non-directive
" <p>\n Converts the given event into an SWT accelerator value -- considering the\n modified character with the shift modifier. ",non-directive
"This is the third accelerator\n value that should be checked when processing incoming key events.\n ",directive
"</p>\n <p>\n For example, on a standard US keyboard, \"Ctrl+Shift+5\" would be viewed as\n \"Ctrl+Shift+%\".\n ",non-directive
"</p>\n \n ",non-directive
"@param event\n            The event to be converted; must not be <code>null</code>.\n ",non-directive
"@return The combination of the state mask and the unmodified character.\n",non-directive
" Looks up a single modifier key by its formal name, and returns the integer\n representation for this modifier key\n \n ",non-directive
"@param name\n            The formal name of the modifier key to look-up; must not be\n            <code>null</code>.\n ",non-directive
"@return The integer representation of this key. ",non-directive
"If the modifier key\n         cannot be found, then this method returns <code>0</code>.\n",non-directive
" Looks up a key value, and returns the formal string representation for\n that key\n \n ",non-directive
"@param key\n            The key to look-up.\n ",non-directive
"@return The formal string representation of this key. ",non-directive
"If this key cannot\n         be found, then it is simply the character corresponding to that\n         integer value.\n",non-directive
" Gets an instance of <code>KeySequence</code>.\n \n",non-directive
"@return a key sequence. ",non-directive
"This key sequence will have no key strokes.\n         ",non-directive
"Guaranteed not to be <code>null</code>.\n",non-directive
" Creates an instance of <code>KeySequence</code> given a list of key\n strokes.\n \n",non-directive
"@param keyStrokes\n            the list of key strokes. ",non-directive
"This list may be empty, but it must\n            not be <code>null</code>. ",non-directive
"If this list is not empty, it\n            must only contain instances of <code>KeyStroke</code>.\n ",directive
"@return a key sequence. ",non-directive
"Guaranteed not to be <code>null</code>.\n",non-directive
" Creates an instance of <code>KeySequence</code> by parsing a given\n formal string representation.\n \n",non-directive
"@param string\n            the formal string representation to parse.\n ",non-directive
"@return a key sequence. ",non-directive
"Guaranteed not to be <code>null</code>.\n ",non-directive
" Returns the formal string representation for this key sequence.\n \n",non-directive
"@return The formal string representation for this key sequence.\n         ",non-directive
"Guaranteed not to be <code>null</code>.\n ",non-directive
"@see java.lang.Object#toString()\n",non-directive
" Constructs an instance of <code>KeySequence</code> given a list of key\n strokes.\n \n",non-directive
"@param keyStrokes\n            the list of key strokes. ",non-directive
"This list may be empty, but it must\n            not be <code>null</code>. ",non-directive
"If this list is not empty, it\n            must only contain instances of <code>KeyStroke</code>.\n",directive
" Returns the natural key for this key stroke.\n \n",non-directive
"@return The natural key for this key stroke. ",non-directive
"This value is\n         <code>NO_KEY</code> if the key stroke is incomplete (i.e., has\n         no natural key).\n",non-directive
" Formats an individual key into a human readable format. ",non-directive
"This converts the\n key into a format similar to Xemacs.\n \n",non-directive
"@param key\n            The key to format; must not be <code>null</code>.\n ",non-directive
"@return The key formatted as a string; should not be <code>null</code>.\n",non-directive
" Formats an individual key into a human readable format. ",non-directive
"This uses an\n internationalization resource bundle to look up the key. ",non-directive
"This does the\n platform-specific formatting for Carbon.\n \n",non-directive
"@param key\n            The key to format.\n ",non-directive
"@return The key formatted as a string; should not be <code>null</code>.\n",non-directive
" Called when the TreeViewer needs up-to-date information whether the node\n at the given tree path can be expanded. ",directive
"If the content provider knows the\n element at the given tree path, it should respond by calling\n {@link TreeViewer#setHasChildren(Object, boolean)}. ",directive
"The content provider\n may also choose to call {@link TreeViewer#setChildCount(Object, int)}\n instead if it knows the number of children.\n \n",directive
" <p>\n Intended as an optimization for when the viewer does not need the actual\n children. ",directive
"Clients may be able to implement this more efficiently than\n <code>updateChildCount</code>.\n ",directive
"</p>\n \n ",non-directive
"@param path\n            The tree path for which up-to-date information about children\n            is needed\n",non-directive
" Return the possible parent paths for the given element. ",non-directive
"An empty array\n can be returned if the paths cannot be computed. ",directive
"In this case the\n tree-structured viewer can't expand a given node correctly if requested.\n ",non-directive
"If the element is a potential child of the input of the viewer, an empty\n tree path should be an entry in the returned array.\n \n",directive
"@param element\n            the element\n ",non-directive
"@return the possible parent paths for the given element\n",non-directive
" Returns the hash code for the given element.\n ",non-directive
"@param element the element the hash code is calculated for\n \n ",non-directive
"@return the hash code for the given element\n",non-directive
" Provides a foreground color for the given element.\n \n",non-directive
"@param element the element\n ",non-directive
"@return	the foreground color for the element, or <code>null</code> \n   to use the default foreground color\n",non-directive
" Returns the cell modifier of this viewer, or <code>null</code> if none\n has been set.\n \n",non-directive
" <p>\n Since 3.3, an alternative API is available, see {@link\n ViewerColumn#setEditingSupport(EditingSupport)} for a more flexible way\n of editing values in a column viewer.\n ",directive
"</p>\n \n ",non-directive
"@return the cell modifier, or <code>null</code>\n ",non-directive
"@since 3.1 (in subclasses, added in 3.3 to abstract class)\n ",non-directive
"@see ViewerColumn#setEditingSupport(EditingSupport)\n ",non-directive
"@see EditingSupport\n",non-directive
" Creates a combo viewer on a newly-created combo control under the given parent.\n ",non-directive
"The combo control is created using the given SWT style bits.\n ",non-directive
"The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n ",non-directive
"@param parent the parent control\n ",non-directive
"@param style the SWT style bits\n",non-directive
" Returns the specified neighbor of this cell, or <code>null</code> if no\n neighbor exists in the given direction. ",non-directive
"Direction constants can be\n combined by bitwise OR; for example, this method will return the cell to\n the upper-left of the current cell by passing {@link #ABOVE} |\n {@link #LEFT}. ",non-directive
"If <code>sameLevel</code> is <code>true</code>, only cells\n in sibling rows (under the same parent) will be considered.\n \n",non-directive
"@param directionMask\n            the direction mask used to identify the requested neighbor\n            cell\n ",non-directive
"@param sameLevel\n            if <code>true</code>, only consider cells from sibling rows\n ",non-directive
"@return the requested neighbor cell, or <code>null</code> if not found\n",non-directive
" The location and bounds of the area where the text is drawn depends on\n various things (image displayed, control with SWT.CHECK)\n \n ",non-directive
"@return The bounds of the of the text area. ",non-directive
"May return <code>null</code>\n         if the underlying widget implementation doesn't provide this\n         information\n ",non-directive
"@since 3.4\n",non-directive
" Gets the background color of the cell.\n \n",non-directive
"@return the background of the cell or <code>null</code> for the default\n         background\n \n ",non-directive
"@since 3.4\n",non-directive
" Gets the font of the cell.\n \n",non-directive
"@return the font of the cell or <code>null</code> for the default font\n \n ",non-directive
"@since 3.4\n",non-directive
" Returns the zero-relative indices of the items which are currently\n selected in the underlying widget.  ",non-directive
"The array is empty if no items are selected.\n ",non-directive
"<p>\n Note: This is not the actual structure used by the receiver\n to maintain its selection, so modifying the array will\n not affect the receiver. \n ",directive
"</p>\n ",non-directive
"@return the array of indices of the selected items\n",non-directive
" Returns the element with the given index from this list viewer.\n ",non-directive
"Returns <code>null</code> if the index is out of range.\n\n ",non-directive
"@param index the zero-based index\n ",non-directive
"@return the element at the given index, or <code>null</code> if the\n   index is out of range\n",non-directive
" Sets to the given value the checked state for all elements in this viewer.\n ",non-directive
"Does not fire events to check state listeners.\n\n ",non-directive
"@param state <code>true</code> if the element should be checked,\n  and <code>false</code> if it should be unchecked\n",directive
" Decoration is ready. ",non-directive
"Update anything else for the settings.\n ",non-directive
"@param settings The object collecting the settings.\n ",non-directive
"@param element The Object being decorated.\n ",non-directive
"@since 3.1\n",non-directive
" Set the decoration context that will be based to the decorator \n for this label provider if that decorator implements {@link LabelDecorator}.\n ",non-directive
"@param decorationContext the decoration context.\n \n",non-directive
"@since 3.2\n",non-directive
" The table tree viewer implementation of this <code>Viewer</code>\n framework method returns the label provider, which in the case of table\n tree viewers will be an instance of either\n <code>ITableLabelProvider</code> or <code>ILabelProvider</code>. ",non-directive
"If\n it is an <code>ITableLabelProvider</code>, then it provides a separate\n label text and image for each column. ",non-directive
"If it is an\n <code>ILabelProvider</code>, then it provides only the label text and\n image for the first column, and any remaining columns are blank.\n",non-directive
" Creates a table tree viewer on the given table tree control. ",non-directive
"The viewer\n has no input, no content provider, a default label provider, no sorter,\n and no filters.\n \n",non-directive
"@param tree\n            the table tree control\n",non-directive
" Creates a table tree viewer on a newly-created table tree control under\n the given parent. ",non-directive
"The table tree control is created using the SWT style\n bits <code>MULTI, H_SCROLL, V_SCROLL, and BORDER</code>. ",non-directive
"The viewer\n has no input, no content provider, a default label provider, no sorter,\n and no filters.\n \n",non-directive
"@param parent\n            the parent control\n",non-directive
" Return the background Color for element or <code>null</code> if there\n is not one.\n ",non-directive
"@param element\n ",non-directive
"@return Color or <code>null</code>\n",non-directive
" Creates a styler that takes the given foreground and background colors\n from the JFace color registry.\n \n",non-directive
"@param foregroundColorName\n            the color name for the foreground color\n ",non-directive
"@param backgroundColorName\n            the color name for the background color\n \n ",non-directive
"@return the created style\n",non-directive
" Appends a string with styles to the {@link StyledString}.\n \n",non-directive
"@param string\n            the string to append\n ",non-directive
"@return returns a reference to this object\n",non-directive
" Creates a new event for the given source and selection.\n\n ",non-directive
"@param source the viewer\n ",non-directive
"@param selection the selection\n",non-directive
" Returns the target item of the given drop event.\n\n ",non-directive
"@param event the event\n ",non-directive
"@return The target of the drop, may be <code>null</code>.\n",non-directive
" Returns the current operation.\n\n ",non-directive
"@return a <code>DROP_*</code> constant from class <code>DND</code>\n\n ",non-directive
"@see DND#DROP_COPY\n ",non-directive
"@see DND#DROP_MOVE\n ",non-directive
"@see DND#DROP_LINK\n ",non-directive
"@see DND#DROP_NONE\n",non-directive
" Overrides the current operation for a drop that happens immediately\n after the current validateDrop.\n \n",non-directive
" This maybe called only from within a\n {@link #validateDrop(Object, int, TransferData)} method\n \n \n ",directive
"@param operation\n            the operation to be used for the drop.\n \n",non-directive
"@see DND#DROP_COPY\n ",non-directive
"@see DND#DROP_MOVE\n ",non-directive
"@see DND#DROP_LINK\n ",non-directive
"@see DND#DROP_NONE\n \n ",non-directive
"@since 3.5\n",non-directive
" Removes the given listener for post selection changes from this selection \n provider.\n ",non-directive
"Has no affect if an identical listener is not registered.\n\n ",directive
"@param listener a selection changed listener\n",non-directive
" Handles a default selection event from the text control by applying the editor\n value and deactivating this cell editor.\n \n",non-directive
"@param event the selection event\n \n ",non-directive
"@since 3.0\n",non-directive
" Creates a new text string cell editor parented under the given control.\n ",non-directive
"The cell editor value is the string itself, which is initially the empty string. \n ",non-directive
"Initially, the cell editor has no cell validator.\n\n ",non-directive
"@param parent the parent control\n",non-directive
" Creates a new text string cell editor parented under the given control.\n ",non-directive
"The cell editor value is the string itself, which is initially the empty string. \n ",non-directive
"Initially, the cell editor has no cell validator.\n\n ",non-directive
"@param parent the parent control\n ",non-directive
"@param style the style bits\n ",non-directive
"@since 2.1\n",non-directive
"@param viewer\n            the viewer we are working for\n ",non-directive
"@param cellToCollapse\n            the cell to collapse\n ",non-directive
"@param event\n            the key event\n ",non-directive
"@return <code>true</code> if this event triggers collapsing of a node\n",non-directive
" Return the decoration context in which this decoration\n will be applied.\n ",non-directive
"@return the decoration context\n \n ",non-directive
"@since 3.2\n",non-directive
" Returns the label text for the given column of the given element.\n\n ",non-directive
"@param element the object representing the entire row, or\n   <code>null</code> indicating that no input object is set\n   in the viewer\n ",non-directive
"@param columnIndex the zero-based index of the column in which the label appears\n ",non-directive
"@return String or or <code>null</code> if there is no text for the \n  given object at columnIndex\n",non-directive
" Creates a resizable column width with the given weight and minimum width.\n\n ",non-directive
"@param weight the weight of the column\n ",non-directive
"@param minimumWidth the minimum width of the column in pixels\n",non-directive
" Get the value of the given property or <code>null</code>\n if the property does not exist in this context.\n ",non-directive
"@param property the property\n ",non-directive
"@return the value of the given property or <code>null</code>\n",non-directive
" Checks whether the given property of the given element can be \n modified.\n\n ",non-directive
"@param element the element\n ",non-directive
"@param property the property\n ",non-directive
"@return <code>true</code> if the property can be modified,\n   and <code>false</code> if it is not modifiable\n",non-directive
" Returns the value for the given property of the given element.\n ",non-directive
"Returns <code>null</code> if the element does not have the given property.\n\n ",non-directive
"@param element the element\n ",non-directive
"@param property the property\n ",non-directive
"@return the property value\n",non-directive
" Modifies the value for the given property of the given element.\n ",non-directive
"Has no effect if the element does not have the given property,\n or if the property cannot be modified.\n ",directive
"<p>\n Note that it is possible for an SWT Item to be passed instead of \n the model element. ",directive
"To handle this case in a safe way, use: \n <pre>\n     if (element instanceof Item) {\n         element = ((Item) element).getData();\n     }\n     // modify the element's property here\n </pre>\n </p>\n \n ",non-directive
"@param element the model element or SWT Item (see above)\n ",non-directive
"@param property the property\n ",non-directive
"@param value the new property value\n \n ",non-directive
"@see org.eclipse.swt.widgets.Item\n",non-directive
" Creates a {@link DecoratingStyledCellLabelProvider} that delegates the\n requests for styled labels and for images to a\n {@link DelegatingStyledCellLabelProvider.IStyledLabelProvider}.\n \n",non-directive
"@param labelProvider\n            the styled label provider\n ",non-directive
"@param decorator\n            a label decorator or <code>null</code> to not decorate the\n            label\n ",non-directive
"@param decorationContext\n            a decoration context or <code>null</code> if the no\n            decorator is configured or the default decorator should be\n            used\n",non-directive
" Returns the element at the specified index in this path.\n \n",non-directive
"@param index\n            index of element to return\n ",non-directive
"@return element at the specified index\n",non-directive
" Get the background Color.\n \n",non-directive
"@return Color or <code>null</code> if no new value was set.\n \n",non-directive
"@since 3.1\n",non-directive
" Set the background Color.\n \n",non-directive
"@param background\n            Color. ",non-directive
"This value should not be <code>null</code>.\n \n",non-directive
"@since 3.1\n",non-directive
" The color to use when rendering the foreground (=text) of the selected\n cell when the control has <b>no</b> input focus\n \n ",non-directive
"@param cell\n            the cell which is colored\n ",non-directive
"@return the color or <code>null</code> to use the same used when\n         control has focus\n ",non-directive
"@since 3.4\n",non-directive
" Creates a new event for the given source, indicating that the label\n provided by the source for the given elements is no longer valid and should be updated.\n\n ",non-directive
"@param source the label provider\n ",non-directive
"@param elements the element whose labels have changed\n",non-directive
" Creates a new event for the given source, indicating that the label\n provided by the source for the given element is no longer valid and should be updated.\n\n ",non-directive
"@param source the label provider\n ",non-directive
"@param element the element whose label needs to be updated\n",non-directive
" Get the image displayed in the tool tip for object.\n \n",non-directive
" <p>\n <b>If {@link #getToolTipText(Object)} and\n {@link #getToolTipImage(Object)} both return <code>null</code> the\n control is set back to standard behavior</b>\n </p>\n \n ",non-directive
"@param object\n            the element for which the tool tip is shown\n ",non-directive
"@return {@link Image} or <code>null</code> if there is not image.\n",non-directive
" The {@link SWT} style used to create the {@link CLabel} (see there for\n supported styles). ",non-directive
"By default {@link SWT#SHADOW_NONE} is used.\n \n",non-directive
"@param object\n            the element for which the tool tip is shown\n ",non-directive
"@return the style used to create the label\n ",non-directive
"@see CLabel\n",non-directive
" Get the bounds of the entry at the columnIndex,\n \n ",non-directive
"@param columnIndex\n ",non-directive
"@return {@link Rectangle}\n",non-directive
" Return the image at the columnIndex.\n \n",non-directive
"@param columnIndex\n ",non-directive
"@return {@link Image} or <code>null</code>\n",non-directive
" Set the background at the columnIndex.\n \n",non-directive
"@param columnIndex\n ",non-directive
"@param color\n",non-directive
" Set the foreground at the columnIndex.\n \n",non-directive
"@param columnIndex\n ",non-directive
"@param color\n",non-directive
" Enable ToolTip support for the viewer by creating an instance from this\n class. ",non-directive
"To get all necessary informations this support class consults the\n {@link CellLabelProvider}.\n\n ",non-directive
"@param viewer\n            the viewer the support is attached to\n",non-directive
" Returns the collator used to sort strings.\n\n ",non-directive
"@return the collator used to sort strings\n ",non-directive
"@deprecated as of 3.3 Use {@link ViewerComparator#getComparator()}\n",non-directive
" Create a new manager with a default navigation strategy:\n \n ",non-directive
"--  <code>SWT.ARROW_UP</code>: navigate to cell above\n ",non-directive
"--  <code>SWT.ARROW_DOWN</code>: navigate to cell below\n ",non-directive
"--  <code>SWT.ARROW_RIGHT</code>: navigate to next visible cell on\n the right\n ",non-directive
"--  <code>SWT.ARROW_LEFT</code>: navigate to next visible cell on the\n left\n \n\n ",non-directive
"@param viewer\n            the viewer the manager is bound to\n ",non-directive
"@param focusDrawingDelegate\n            the delegate responsible to highlight selected cell\n",non-directive
" Create a new manager\n\n ",non-directive
"@param viewer\n            the viewer the manager is bound to\n ",non-directive
"@param focusDrawingDelegate\n            the delegate responsible to highlight selected cell\n ",non-directive
"@param navigationStrategy\n            the strategy used to navigate the cells\n ",non-directive
"@since 3.4\n",non-directive
" Creates a list viewer on a newly-created list control under the given parent.\n ",non-directive
"The list control is created using the given SWT style bits.\n ",non-directive
"The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n ",non-directive
"@param parent the parent control\n ",non-directive
"@param style the SWT style bits\n",non-directive
" This constructor can be used when no event exists. ",non-directive
"The type set is\n {@link #PROGRAMMATIC}\n \n ",non-directive
"@param cell\n            the cell\n",non-directive
" Notifies that the end user has requested applying a value.\n ",non-directive
"All cell editors send this notification.\n ",non-directive
"<p>\n The normal reaction is to update the model with the current cell editor value.\n ",non-directive
"However, if the value is not valid, it should not be applied. \n ",directive
"A typical text-based cell editor would send this message\n when the end user hits Return, whereas other editors would\n send it whenever their value changes.\n ",non-directive
"</p>\n",non-directive
" Creates a new color cell editor parented under the given control.\n ",non-directive
"The cell editor value is black (<code>RGB(0,0,0)</code>) initially, and has no \n validator.\n\n ",non-directive
"@param parent the parent control\n ",non-directive
"@param style the style bits\n ",non-directive
"@since 2.1\n",non-directive
" Disposes of this content provider.  \n ",non-directive
"This is called by the viewer when it is disposed.\n ",directive
"<p>\n The viewer should not be updated during this call, as it is in the process\n of being disposed.\n ",directive
"</p>\n",non-directive
" Notifies any open event listeners that a open event has been received.\n ",non-directive
"Only listeners registered at the time this method is called are notified.\n \n",directive
"@param event\n            a double-click event\n \n ",non-directive
"@see IOpenListener#open(OpenEvent)\n",non-directive
" Notifies any post selection listeners that a post selection event has\n been received. ",non-directive
"Only listeners registered at the time this method is\n called are notified.\n \n",directive
"@param event\n            a selection changed event\n \n ",non-directive
"@see #addPostSelectionChangedListener(ISelectionChangedListener)\n",non-directive
" Returns the comparer to use for comparing elements, or\n <code>null</code> if none has been set.  ",non-directive
"If specified,\n the viewer uses this to compare and hash elements rather\n than the elements' own equals and hashCode methods.\n           \n",non-directive
"@return the comparer to use for comparing elements or\n            <code>null</code>\n",non-directive
" Returns the sorted and filtered set of children of the given element. ",non-directive
"The\n resulting array must not be modified, as it may come directly from the\n model's internal state.\n \n",directive
"@param parent\n            the parent element\n ",non-directive
"@return a sorted and filtered array of child elements\n",non-directive
" Removes the given filter from this viewer, and triggers refiltering and\n resorting of the elements if required. ",non-directive
"Has no effect if the identical\n filter is not registered. ",directive
"If you want to remove more than one filter\n consider using {@link StructuredViewer#setFilters(ViewerFilter[])}.\n \n",directive
"@param filter\n            a viewer filter\n ",non-directive
"@see StructuredViewer#setFilters(ViewerFilter[])\n",non-directive
" Sets this viewer's comparator to be used for sorting elements, and triggers refiltering and \n resorting of this viewer's element.  ",non-directive
"<code>null</code> turns sorting off.\n ",non-directive
"To get the viewer's comparator, call <code>getComparator()</code>.\n ",directive
"<p>\n IMPORTANT: This method was introduced in 3.2. ",directive
"If a reference to this viewer object \n is passed to clients who call <code>getSorter()<code>, null may be returned from\n from that method even though the viewer is sorting its elements using the\n viewer's comparator.\n ",directive
"</p>\n \n ",non-directive
"@param comparator a viewer comparator, or <code>null</code> if none\n\n ",non-directive
"@since 3.2\n",non-directive
" Configures whether this structured viewer uses an internal hash table to\n speeds up the mapping between elements and SWT items. ",non-directive
"This must be called\n before the viewer is given an input (via <code>setInput</code>).\n \n",directive
"@param enable\n            <code>true</code> to enable hash lookup, and\n            <code>false</code> to disable it\n",non-directive
" Returns whether the given element has children.\n ",non-directive
"<p>\n Intended as an optimization for when the viewer does not\n need the actual children.  ",non-directive
"Clients may be able to implement\n this more efficiently than <code>getChildren</code>.\n ",directive
"</p>\n\n ",non-directive
"@param element the element\n ",non-directive
"@return <code>true</code> if the given element has children,\n  and <code>false</code> if it has no children\n",non-directive
" The table viewer implementation of this <code>Viewer</code> framework\n method returns the label provider, which in the case of table viewers\n will be an instance of either <code>ITableLabelProvider</code> or\n <code>ILabelProvider</code>. ",non-directive
"If it is an\n <code>ITableLabelProvider</code>, then it provides a separate label\n text and image for each column. ",non-directive
"If it is an <code>ILabelProvider</code>,\n then it provides only the label text and image for the first column, and\n any remaining columns are blank.\n",non-directive
" Inserts the given element into this table viewer at the given position.\n ",non-directive
"If this viewer has a sorter, the position is ignored and the element is\n inserted at the correct position in the sort order.\n ",non-directive
"<p>\n This method should be called (by the content provider) when elements have\n been added to the model, in order to cause the viewer to accurately\n reflect the model. ",directive
"This method only affects the viewer, not the model.\n ",directive
"</p>\n\n ",non-directive
"@param element\n            the element\n ",non-directive
"@param position\n            a 0-based position relative to the model, or -1 to indicate\n            the last position\n",non-directive
" Removes the given elements from this table viewer. ",non-directive
"The selection is\n updated if required.\n ",non-directive
"<p>\n This method should be called (by the content provider) when elements have\n been removed from the model, in order to cause the viewer to accurately\n reflect the model. ",directive
"This method only affects the viewer, not the model.\n ",directive
"</p>\n\n ",non-directive
"@param elements\n            the elements to remove\n",non-directive
" Clear the table item at the specified index\n\n ",non-directive
"@param index\n            the index of the table item to be cleared\n\n ",non-directive
"@since 3.1\n",non-directive
" Searches the receiver's list starting at the first item (index 0) until\n an item is found that is equal to the argument, and returns the index of\n that item. ",non-directive
"If no item is found, returns -1.\n\n ",non-directive
"@param item\n            the search item\n ",non-directive
"@return the index of the item\n\n ",non-directive
"@since 3.3\n",non-directive
" Clears all the items in the receiver. ",non-directive
"The text, icon and other attributes\n of the items are set to their default values. ",non-directive
"If the table was created\n with the <code>SWT.VIRTUAL</code> style, these attributes are requested\n again as needed.\n\n ",non-directive
"@since 3.3\n",non-directive
" Resets the given item in the receiver. ",non-directive
"The text, icon and other attributes\n of the item are set to their default values.\n\n ",non-directive
"@param item the item to reset\n\n ",non-directive
"@since 3.3\n",non-directive
" Sets the receiver's selection to be the given array of items. ",non-directive
"The current\n selection is cleared before the new items are selected.\n ",non-directive
"<p>\n Items that are not in the receiver are ignored. ",non-directive
"If the receiver is\n single-select and multiple items are specified, then all items are\n ignored.\n ",non-directive
"</p>\n\n ",non-directive
"@param items\n            the array of items\n\n ",non-directive
"@since 3.3\n",non-directive
" Selects the items at the given zero-relative indices in the receiver.\n ",non-directive
"The current selection is not cleared before the new items are selected.\n ",non-directive
"<p>\n If the item at a given index is not selected, it is selected.\n ",non-directive
"If the item at a given index was already selected, it remains selected.\n ",non-directive
"Indices that are out of range and duplicate indices are ignored.\n ",non-directive
"If the receiver is single-select and multiple indices are specified,\n then all indices are ignored.\n ",non-directive
"</p>\n\n ",non-directive
"@param indices the array of indices for the items to select\n\n ",non-directive
" Adds a listener for expand and collapse events in this viewer. ",non-directive
"Has no\n effect if an identical listener is already registered.\n\n ",directive
"@param listener\n            a tree viewer listener\n",non-directive
" Collapses the subtree rooted at the given element or tree path to the\n given level.\n\n ",non-directive
"@param elementOrTreePath\n            the element or tree path\n ",non-directive
"@param level\n            non-negative level, or <code>ALL_LEVELS</code> to collapse\n            all levels of the tree\n",non-directive
" Fires a tree collapsed event. ",non-directive
"Only listeners registered at the time this\n method is called are notified.\n\n ",directive
"@param event\n            the tree expansion event\n ",non-directive
"@see ITreeViewerListener#treeCollapsed\n",non-directive
" Returns whether the given SWT item is expanded or collapsed.\n\n ",non-directive
"@param item\n            the item\n ",non-directive
"@return <code>true</code> if the item is considered expanded and\n         <code>false</code> if collapsed\n",non-directive
" Returns a list of elements corresponding to expanded nodes in this\n viewer's tree, including currently hidden ones that are marked as\n expanded but are under a collapsed ancestor.\n ",non-directive
"<p>\n This method is typically used when preserving the interesting state of a\n viewer; <code>setExpandedElements</code> is used during the restore.\n ",directive
"</p>\n\n ",non-directive
"@return the array of expanded elements\n ",non-directive
"@see #setExpandedElements\n",non-directive
" Returns the item before the given item in the tree, or <code>null</code>\n if there is no previous item.\n\n ",non-directive
"@param item\n            the item\n ",non-directive
"@return the previous item, or <code>null</code> if none\n",non-directive
" This method takes a tree path or an element. ",non-directive
"If the argument is not a\n tree path, returns the parent of the given element or <code>null</code>\n if the parent is not known. ",non-directive
"If the argument is a tree path with more than\n one segment, returns its parent tree path, otherwise returns\n <code>null</code>.\n\n ",non-directive
"@param elementOrTreePath\n ",non-directive
"@return the parent element, or parent path, or <code>null</code>\n\n ",non-directive
"@since 3.2\n",non-directive
" Sets the auto-expand level to be used when the input of the viewer is set\n using {@link #setInput(Object)}. ",non-directive
"The value 0 means that there is no\n auto-expand; 1 means that the invisible root element is expanded (since\n most concrete subclasses do not show the root element, there is usually\n no practical difference between using the values 0 and 1); 2 means that\n top-level elements are expanded, but not their children; 3 means that\n top-level elements are expanded, and their children, but not\n grandchildren; and so on.\n ",non-directive
"<p>\n The value <code>ALL_LEVELS</code> means that all subtrees should be\n expanded.\n ",non-directive
"</p>\n <p>\n Note that in previous releases, the Javadoc for this method had an off-by\n one error. ",directive
"See bug 177669 for details.\n ",directive
"</p>\n \n ",non-directive
"@param level\n            non-negative level, or <code>ALL_LEVELS</code> to expand all\n            levels of the tree\n",non-directive
" Returns the tree path for the given item.\n ",non-directive
"@param item\n ",non-directive
"@return {@link TreePath}\n\n ",non-directive
"@since 3.2\n",non-directive
" Inserts the given element as a new child element of the given parent\n element at the given position. ",non-directive
"If this viewer has a sorter, the position\n is ignored and the element is inserted at the correct position in the\n sort order.\n ",non-directive
"<p>\n This method should be called (by the content provider) when elements have\n been added to the model, in order to cause the viewer to accurately\n reflect the model. ",directive
"This method only affects the viewer, not the model.\n ",directive
"</p>\n\n ",non-directive
"@param parentElementOrTreePath\n            the parent element, or the tree path to the parent\n ",non-directive
"@param element\n            the element\n ",non-directive
"@param position\n            a 0-based position relative to the model, or -1 to indicate\n            the last position\n\n ",non-directive
"@since 3.2\n",non-directive
" Indicates if an element's representation should appear as checked or \n gray instead of unchecked. ",non-directive
"If this method returns <code>true</code>\n the {@link ICheckStateProvider#isGrayed(Object)} method will determine\n whether the check box displays a check mark (\"checked\") or a box \n (\"grayed\").\n ",non-directive
"@param element \n ",non-directive
"@return true if the element should be checked or grayed, false if it \n 		should be unchecked\n",non-directive
" Create a new row with style at index\n \n ",non-directive
"@param style\n ",non-directive
"@param rowIndex\n ",non-directive
"@return ViewerRow\n ",non-directive
"@since 3.3\n",non-directive
" Creates a table viewer on a newly-created table control under the given\n parent. ",non-directive
"The table control is created using the SWT style bits\n <code>MULTI, H_SCROLL, V_SCROLL,</code> and <code>BORDER</code>. ",non-directive
"The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters. ",non-directive
"The table has no columns.\n \n",non-directive
"@param parent\n 		the parent control\n",non-directive
" Creates a table viewer on a newly-created table control under the given\n parent. ",non-directive
"The table control is created using the given style bits. ",non-directive
"The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters. ",non-directive
"The table has no columns.\n \n",non-directive
"@param parent\n 		the parent control\n ",non-directive
"@param style\n 		SWT style bits\n",non-directive
" Creates a table viewer on the given table control. ",non-directive
"The viewer has no\n input, no content provider, a default label provider, no sorter, and no\n filters.\n \n",non-directive
"@param table\n 		the table control\n",non-directive
" Sets the grayed state for the given element in this viewer.\n\n ",non-directive
"@param element the element\n ",non-directive
"@param state <code>true</code> if the item should be grayed,\n  and <code>false</code> if it should be ungrayed\n ",non-directive
"@return <code>true</code> if the gray state could be set, \n  and <code>false</code> otherwise\n",non-directive
" Sets the style bits for this cell editor.\n\n ",non-directive
"@param style\n            the SWT style bits for this cell editor\n ",non-directive
"@since 2.1\n",non-directive
" Returns the style bits for this cell editor.\n\n ",non-directive
"@return the style for this cell editor\n ",non-directive
"@since 2.1\n",non-directive
" Removes the given property change listener from this cell editor. ",non-directive
"Has no\n affect if an identical property change listener is not registered.\n\n ",directive
"@param listener\n            a property change listener\n",non-directive
" Notifies any help listeners that help has been requested.\n ",non-directive
"Only listeners registered at the time this method is called are notified.\n\n ",directive
"@param event a help event\n\n ",non-directive
"@see HelpListener#helpRequested(org.eclipse.swt.events.HelpEvent)\n",non-directive
" Removes the given help listener from this viewer.\n ",non-directive
"Has no affect if an identical listener is not registered.\n\n ",non-directive
"@param listener a help listener\n",non-directive
" Returns a text label that is based on the given text label,\n but decorated with additional information relating to the state\n of the provided element.\n \n",non-directive
" Text and image decoration updates can occur as a result of other updates\n within the workbench including deferred decoration by background processes.\n ",non-directive
"Clients should handle labelProviderChangedEvents for the given element to get\n the complete decoration.\n ",directive
"@see LabelProviderChangedEvent\n ",non-directive
"@see IBaseLabelProvider#addListener\n\n ",non-directive
"@param text the input text label to decorate\n ",non-directive
"@param element the element whose image is being decorated\n ",non-directive
"@return the decorated text label, or <code>null</code> if no decoration is to be applied\n",non-directive
" Creates a new cell editor with a combo containing the given list of\n choices and parented under the given control. ",non-directive
"The cell editor value is\n the zero-based index of the selected item. ",non-directive
"Initially, the cell editor has\n no cell validator and the first item in the list is selected.\n\n ",non-directive
"@param parent\n            the parent control\n ",non-directive
"@param items\n            the list of strings for the combo box\n",non-directive
" Returns the paths in this selection whose last segment is equal\n to the given element\n \n ",non-directive
"@param element the element to get the tree paths for\n \n ",non-directive
"@return the array of tree paths\n",non-directive
" Is the cell editable\n\n ",non-directive
"@param element\n            the model element\n ",non-directive
"@return true if editable\n",non-directive
" Return the font for element or <code>null</code> if there\n is not one.\n \n",non-directive
"@param element\n ",non-directive
"@return Font or <code>null</code>\n",non-directive
" Returns the viewer of this viewer column.\n \n",non-directive
"@return Returns the viewer.\n \n",non-directive
"@since 3.4\n",non-directive
" Create a new instance of the receiver at columnIndex.\n \n",non-directive
"@param viewer\n            the viewer the column is part of\n ",non-directive
"@param columnOwner\n            the widget owning the viewer in case the widget has no columns\n            this could be the widget itself\n",non-directive
" Provides a background color for the given element.\n \n",non-directive
"@param element\n            the element\n ",non-directive
"@return the background color for the element, or <code>null</code> to\n         use the default background color\n",non-directive
" Returns the styled text for the label of the given element.\n \n",non-directive
"@param element\n            the element for which to provide the styled label text\n ",non-directive
"@return the styled text string used to label the element\n",non-directive
" For a TreeViewer with a tree with the VIRTUAL style bit set, set the\n number of children of the given element or tree path. ",non-directive
"To set the number\n of children of the invisible root of the tree, you can pass the input\n object or an empty tree path.\n\n ",non-directive
"@param elementOrTreePath\n            the element, or tree path\n ",non-directive
"@param count\n\n ",non-directive
"@since 3.2\n",non-directive
" Sets a new selection for this viewer and optionally makes it visible.\n ",non-directive
"<p>\n <b>Currently the <code>reveal</code> parameter is not honored because\n {@link Tree} does not provide an API to only select an item without\n scrolling it into view</b>\n </p>\n\n ",directive
"@param selection\n            the new selection\n ",non-directive
"@param reveal\n            <code>true</code> if the selection is to be made visible,\n            and <code>false</code> otherwise\n",non-directive
" Creates a tree viewer on a newly-created tree control under the given\n parent. ",non-directive
"The tree control is created using the given SWT style bits. ",non-directive
"The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters.\n\n ",non-directive
"@param parent\n            the parent control\n ",non-directive
"@param style\n            the SWT style bits used to create the tree.\n",non-directive
"@param viewer\n            the viewer this editor is attached to\n ",non-directive
"@param editorActivationStrategy\n            the strategy used to decide about editor activation\n ",non-directive
"@param feature\n            bit mask controlling the editor\n            \n            ",non-directive
"--  {@link ColumnViewerEditor#DEFAULT}\n            ",non-directive
"--  {@link ColumnViewerEditor#TABBING_CYCLE_IN_ROW}\n            ",non-directive
"--  {@link ColumnViewerEditor#TABBING_HORIZONTAL}\n            ",non-directive
"--  {@link ColumnViewerEditor#TABBING_MOVE_TO_ROW_NEIGHBOR}\n            ",non-directive
"--  {@link ColumnViewerEditor#TABBING_VERTICAL}\n            \n",non-directive
" Sets the filter for this content provider. ",non-directive
"This filter takes priority over\n anything that was supplied to the <code>TableViewer</code>. ",non-directive
"The filter\n must be capable of being used in a background thread.\n \n",directive
"@param toSet filter to set\n",non-directive
" Returns the item at the given index. ",non-directive
"Indexes are based on sorted order.\n \n",non-directive
"@param index index to test\n ",non-directive
"@return the item at the given index\n",non-directive
" Returns true iff this collection contains the given item\n \n ",non-directive
"@param item item to test\n ",non-directive
"@return true iff this collection contains the given item\n",non-directive
" Adds a listener to this model. ",non-directive
"The listener should be given the model's\n current contents (either through setContents or a sequence of adds) at the\n receiver's earliest convenience. ",directive
"The receiver will notify the listener\n about any changes in state until the listener is removed.\n \n",non-directive
" <p>\n Has no effect if an identical listener is already registered.\n ",directive
"</p>\n \n ",non-directive
"@param listener listener to add\n",non-directive
" Adds the given elements to the set. ",non-directive
"Duplicate elements are ignored.\n \n",non-directive
"@param toAdd elements to add\n",non-directive
" Adds the given window to the set of windows managed by\n this window manager. ",non-directive
"Does nothing is this window is\n already managed by this window manager.\n\n ",non-directive
"@param window the window\n",non-directive
" Creates this window's widgetry in a new top-level shell.\n ",non-directive
"<p>\n The default implementation of this framework method creates this window's\n shell (by calling <code>createShell</code>), and its controls (by\n calling <code>createContents</code>), then initializes this window's\n shell bounds (by calling <code>initializeBounds</code>).\n ",directive
"</p>\n",non-directive
" Returns the top level control for this window. ",non-directive
"The parent of this control\n is the shell.\n \n",non-directive
"@return the top level control, or <code>null</code> if this window's\n         control has not been created yet\n",non-directive
" Returns the initial location to use for the shell. ",non-directive
"The default\n implementation centers the shell horizontally (1/2 of the difference to\n the left and 1/2 to the right) and vertically (1/3 above and 2/3 below)\n relative to the parent shell, or display bounds if there is no parent\n shell.\n \n",non-directive
"@param initialSize\n            the initial size of the shell, as returned by\n            <code>getInitialSize</code>.\n ",non-directive
"@return the initial location of the shell\n",non-directive
" Gets the default orientation for windows. ",non-directive
"If it is not\n set the default value will be unspecified (SWT#NONE).\n \n",non-directive
" \n ",non-directive
"@return SWT#NONE, SWT.RIGHT_TO_LEFT or SWT.LEFT_TO_RIGHT\n ",non-directive
"@see SWT#RIGHT_TO_LEFT\n ",non-directive
"@see SWT#LEFT_TO_RIGHT\n ",non-directive
"@see SWT#NONE\n ",non-directive
"@since 3.1\n",non-directive
" Creates a window instance, whose shell will be created under the given\n parent shell. ",non-directive
"Note that the window will have no visual representation\n until it is told to open. ",directive
"By default, <code>open</code> does not block.\n \n",non-directive
"@param parentShell\n            the parent shell, or <code>null</code> to create a top-level\n            shell. ",non-directive
"Try passing \"(Shell)null\" to this method instead of \"null\"\n            if your compiler complains about an ambiguity error.\n ",directive
"@see #setBlockOnOpen\n ",non-directive
"@see #getDefaultOrientation()\n",non-directive
" Returns the menu bar manager for this window (if it has one).\n\n ",non-directive
"@return the menu bar manager, or <code>null</code> if\n   this window does not have a menu bar\n ",non-directive
"@see #addMenuBar()\n",non-directive
" Returns the cool bar manager for this window.\n \n",non-directive
"@return the cool bar manager, or <code>null</code> if\n   this window does not have a cool bar\n ",non-directive
"@see #addCoolBar(int)\n ",non-directive
"@since 3.2\n",non-directive
" Returns whether or not children exist for the Application Window's\n toolbar control.\n ",non-directive
"<p>\n ",non-directive
"@return boolean true if children exist, false otherwise\n",non-directive
" Returns whether or not children exist for this application window's\n cool bar control.\n \n",non-directive
"@return boolean true if children exist, false otherwise\n ",non-directive
"@since 3.0\n",non-directive
" Create an application window instance, whose shell will be created under the\n given parent shell.\n ",non-directive
"Note that the window will have no visual representation (no widgets)\n until it is told to open. ",directive
"By default, <code>open</code> does not block.\n\n ",non-directive
"@param parentShell the parent shell, or <code>null</code> to create a top-level shell\n",non-directive
" Get the data restored under the key\n \n ",non-directive
"@param key\n            the key\n ",non-directive
"@return data or <code>null</code> if no entry is restored under the key\n",non-directive
" Set to <code>false</code> if display bounds should not be respected or\n to <code>true</code> if the tooltip is should repositioned to not\n overlap the display bounds.\n ",non-directive
"<p>\n Default is <code>true</code>\n </p>\n \n ",non-directive
"@param respectDisplayBounds\n",non-directive
" Set to <code>false</code> if monitor bounds should not be respected or\n to <code>true</code> if the tooltip is should repositioned to not\n overlap the monitors bounds. ",non-directive
"The monitor the tooltip belongs to is the\n same is control's monitor the tooltip is shown for.\n ",non-directive
"<p>\n Default is <code>true</code>\n </p>\n \n ",non-directive
"@param respectMonitorBounds\n",non-directive
" Creates the content area of the the tooltip.\n \n",non-directive
"@param event\n            the event that triggered the activation of the tooltip\n ",non-directive
"@param parent\n            the parent of the content area\n ",non-directive
"@return the content area created\n",non-directive
" Set the popup delay.\n \n",non-directive
"@param popupDelay\n            the delay before the tooltip is shown to the user. ",non-directive
"If\n            <code>0</code> the tooltip is shown immediately\n",non-directive
" The foreground {@link Color} used by {@link CLabel} in the default\n implementation\n \n ",non-directive
"@param event\n            the event triggered the popup of the tooltip\n ",non-directive
"@return the {@link Color} or <code>null</code> if default foreground\n         color should be used\n",non-directive
" Performs the operation specified by the operation code on the target.\n ",non-directive
"<code>doOperation</code> must only be called if <code>canDoOperation</code>\n returns <code>true</code>.\n\n ",directive
"@param operation the operation code\n",non-directive
" Sets this viewer's hyperlink detectors for the given state mask.\n\n ",non-directive
"@param hyperlinkDetectors	the new array of hyperlink detectors, <code>null</code>\n 									or an empty array to disable hyperlinking\n ",non-directive
"@param eventStateMask		the SWT event state mask to activate hyperlink mode\n",non-directive
" Sets the hover enrich mode.\n ",non-directive
"A non-<code>null</code> <code>mode</code> defines when hovers\n should be enriched once the mouse is moved into them.\n ",non-directive
"If <code>mode</code> is <code>null</code>, hovers are automatically closed\n when the mouse is moved out of the {@link ITextHover#getHoverRegion(ITextViewer, int) hover region}.\n ",non-directive
"<p>\n Note that a hover can only be enriched if its {@link IInformationControlExtension5#getInformationPresenterControlCreator()}\n is not <code>null</code>.\n ",directive
"</p>\n\n ",non-directive
"@param mode the enrich mode, or <code>null</code>\n",non-directive
" Called before the input document is replaced.\n\n ",non-directive
"@param oldInput the text viewer's previous input document\n ",non-directive
"@param newInput the text viewer's new input document\n",non-directive
" Called after the input document has been replaced.\n\n ",non-directive
"@param oldInput the text viewer's previous input document\n ",non-directive
"@param newInput the text viewer's new input document\n",non-directive
" Creates a default information control with the given shell as parent. ",non-directive
"An information\n presenter that can handle simple HTML is used to process the information to be displayed.\n\n ",non-directive
"@param parent the parent shell\n ",non-directive
"@param isResizeable <code>true</code> if the control should be resizable\n ",non-directive
"@since 3.4\n",non-directive
" Creates a resizable default information control with the given shell as parent. ",non-directive
"An\n information presenter that can handle simple HTML is used to process the information to be\n displayed.\n\n ",non-directive
"@param parent the parent shell\n ",non-directive
"@param toolBarManager the manager or <code>null</code> if toolbar is not desired\n ",non-directive
"@since 3.4\n",non-directive
" Creates a default information control with the given shell as parent. ",non-directive
"The\n given information presenter is used to process the information to be\n displayed. ",non-directive
"The given styles are applied to the created styled text\n widget.\n\n ",non-directive
"@param parentShell the parent shell\n ",non-directive
"@param shellStyle the additional styles for the shell\n ",non-directive
"@param style the additional styles for the styled text widget\n ",non-directive
"@param presenter the presenter to be used\n ",non-directive
"@param statusFieldText the text to be used in the status field or <code>null</code> to hide the status field\n ",non-directive
"@since 3.0\n ",non-directive
"@deprecated As of 3.4, replaced by simpler constructors\n",non-directive
" Creates a default information control with the given shell as parent. ",non-directive
"The\n given information presenter is used to process the information to be\n displayed.\n\n ",non-directive
"@param parent the parent shell\n ",non-directive
"@param textStyles the additional styles for the styled text widget\n ",non-directive
"@param presenter the presenter to be used\n ",non-directive
"@deprecated As of 3.4, replaced by {@link #DefaultInformationControl(Shell, DefaultInformationControl.IInformationPresenter)}\n",non-directive
" Informs that the view port changed. ",non-directive
"The given vertical position is the new vertical scrolling\n offset measured in pixels.\n ",non-directive
"<p>\n <strong>Note:</strong> This event will not be sent when the viewer is resized.\n ",directive
"</p>\n \n ",non-directive
"@param verticalOffset the vertical offset measured in pixels\n",non-directive
" Requests the widget token from this token owner. ",non-directive
"Returns\n <code>true</code> if the token has been acquired or is already owned by\n the requester. ",non-directive
"This method is non-blocking.\n ",non-directive
"<p>\n Replaced by\n {@link IWidgetTokenOwnerExtension#requestWidgetToken(IWidgetTokenKeeper, int)}.\n\n ",directive
"@param requester the token requester\n ",non-directive
"@return <code>true</code> if requester acquires the token,\n         <code>false</code> otherwise\n",non-directive
" Searches for a string starting at the given offset and using the specified search\n directives. ",non-directive
"If a string has been found it is selected and its start offset is\n returned. ",non-directive
"If regExSearch is <code>true</code> the findString is\n interpreted as a regular expression.\n\n ",non-directive
"@param offset the offset at which searching starts\n ",non-directive
"@param findString the specification of what should be found\n ",non-directive
"@param searchForward <code>true</code> searches forward, <code>false</code> backwards\n ",non-directive
"@param caseSensitive <code>true</code> performs a case sensitive search, <code>false</code> an insensitive search\n ",non-directive
"@param wholeWord if <code>true</code> only occurrences are reported in which the findString stands as a word by itself.\n 				",non-directive
"Must not be used in combination with <code>regExSearch</code>.\n ",directive
"@param regExSearch if <code>true</code> findString represents a regular expression\n 				Must not be used in combination with <code>wholeWord</code>.\n ",directive
"@return the position of the specified string, or -1 if the string has not been found\n ",non-directive
" Creates the viewer's SWT control. ",non-directive
"The viewer's text widget either is\n the control or is a child of the control.\n\n ",non-directive
"@param parent the parent of the viewer's control\n ",non-directive
"@param styles the SWT style bits for the viewer's control\n",non-directive
" Sets the creator for the hover controls.\n\n ",non-directive
"@param creator the hover control creator\n ",non-directive
"@since 2.0\n",non-directive
" Informs all registered text input listeners about the successful input change,\n This method does not use a robust iterator.\n\n ",non-directive
"@param oldInput the old input document\n ",non-directive
"@param newInput the new input document\n",non-directive
" Returns the number of lines that can fully fit into the viewport. ",non-directive
"This is computed by\n dividing the widget's client area height by the widget's line height. ",non-directive
"The result is only\n accurate if the widget does not use variable line heights - for that reason, clients should\n not use this method any longer and use the client area height of the text widget to find out\n how much content fits into it.\n\n ",directive
"@return the view port height in lines\n ",non-directive
"@deprecated as of 3.2\n",non-directive
" Returns the width of the representation of a text range in the\n visible region of the viewer's document as drawn in this viewer's\n widget.\n\n ",non-directive
"@param offset the offset of the text range in the visible region\n ",non-directive
"@param length the length of the text range in the visible region\n ",non-directive
"@return the width of the presentation of the specified text range\n ",non-directive
"@since 2.0\n",non-directive
" Returns <code>true</code> if one line is completely selected or if multiple lines are selected.\n ",non-directive
"Being completely selected means that all characters except the new line characters are\n selected.\n\n ",non-directive
"@return <code>true</code> if one or multiple lines are selected\n ",non-directive
"@since 2.0\n",non-directive
" Shifts a text block to the right or left using the specified set of prefix characters.\n ",non-directive
"If white space should be ignored the prefix characters must not be at the beginning of\n the line when shifting to the left. ",directive
"There may be whitespace in front of the prefixes.\n\n ",non-directive
"@param useDefaultPrefixes says whether the configured default or indent prefixes should be used\n ",non-directive
"@param right says whether to shift to the right or the left\n ",non-directive
"@param ignoreWhitespace says whether whitespace in front of prefixes is allowed\n ",non-directive
"@since 2.0\n",non-directive
" Starts  the sequential rewrite mode of the viewer's document.\n\n ",non-directive
"@param normalized <code>true</code> if the rewrite is performed from the start to the end of the document\n ",non-directive
"@since 2.0\n ",non-directive
"@deprecated since 3.1 use {@link IDocumentExtension4#startRewriteSession(DocumentRewriteSessionType)} instead\n",directive
" Implements the contract of {@link ITextViewerExtension5#widgetLine2ModelLine(int)}.\n\n ",non-directive
"@param widgetLine the widget line\n ",non-directive
"@return the corresponding model line\n ",non-directive
"@since 2.1\n",non-directive
" Translates the given selection range of the viewer's document into\n the corresponding widget range or returns <code>null</code> of this fails.\n\n ",non-directive
"@param modelSelection the selection range of the viewer's document\n ",non-directive
"@return the widget range corresponding to the selection range or <code>null</code>\n ",non-directive
"@since 2.1\n",non-directive
" Create a new text viewer with the given SWT style bits.\n ",non-directive
"The viewer is ready to use but does not have any plug-in installed.\n\n ",non-directive
"@param parent the parent of the viewer's control\n ",non-directive
"@param styles the SWT style bits for the viewer's control,\n 			<em>if <code>SWT.WRAP</code> is set then a custom document adapter needs to be provided, see {@link #createDocumentAdapter()}\n",non-directive
" Returns the size constraints.\n\n ",non-directive
"@return the size constraints or <code>null</code> if not set\n ",non-directive
"@see #setSizeConstraints(int, int)\n",non-directive
" Sets the find scope of the target to operate on. ",non-directive
"<code>null</code>\n indicates that the global scope should be used.\n\n ",non-directive
"@param scope the find scope of the target, may be <code>null</code>\n",non-directive
" Sets the result window for this presentation. ",non-directive
"When dealing with\n this presentation all ranges which are outside the result window\n are ignored. ",non-directive
"For example, the size of the presentation is 0\n when there is no range inside the window even if there are ranges\n outside the window. ",non-directive
"All methods are aware of the result window.\n\n ",non-directive
"@param resultWindow the result window\n",non-directive
" Returns this presentation's default style range. ",non-directive
"The returned <code>StyleRange</code>\n is relative to the start of the result window.\n\n ",non-directive
"@return this presentation's default style range\n",non-directive
" Add the given range to the presentation. ",non-directive
"The range must be a\n subrange of the presentation's default range.\n\n ",directive
"@param range the range to be added\n",non-directive
" Inserts the verify key listener at the beginning of the viewer's list of\n verify key listeners. ",non-directive
"If the listener is already registered with the\n viewer this call moves the listener to the beginning of the list.\n\n ",directive
"@param listener the listener to be inserted\n",non-directive
" Returns the document underlying the receiver, possibly <code>null</code>.\n \n",non-directive
"@return the document underlying the receiver, possibly <code>null</code>\n ",non-directive
"@since 3.5\n",non-directive
" Sets the parameters of the information to be displayed. ",non-directive
"These are the information itself and\n the area for which the given information is valid. ",non-directive
"This so called subject area is a graphical\n region of the information control's subject control. ",non-directive
"This method calls <code>presentInformation()</code>\n to trigger the presentation of the computed information.\n\n ",directive
"@param information the information, or <code>null</code> if none is available\n ",non-directive
"@param subjectArea the subject area, or <code>null</code> if none is available\n ",non-directive
"@since  2.1\n",non-directive
" Installs this manager on the given control. ",non-directive
"The control is now taking the role of\n the subject control. ",non-directive
"This implementation sets the control also as the information\n control closer's subject control and automatically enables this manager.\n\n ",non-directive
"@param subjectControl the subject control\n",non-directive
" Sets the enable state of this manager.\n\n ",non-directive
"@param enabled the enable state\n ",non-directive
"@deprecated visibility will be changed to protected\n",non-directive
" Returns the information control. ",non-directive
"If the information control has not been created yet,\n it is automatically created.\n\n ",non-directive
"@return the information control\n",non-directive
" Creates a new information control manager using the given information control creator.\n ",non-directive
"By default the following configuration is given:\n \n ",non-directive
"--   enabled == false\n ",non-directive
"--   horizontal margin == 5 points\n ",non-directive
"--   vertical margin == 5 points\n ",non-directive
"--   width constraint == 60 characters\n ",non-directive
"--   height constraint == 6 characters\n ",non-directive
"--   enforce constraints as minimal size == false\n ",non-directive
"--   enforce constraints as maximal size == false\n ",non-directive
"--   layout anchor == ANCHOR_BOTTOM\n ",non-directive
"--   fall back anchors == { ANCHOR_TOP, ANCHOR_BOTTOM, ANCHOR_LEFT, ANCHOR_RIGHT, ANCHOR_GLOBAL }\n ",non-directive
"--   takes focus when visible == false\n \n\n ",non-directive
"@param creator the information control creator\n",non-directive
" Returns the column on the {@linkplain ITextSelection#getStartLine() start line} at which the\n selection starts. ",non-directive
"The returned column is a character count measured from the start of the\n line. ",non-directive
"It may be larger than the length of the line, in which case it is a <a\n href=\"#virtual\">virtual</a> offset.\n \n",non-directive
"@return the start column measured from the line start\n",non-directive
" Creates a new information control with the given shell as the control's parent.\n\n ",non-directive
"@param parent the parent shell\n ",non-directive
"@return the created information control\n",non-directive
" Starts the propagation of the font preference stored in the source preference\n store under the source key to the target preference store using the target\n preference key.\n\n ",non-directive
"@param source the source preference store\n ",non-directive
"@param sourceKey the key to be used in the source preference store\n ",non-directive
"@param target the target preference store\n ",non-directive
"@param targetKey the key to be used in the target preference store\n",non-directive
" Computes the line height for the given line range.\n\n ",non-directive
"@param textWidget the <code>StyledText</code> widget\n ",non-directive
"@param startLine the start line\n ",non-directive
"@param endLine the end line (exclusive)\n ",non-directive
"@param lineCount the line count used by the old API\n ",non-directive
"@return the height of all lines starting with <code>startLine</code> and ending above <code>endLime</code>\n",non-directive
" Returns the index of the last (possibly only partially) visible line of the widget\n\n ",non-directive
"@param widget the text widget\n ",non-directive
"@return the index of the last line of which a pixel is visible\n",non-directive
" Returns the number of hidden pixels of the first partially visible line. ",non-directive
"If there is no\n partially visible line, zero is returned.\n\n ",non-directive
"@param textWidget the widget\n ",non-directive
"@return the number of hidden pixels of the first partial line, always &gt;= 0\n",non-directive
" Returns <code>true</code> if the widget displays the entire contents, i.e. ",non-directive
"it cannot\n be vertically scrolled.\n\n ",non-directive
"@param widget the widget\n ",non-directive
"@return <code>true</code> if the widget displays the entire contents, i.e. ",non-directive
"it cannot\n         be vertically scrolled, <code>false</code> otherwise\n",non-directive
" Returns the average character width of the given control's font.\n\n ",non-directive
"@param control the control to calculate the average char width for\n ",non-directive
"@return the average character width of the controls font\n\n ",non-directive
"@since 3.4\n",non-directive
" Returns the offset in the given viewer that corresponds to the current cursor location.\n \n",non-directive
"@param viewer the viewer\n ",non-directive
"@return the offset for the current cursor location or -1 if not available\n ",non-directive
"@since 3.5\n",non-directive
" Sets the information control's size constraints. ",non-directive
"A constraint value of\n {@link SWT#DEFAULT} indicates no constraint. ",non-directive
"This method must be called before\n {@link #computeSizeHint()} is called.\n ",directive
"<p>\n Note: An information control which implements {@link IInformationControlExtension3}\n may ignore this method or use it as hint for its very first appearance.\n ",directive
"</p>\n ",non-directive
"@param maxWidth the maximal width of the control  to present the information, or {@link SWT#DEFAULT} for not constraint\n ",non-directive
"@param maxHeight the maximal height of the control to present the information, or {@link SWT#DEFAULT} for not constraint\n",non-directive
" Controls the visibility of this information control.\n ",non-directive
"<p>\n <strong>Note:</strong> The information control must not grab focus when\n made visible.\n ",directive
"</p>\n\n ",non-directive
"@param visible <code>true</code> if the control should be visible\n",non-directive
" Sets the size of this information control.\n\n ",non-directive
"@param width the width of the control\n ",non-directive
"@param height the height of the control\n",non-directive
" Removes the given listeners from the list of dispose listeners.\n ",non-directive
"If the listener is not registered this call has no effect.\n\n ",directive
"@param listener the listener to be removed\n",non-directive
" Removes the given listeners from the list of focus listeners.\n ",non-directive
"If the listener is not registered this call has no affect.\n\n ",directive
"@param listener the listener to be removed\n",non-directive
" Returns the widget offset that corresponds to the given offset in the viewer's document\n or <code>-1</code> if there is no such offset\n\n ",non-directive
"@param modelOffset the offset in the viewer's document\n ",non-directive
"@return the corresponding widget offset or <code>-1</code>\n",non-directive
" Returns the widget line of the given widget offset.\n\n ",non-directive
"@param widgetOffset the widget offset\n ",non-directive
"@return the widget line of the widget offset\n",non-directive
" Disposes this paint manager. ",non-directive
"The paint manager uninstalls itself\n and clears all registered painters. ",non-directive
"This method is also called when the\n last painter is removed from the list of managed painters.\n",non-directive
" Creates a text attribute with the given colors and style.\n\n ",non-directive
"@param foreground the foreground color, <code>null</code> if none\n ",non-directive
"@param background the background color, <code>null</code> if none\n ",non-directive
"@param style the style\n",non-directive
" Adds a text listener to this viewer. ",non-directive
"If the listener is already registered\n with this viewer, this call has no effect.\n\n ",directive
"@param listener the listener to be added\n",non-directive
" Removes the given listener from this viewer's set of text listeners.\n ",non-directive
"If the listener is not registered with this viewer, this call has\n no effect.\n\n ",directive
"@param listener the listener to be removed\n",non-directive
" Returns whether a given range overlaps with the visible region of this\n viewer's document.\n ",non-directive
"<p>\n Viewers implementing {@link ITextViewerExtension5}may be forced to\n change the fractions of the input document that are shown in order to\n fulfill this request. ",directive
"This is because the overlap is supposed to be\n without gaps.\n\n ",non-directive
"@param offset the offset\n ",non-directive
"@param length the length\n ",non-directive
"@return <code>true</code> if the specified range overlaps with the\n         visible region\n",non-directive
" Sets the strings that are used as prefixes when lines of the given content type\n are shifted using the shift text operation. ",non-directive
"The prefixes are considered equivalent.\n ",non-directive
"Thus \"\t\" and \"    \" can both be used as prefix characters.\n ",non-directive
"Shift right always inserts the indentPrefixes[0].\n ",non-directive
"Shift left removes all of the specified prefixes.\n\n ",non-directive
"@param indentPrefixes the prefixes to be used\n ",non-directive
"@param contentType the content type for which the prefixes are specified\n",non-directive
" Sets the selection to the specified range.\n\n ",non-directive
"@param offset the offset of the selection range\n ",non-directive
"@param length the length of the selection range. ",non-directive
"A negative length places\n            the caret at the visual start of the selection.\n",non-directive
" Ensures that the given range is visible.\n\n ",non-directive
"@param offset the offset of the range to be revealed\n ",non-directive
"@param length the length of the range to be revealed\n",non-directive
" Returns the contained {@link RevisionRange}s adapted to the current diff state. ",non-directive
"The returned\n information is only valid at the moment it is returned, and may change as the annotated\n document is modified.\n\n ",directive
"@return an unmodifiable view of the contained ranges (element type: {@link RevisionRange})\n",non-directive
" Returns the author color for this revision. ",non-directive
"This color can be used to visually distinguish\n one revision from another, for example as background color.\n ",non-directive
"<p>\n Revisions from the same author must return the same color and revisions from different authors\n must return distinct colors.</p>\n\n ",directive
"@return the RGB color for this revision's author\n",non-directive
" Returns the line ranges of this revision information. ",non-directive
"The returned information is only valid\n at the moment it is returned, and may change as the annotated document is modified. ",directive
"See\n {@link IRevisionListener} for a way to be informed when the revision information changes. ",non-directive
"The\n returned list is sorted by document offset.\n\n ",non-directive
"@return an unmodifiable view of the line ranges (element type: {@link RevisionRange})\n ",non-directive
"@see IRevisionListener\n ",non-directive
"@since 3.3\n",non-directive
" Installs the reconciler on the given text viewer. ",non-directive
"After this method has been\n finished, the reconciler is operational, i.e., it works without requesting\n further client actions until <code>uninstall</code> is called.\n\n ",non-directive
"@param textViewer the viewer on which the reconciler is installed\n",non-directive
" Tells whether the code is running in this reconciler's\n background thread.\n\n ",non-directive
"@return <code>true</code> if running in this reconciler's background thread\n ",non-directive
"@since 3.4\n",non-directive
" Sets the exit position to move the caret to when linked mode is exited.\n\n ",non-directive
"@param viewer the viewer where the exit position is located\n ",non-directive
"@param offset the offset of the exit position\n ",non-directive
"@param length the length of the exit position (in case there should be a\n        selection)\n ",non-directive
"@param sequence set to the tab stop position of the exit position, or\n 		  <code>LinkedPositionGroup.NO_STOP</code> if there should be no tab stop.\n ",non-directive
" Sets the context info property. ",non-directive
"If set to <code>true</code>, context\n info will be invoked on the current target's viewer whenever a position\n is switched.\n\n ",non-directive
"@param doContextInfo <code>true</code> if context information should be\n        displayed\n",non-directive
" Sets the focus callback which will get informed when the focus of the\n linked mode UI changes.\n ",non-directive
"<p>\n If there is a listener installed already, it will be replaced.\n ",non-directive
"</p>\n\n ",non-directive
"@param listener the new listener, never <code>null</code>.\n",non-directive
" Sets the \"simple\" mode of the receiver. ",non-directive
"A linked mode UI in simple mode\n merely draws the exit position, but not the target, focus, and slave\n positions. ",non-directive
"Default is <code>false</code>. ",non-directive
"This method must be called\n before it is entered.\n\n ",directive
"@param simple <code>true</code> if the UI should be in simple mode.\n",non-directive
" Convenience constructor for multiple viewers.\n\n ",non-directive
"@param model the linked mode model\n ",non-directive
"@param viewers the non-empty list of viewers upon which the linked mode\n        UI should act\n",non-directive
" Convenience constructor for one target.\n\n ",non-directive
"@param model the linked mode model\n ",non-directive
"@param target the target upon which the linked mode UI should act\n",non-directive
" Called when the UI for the linked mode gives focus to a linked position.\n\n ",non-directive
"@param position the position being entered\n ",non-directive
"@param target the target where <code>position</code> resides in\n",non-directive
" Checks whether the linked mode should be left after receiving the\n given <code>VerifyEvent</code> and selection. ",directive
"Note that the event\n carries widget coordinates as opposed to <code>offset</code> and\n <code>length</code> which are document coordinates.\n\n ",directive
"@param model the linked mode model\n ",non-directive
"@param event the verify event\n ",non-directive
"@param offset the offset of the current selection\n ",non-directive
"@param length the length of the current selection\n ",non-directive
"@return valid exit flags or <code>null</code> if no special action\n         should be taken\n",directive
" This method allows subclasses to provide their own {@link AutoAssistListener}.\n\n ",non-directive
"@return a new auto assist listener\n ",non-directive
"@since 3.4\n",non-directive
" Sets the context information popup's foreground color.\n\n ",non-directive
"@param foreground the foreground color\n ",non-directive
"@since 2.0\n",non-directive
" Creates a new content assistant. ",non-directive
"The content assistant is not automatically activated,\n overlays the completion proposals with context information list if necessary, and shows the\n context information above the location at which it was activated. ",directive
"If auto activation will be\n enabled, without further configuration steps, this content assistant is activated after a 500\n milliseconds delay. ",directive
"It uses the default partitioning.\n",non-directive
" Called when the proposal is selected.\n\n ",non-directive
"@param viewer the text viewer.\n ",non-directive
"@param smartToggle the smart toggle key was pressed\n",non-directive
" Returns optional context information associated with this proposal.\n ",non-directive
"The context information will automatically be shown if the proposal\n has been applied.\n\n ",non-directive
"@return the context information for this proposal or <code>null</code>\n",non-directive
" Returns the image for this context information.\n ",non-directive
"The image will be shown to the left of the display string.\n\n ",non-directive
"@return the image to be shown or <code>null</code> if no image is desired\n",non-directive
" Returns a list of completion proposals based on the\n specified location within the document that corresponds\n to the current cursor position within the text viewer.\n\n ",non-directive
"@param viewer the viewer whose document is used to compute the proposals\n ",non-directive
"@param offset an offset within the document for which completions should be computed\n ",non-directive
"@return an array of completion proposals or <code>null</code> if no proposals are possible\n",non-directive
" Returns information about possible contexts based on the\n specified location within the document that corresponds\n to the current cursor position within the text viewer.\n\n ",non-directive
"@param viewer the viewer whose document is used to compute the possible contexts\n ",non-directive
"@param offset an offset within the document for which context information should be computed\n ",non-directive
"@return an array of context information objects or <code>null</code> if no context could be found\n",non-directive
" Installs this presenter for the given context information.\n\n ",non-directive
"@param info the context information which this presenter should style\n ",non-directive
"@param viewer the text viewer on which the information is presented\n ",non-directive
"@param offset the document offset for which the information has been computed\n",non-directive
" Inserts the common prefix of the available completions. ",non-directive
"If no common\n prefix can be computed it is identical to\n {@link IContentAssistant#showPossibleCompletions()}.\n\n ",non-directive
"@return an optional error message if no proposals can be computed\n",non-directive
" Returns the offset of the range in the document that will be replaced by\n applying this template.\n\n ",non-directive
"@return the offset of the range in the document that will be replaced by\n         applying this template\n ",non-directive
"@since 3.1\n",non-directive
" Creates a template proposal with a template and its context.\n\n ",non-directive
"@param template  the template\n ",non-directive
"@param context   the context in which the template was requested.\n ",non-directive
"@param image     the icon of the proposal.\n ",non-directive
"@param region	the region this proposal is applied to\n ",non-directive
"@param relevance the relevance of the proposal\n",non-directive
" Saves the templates as XML, encoded as UTF-8 onto the given byte stream.\n\n ",non-directive
"@param templates the templates to save\n ",non-directive
"@param stream the byte output to write the templates to in XML\n ",non-directive
" Saves the templates as XML.\n\n ",non-directive
"@param templates the templates to save\n ",non-directive
"@param writer the writer to write the templates to in XML\n ",non-directive
" Returns whether the receiver represents a custom template, i.e. ",non-directive
"is either\n a user-added template or a contributed template that has been modified.\n\n ",non-directive
"@return <code>true</code> if the contained template is a custom\n         template and cannot be reconstructed from the contributed\n         templates\n",non-directive
" Returns whether the receiver represents a modified template, i.e. ",non-directive
"a\n contributed template that has been changed.\n\n ",non-directive
"@return <code>true</code> if the contained template is contributed but has been modified, <code>false</code> otherwise\n",non-directive
" Creates a new, user-added instance that is not linked to a contributed\n template.\n\n ",non-directive
"@param template the template which is stored by the new instance\n ",non-directive
"@param enabled whether the template is enabled\n",non-directive
" Deletes all user-added templates and reverts all contributed templates.\n\n ",non-directive
"@param doSave <code>true</code> if the store should be saved after restoring\n ",non-directive
"@since 3.5\n",non-directive
" Deletes all user-added templates and reverts all contributed templates.\n ",non-directive
"<p>\n <strong>Note:</strong> the store will be saved after restoring.\n ",directive
"</p>\n",non-directive
" Returns the first enabled template that matches both name and context type id.\n\n ",non-directive
"@param name the name of the template searched for\n ",non-directive
"@param contextTypeId the context type id to clip unwanted templates, or <code>null</code> if any context type is OK\n ",non-directive
"@return the first enabled template that matches both name and context type id, or <code>null</code> if none is found\n",non-directive
" Returns the first enabled template that matches the given template id.\n\n ",non-directive
"@param id the id of the template searched for\n ",non-directive
"@return the first enabled template that matches id, or <code>null</code> if none is found\n ",non-directive
"@since 3.1\n",non-directive
" Returns all template data.\n\n ",non-directive
"@param includeDeleted whether to include deleted data\n ",non-directive
"@return all template data, whether enabled or not\n",non-directive
" Creates a new information presenter that uses the given information control creator.\n ",non-directive
"The presenter is not installed on any text viewer yet. ",non-directive
"By default, an information\n control closer is set that closes the information control in the event of key strokes,\n resizing, moves, focus changes, mouse clicks, and disposal - all of those applied to\n the information control's parent control. ",non-directive
"Also, the setup ensures that the information\n control when made visible will request the focus. ",non-directive
"By default, the default document\n partitioning {@link IDocumentExtension3#DEFAULT_PARTITIONING} is used.\n\n ",non-directive
"@param creator the information control creator to be used\n",non-directive
" Creates a rule for the given starting sequence\n which, if detected, will return the specified token.\n\n ",non-directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param token the token to be returned on success\n",non-directive
" Creates a rule for the given starting sequence\n which, if detected, will return the specified token.\n ",non-directive
"Any character which follows the given escape character\n will be ignored.\n\n ",non-directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param token the token to be returned on success\n ",non-directive
"@param escapeCharacter the escape character\n",non-directive
" Sets a column constraint for this rule. ",non-directive
"If set, the rule's token\n will only be returned if the pattern is detected starting at the\n specified column. ",non-directive
"If the column is smaller then 0, the column\n constraint is considered removed.\n\n ",non-directive
"@param column the column in which the pattern starts\n",non-directive
" Return a data attached to this token. ",non-directive
"The semantics of this data kept undefined by this interface.\n\n ",non-directive
"@return the data attached to this token.\n",non-directive
" Sets a column constraint for this rule. ",non-directive
"If set, the rule's token\n will only be returned if the pattern is detected starting at the\n specified column. ",non-directive
"If the column is smaller then 0, the column\n constraint is considered removed.\n\n ",non-directive
"@param column the column in which the pattern starts\n",non-directive
" Evaluates this rules without considering any column constraints. ",non-directive
"Resumes\n detection, i.e. ",non-directive
"look sonly for the end sequence required by this rule if the\n <code>resume</code> flag is set.\n\n ",non-directive
"@param scanner the character scanner to be used\n ",non-directive
"@param resume <code>true</code> if detection should be resumed, <code>false</code> otherwise\n ",non-directive
"@return the token resulting from this evaluation\n ",non-directive
"@since 2.0\n",non-directive
" Creates a rule for the given starting and ending sequence.\n ",non-directive
"When these sequences are detected the rule will return the specified token.\n ",non-directive
"Alternatively, the sequence can also be ended by the end of the line or the end of the file.\n ",non-directive
"Any character which follows the given escapeCharacter will be ignored.\n\n ",non-directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param endSequence the pattern's end sequence, <code>null</code> is a legal value\n ",non-directive
"@param token the token which will be returned on success\n ",non-directive
"@param escapeCharacter any character following this one will be ignored\n ",non-directive
"@param breaksOnEOL indicates whether the end of the line also terminates the pattern\n ",non-directive
"@param breaksOnEOF indicates whether the end of the file also terminates the pattern\n ",non-directive
"@since 2.1\n",non-directive
" Creates a rule for the given starting and ending sequence.\n ",non-directive
"When these sequences are detected the rule will return the specified token.\n ",non-directive
"Alternatively, the sequence can also be ended by the end of the line or the end of the file.\n ",non-directive
"Any character which follows the given escapeCharacter will be ignored. ",non-directive
"An end of line\n immediately after the given <code>lineContinuationCharacter</code> will not cause the\n pattern to terminate even if <code>breakOnEOL</code> is set to true.\n\n ",directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param endSequence the pattern's end sequence, <code>null</code> is a legal value\n ",non-directive
"@param token the token which will be returned on success\n ",non-directive
"@param escapeCharacter any character following this one will be ignored\n ",non-directive
"@param breaksOnEOL indicates whether the end of the line also terminates the pattern\n ",non-directive
"@param breaksOnEOF indicates whether the end of the file also terminates the pattern\n ",non-directive
"@param escapeContinuesLine indicates whether the specified escape character is used for line\n        continuation, so that an end of line immediately after the escape character does not\n        terminate the pattern, even if <code>breakOnEOL</code> is set\n ",non-directive
"@since 3.0\n",non-directive
" Creates a new partitioner that uses the given scanner and may return\n partitions of the given legal content types.\n\n ",non-directive
"@param scanner the scanner this partitioner is supposed to use\n ",non-directive
"@param legalContentTypes the legal content types of this partitioner\n",non-directive
" Adds a word and the token to be returned if it is detected.\n\n ",non-directive
"@param word the word this rule will search for, may not be <code>null</code>\n ",non-directive
"@param token the token to be returned if the word has been found, may not be <code>null</code>\n",non-directive
" Creates a rule which, with the help of an word detector, will return the token\n associated with the detected word. ",non-directive
"If no token has been associated, the scanner\n will be rolled back and an undefined token will be returned in order to allow\n any subsequent rules to analyze the characters.\n\n ",non-directive
"@param detector the word detector to be used by this rule, may not be <code>null</code>\n ",non-directive
"@see #addWord(String, IToken)\n",non-directive
" Creates a rule which, with the help of a word detector, will return the token\n associated with the detected word. ",non-directive
"If no token has been associated, the\n specified default token will be returned.\n\n ",non-directive
"@param detector the word detector to be used by this rule, may not be <code>null</code>\n ",non-directive
"@param defaultToken the default token to be returned on success\n			if nothing else is specified, may not be <code>null</code>\n ",non-directive
"@param ignoreCase the case sensitivity associated with this rule\n ",non-directive
"@see #addWord(String, IToken)\n ",non-directive
"@since 3.3\n",non-directive
" Creates a rule for the given starting and ending word\n pattern which, if detected, will return the specified token.\n ",non-directive
"A word detector is used to identify words.\n\n ",non-directive
"@param detector the word detector to be used\n ",non-directive
"@param startSequence the start sequence of the word pattern\n ",non-directive
"@param endSequence the end sequence of the word pattern\n ",non-directive
"@param token the token to be returned on success\n",non-directive
" Creates a rule for the given starting and ending sequence\n which, if detected, will return the specified token.\n\n ",non-directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param endSequence the pattern's end sequence\n ",non-directive
"@param token the token to be returned on success\n",non-directive
" Creates a rule for the given starting and ending sequence\n which, if detected, will return the specific token. ",non-directive
"Any character that follows the\n given escape character will be ignored. ",non-directive
"<code>breakOnEOF</code> indicates whether\n EOF is equivalent to detecting the <code>endSequence</code>.\n\n ",non-directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param endSequence the pattern's end sequence\n ",non-directive
"@param token the token to be returned on success\n ",non-directive
"@param escapeCharacter the escape character\n ",non-directive
"@param breaksOnEOF indicates whether the end of the file terminates this rule successfully\n ",non-directive
"@since 2.1\n",non-directive
" Returns whether the given type is one of the legal content types.\n\n ",non-directive
"@param contentType the content type to check\n ",non-directive
"@return <code>true</code> if the content type is a legal content type\n",non-directive
" Creates a rule for the given starting and ending sequence\n which, if detected, will return the specified token. ",non-directive
"Alternatively, the\n line can also be ended with the end of the file.\n ",non-directive
"Any character which follows the given escape character\n will be ignored. ",non-directive
"In addition, an escape character immediately before an\n end of line can be set to continue the line.\n\n ",non-directive
"@param startSequence the pattern's start sequence\n ",non-directive
"@param endSequence the pattern's end sequence\n ",non-directive
"@param token the token to be returned on success\n ",non-directive
"@param escapeCharacter the escape character\n ",non-directive
"@param breaksOnEOF indicates whether the end of the file successfully terminates this rule\n ",non-directive
"@param escapeContinuesLine indicates whether the specified escape character is used for line\n        continuation, so that an end of line immediately after the escape character does not\n        terminate the line, even if <code>breakOnEOL</code> is true\n ",non-directive
"@since 3.0\n",non-directive
" Creates a damager/repairer that uses the given scanner and returns the given default\n text attribute if the current token does not carry a text attribute.\n\n ",non-directive
"@param scanner the token scanner to be used\n ",non-directive
"@param defaultTextAttribute the text attribute to be returned if non is specified by the current token,\n 			may not be <code>null</code>\n\n ",non-directive
"@deprecated use DefaultDamagerRepairer(ITokenScanner) instead\n",non-directive
" Retrieves the property <code>key</code> from the formatting context\n\n ",non-directive
"@param key the key of the property to store in the context\n ",non-directive
"@return the property <code>key</code> if available, <code>null</code> otherwise\n",non-directive
" Retrieves the preferences from a preference store in a map.\n ",non-directive
"<p>\n Note that the preference keys returned by {@link #getPreferenceKeys()} must not be used in\n the map. ",directive
"Otherwise the preferences are overwritten.\n ",non-directive
"</p>\n\n ",non-directive
"@param store Preference store to retrieve the preferences from\n ",non-directive
"@param map Map to store the preferences in\n ",non-directive
"@param useDefault <code>true</code> if the default preferences should be used,\n            <code>false</code> otherwise\n",non-directive
" Formats the document specified in the formatting context with the\n formatting strategy registered for the content type.\n ",non-directive
"<p>\n For this formatting type only slave strategies are used. ",non-directive
"The region to be\n formatted is aligned on partition boundaries of the underlying content\n type. ",non-directive
"The exact formatting strategy is determined by the underlying\n content type of the document partitioning.\n\n ",non-directive
"@param context The formatting context to use\n ",non-directive
"@param document The document to operate on\n ",non-directive
"@param offset The offset of the region to format\n ",non-directive
"@param length The length of the region to format\n ",non-directive
"@param type The content type of the region to format\n",non-directive
" Registers a strategy for a particular content type. ",non-directive
"If there is already a strategy\n registered for this type, the new strategy is registered instead of the old one.\n ",non-directive
"If the given content type is <code>null</code> the given strategy is registered for\n all content types as is called only once per formatting session.\n\n ",non-directive
"@param strategy the formatting strategy to register, or <code>null</code> to remove an existing one\n ",non-directive
"@param contentType the content type under which to register\n",non-directive
" Updates all the overlapping positions. ",non-directive
"Note, all other positions are\n automatically updated by their document position updaters.\n\n ",directive
"@param document the document to has been formatted\n ",non-directive
"@param positions the adapted character positions to be used to update the document positions\n ",non-directive
"@param offset the offset of the document region that has been formatted\n",non-directive
" Returns the presentation damager registered with this presentation reconciler\n for the specified content type.\n\n ",non-directive
"@param contentType the content type for which to determine the damager\n ",non-directive
"@return the presentation damager registered for the given content type, or\n		<code>null</code> if there is no damager\n",non-directive
" Returns the presentation repairer registered with this presentation reconciler\n for the specified content type.\n\n ",non-directive
"@param contentType the content type for which to determine the repairer\n ",non-directive
"@return the presentation repairer registered for the given content type, or\n		<code>null</code> if there is no repairer\n",non-directive
" Creates a new presentation reconciler. ",non-directive
"There are no damagers or repairers\n registered with this reconciler by default. ",non-directive
"The default partitioning\n <code>IDocumentExtension3.DEFAULT_PARTITIONING</code> is used.\n",non-directive
" Creates an annotation hover manager with the given parameters. ",non-directive
"In addition,\n the hovers anchor is RIGHT and the margin is 5 points to the right.\n\n ",non-directive
"@param sourceViewer the source viewer this manager connects to\n ",non-directive
"@param ruler the vertical ruler this manager connects to\n ",non-directive
"@param annotationHover the annotation hover providing the information to be displayed\n ",non-directive
"@param creator the information control creator\n ",non-directive
"@deprecated As of 2.1, replaced by {@link AnnotationBarHoverManager#AnnotationBarHoverManager(IVerticalRulerInfo, ISourceViewer, IAnnotationHover, IInformationControlCreator)}\n",directive
" Creates an annotation hover manager with the given parameters. ",non-directive
"In addition,\n the hovers anchor is RIGHT and the margin is 5 points to the right.\n\n ",non-directive
"@param rulerInfo the vertical ruler this manager connects to\n ",non-directive
"@param sourceViewer the source viewer this manager connects to\n ",non-directive
"@param annotationHover the annotation hover providing the information to be displayed or <code>null</code> if none\n ",non-directive
"@param creator the information control creator\n ",non-directive
"@since 2.1\n",non-directive
" Clears this pair matcher. ",non-directive
"I.e. ",non-directive
"the matcher throws away all state it might\n remember and prepares itself for a new call of the <code>match</code>\n method.\n",non-directive
" Returns the anchor for the region of the matching peer characters. ",non-directive
"The anchor\n says whether the character that has been chosen to search for its peer character\n has been left or right of the initial offset.\n\n ",non-directive
"@return <code>RIGHT</code> or <code>LEFT</code>\n",non-directive
" Creates a new line range with the given specification.\n\n ",non-directive
"@param startLine the start line\n ",non-directive
"@param numberOfLines the number of lines\n",non-directive
" Sets the background color for normal lines. ",non-directive
"The color has to be disposed of by the caller when\n the receiver is no longer used.\n\n ",directive
"@param backgroundColor the new color to be used as standard line background\n",non-directive
" Sets the background color for changed lines. ",non-directive
"The color has to be disposed of by the caller when\n the receiver is no longer used.\n\n ",directive
"@param changedColor the new color to be used for the changed lines background\n",non-directive
" Sets the drawing layer for the given annotation type in this overview ruler.\n\n ",non-directive
"@param annotationType the annotation type\n ",non-directive
"@param layer the drawing layer\n",non-directive
" Removes the given annotation type from this overview ruler. ",non-directive
"Annotations\n of the given type are no longer shown in the overview ruler.\n\n ",non-directive
"@param annotationType the annotation type\n",non-directive
" Computes the block of lines which form a contiguous block of changes covering <code>line</code>.\n\n ",non-directive
"@param viewer the source viewer showing\n ",non-directive
"@param line the line which a hover is displayed for\n ",non-directive
"@param min the first line in <code>viewer</code>'s document to consider\n ",non-directive
"@param max the last line in <code>viewer</code>'s document to consider\n ",non-directive
"@return the selection in the document displayed in <code>viewer</code> containing <code>line</code>\n that is covered by the hover information returned by the receiver.\n",non-directive
" Sets the given document as this viewer's text model and the\n given annotation model as the model for this viewer's visual\n annotations. ",non-directive
"The presentation is accordingly updated whereby\n only the specified region is exposed. ",non-directive
"An appropriate\n <code>TextEvent</code> is issued. ",non-directive
"The text event does not carry a\n related document event. ",non-directive
"This method is a convenience method for\n <code>setDocument(document, annotationModel);setVisibleRegion(offset, length)</code>.\n\n ",directive
"@param document the new input document\n ",non-directive
"@param annotationModel the model of the viewer's visual annotations\n ",non-directive
"@param modelRangeOffset the offset of the model range\n ",non-directive
"@param modelRangeLength the length of the model range\n\n ",non-directive
"@see ITextViewer#setDocument(IDocument, int, int)\n",non-directive
" Sets the annotation used by this viewer as range indicator. ",non-directive
"The\n range covered by this annotation is referred to as range indication.\n\n ",non-directive
"@param rangeIndicator the annotation to be used as this viewer's range indicator\n",non-directive
" Returns the line of the viewer's document that corresponds to the given widget line.\n\n ",non-directive
"@param viewer the viewer\n ",non-directive
"@param widgetLine the widget line\n ",non-directive
"@return the corresponding line of the viewer's document\n ",non-directive
"@since 2.1\n",non-directive
" Removes the given mouse listener.\n\n ",non-directive
"@param listener the listener to be removed\n ",non-directive
"@deprecated will be removed\n ",non-directive
"@since 2.0\n",non-directive
" Returns the line number of the last mouse button activity.\n ",non-directive
"Based on the input document of the connected text viewer.\n\n ",non-directive
"@return the line number of the last mouse button activity or <code>-1</code> if\n 			the last mouse activity does not correspond to a valid document line\n",non-directive
" Adds the given annotation type to the list of annotation types whose\n annotations should be painted by this painter using squiggly drawing. ",non-directive
"If the annotation  type\n is already in this list, this method is without effect.\n\n ",directive
"@param annotationType the annotation type\n",non-directive
" Retrieves the annotation model from the given source viewer.\n\n ",non-directive
"@param sourceViewer the source viewer\n ",non-directive
"@return the source viewer's annotation model or <code>null</code> if none can be found\n ",non-directive
"@since 3.0\n",non-directive
" Draws a decoration for an annotation onto the specified GC at the given text range. ",non-directive
"There\n are two different invocation modes of the <code>draw</code> method:\n \n ",non-directive
"--  <strong>drawing mode:</strong> the passed GC is the graphics context of a paint\n event occurring on the text widget. ",non-directive
"The strategy should draw the decoration onto the\n graphics context, such that the decoration appears at the given range in the text\n widget.\n ",directive
"--  <strong>clearing mode:</strong> the passed GC is <code>null</code>. ",non-directive
"In this case\n the strategy must invalidate enough of the text widget's client area to cover any\n decoration drawn in drawing mode. ",directive
"This can usually be accomplished by calling\n {@linkplain StyledText#redrawRange(int, int, boolean) textWidget.redrawRange(offset, length, true)}.\n \n\n ",directive
"@param annotation the annotation to be drawn\n ",non-directive
"@param gc the graphics context, <code>null</code> when in clearing mode\n ",non-directive
"@param textWidget the text widget to draw on\n ",non-directive
"@param offset the offset of the line\n ",non-directive
"@param length the length of the line\n ",non-directive
"@param color the color of the line\n",non-directive
" Returns the text inset for text drawn by {@link #paintLine(GC, int, int, int, int)}. ",non-directive
"The\n <code>DEFAULT_TEXT_INSET</code> constant specifies the default inset in pixels.\n\n ",non-directive
"@return the text inset for text\n",non-directive
" Returns the background color. ",non-directive
"May return <code>null</code> if the system is shutting down.\n\n ",non-directive
"@return the background color\n",non-directive
" Creates a new default annotation hover.\n\n ",non-directive
"@param showLineNumber <code>true</code> if the line number should be shown when no annotation is found\n ",non-directive
"@since 3.4\n",non-directive
" Returns <code>true</code> if the ruler is showing line numbers, <code>false</code>\n otherwise\n\n ",non-directive
"@return <code>true</code> if line numbers are shown, <code>false</code> otherwise\n ",non-directive
"@since 3.3\n",non-directive
" Returns <code>true</code> if the ruler is showing revision information, <code>false</code>\n otherwise\n\n ",non-directive
"@return <code>true</code> if revision information is shown, <code>false</code> otherwise\n ",non-directive
"@since 3.3\n",non-directive
" Creates a new revision ruler column.\n\n ",non-directive
"@param sharedColors the colors to look up RGBs\n ",non-directive
"@since 3.2\n",non-directive
" Draws an image aligned inside the given rectangle on the given canvas.\n\n ",non-directive
"@param image the image to be drawn\n ",non-directive
"@param gc the drawing GC\n ",non-directive
"@param canvas the canvas on which to draw\n ",non-directive
"@param r the clipping rectangle\n ",non-directive
"@param align the alignment of the image to be drawn\n",non-directive
" Hook method for a mouse click event on the given ruler line.\n ",non-directive
"<p>\n <strong>Note:</strong> The event is sent on mouse up.\n ",directive
"</p>\n \n ",non-directive
"@param rulerLine the ruler line\n ",non-directive
"@since 3.0\n",non-directive
" Adds the given annotation type to this annotation ruler column. ",non-directive
"Starting\n with this call, annotations of the given type are shown in this annotation\n ruler column.\n\n ",non-directive
"@param annotationType the annotation type\n ",non-directive
"@since 3.0\n",non-directive
" Constructs this column with the given arguments.\n\n ",non-directive
"@param model the annotation model to get the annotations from\n ",non-directive
"@param width the width of the vertical ruler\n ",non-directive
"@param annotationAccess the annotation access\n ",non-directive
"@since 3.0\n",non-directive
" Constructs this column with the given arguments.\n\n ",non-directive
"@param width the width of the vertical ruler\n ",non-directive
"@param annotationAccess the annotation access\n ",non-directive
"@since 3.0\n",non-directive
" Constructs this column with the given arguments.\n\n ",non-directive
"@param model the annotation model to get the annotations from\n ",non-directive
"@param width the width of the vertical ruler\n",non-directive
" Returns the foreground color being used to print the line numbers.\n\n ",non-directive
"@return the configured foreground color\n ",non-directive
"@since 3.0\n",non-directive
" Computes the number of digits to be displayed. ",non-directive
"Returns\n <code>true</code> if the number of digits changed compared\n to the previous call of this method. ",non-directive
"If the method is called\n for the first time, the return value is also <code>true</code>.\n\n ",non-directive
"@return whether the number of digits has been changed\n ",non-directive
"@since 3.0\n",non-directive
" Returns the view port height in lines.\n\n ",non-directive
"@return the view port height in lines\n ",non-directive
"@deprecated as of 3.2 the number of lines in the viewport cannot be computed because\n             StyledText supports variable line heights\n",non-directive
" Constructs a overview ruler of the given width using the given annotation\n access and the given color manager.\n\n ",non-directive
"@param annotationAccess the annotation access\n ",non-directive
"@param width the width of the vertical ruler\n ",non-directive
"@param sharedColors the color manager\n ",non-directive
"@param discolorTemporaryAnnotation <code>true</code> if temporary annotations should be discolored\n ",non-directive
"@since 3.4\n",non-directive
" Returns the range of lines that include the given line number for which\n the same hover information is valid.\n\n ",non-directive
"@param viewer the viewer which the hover is queried for\n ",non-directive
"@param lineNumber the line number of the line for which a hover is displayed for\n ",non-directive
"@return the computed line range or <code>null</code> for no range\n",non-directive
" Fires the annotation selected event to all registered vertical ruler\n listeners.\n ",non-directive
"TODO use robust iterators\n\n ",non-directive
"@param event the event to fire\n ",non-directive
"@since 3.0\n",non-directive
" Removes a previously registered listener. ",non-directive
"If <code>listener</code> is not registered\n with the receiver, calling this method has no effect.\n\n ",directive
"@param listener the listener to be removed\n",non-directive
" Associates an annotation model with this ruler column.\n ",non-directive
"A value <code>null</code> is acceptable and clears the ruler.\n\n ",non-directive
"@param model the new annotation model, may be <code>null</code>\n",non-directive
" Returns the auto indentation strategy ready to be used with the given source viewer\n when manipulating text of the given content type. ",non-directive
"This implementation always\n returns an new instance of <code>DefaultAutoIndentStrategy</code>.\n\n ",non-directive
"@param sourceViewer the source viewer to be configured by this configuration\n ",non-directive
"@param contentType the content type for which the strategy is applicable\n ",non-directive
"@return the auto indent strategy or <code>null</code> if automatic indentation is not to be enabled\n ",non-directive
"@deprecated since 3.1 use {@link #getAutoEditStrategies(ISourceViewer, String)} instead\n",directive
" Returns the annotation hover which will provide the information to be\n shown in a hover popup window when requested for the given\n source viewer. ",non-directive
"This implementation always returns <code>null</code>.\n\n ",directive
"@param sourceViewer the source viewer to be configured by this configuration\n ",non-directive
"@return an annotation hover or <code>null</code> if no hover support should be installed\n",non-directive
" Returns the configured partitioning for the given source viewer. ",non-directive
"The partitioning is\n used when the querying content types from the source viewer's input document.  ",non-directive
"This\n implementation always returns <code>IDocumentExtension3.DEFAULT_PARTITIONING</code>.\n\n ",directive
"@param sourceViewer the source viewer to be configured by this configuration\n ",non-directive
"@return the configured partitioning\n ",non-directive
"@see #getConfiguredContentTypes(ISourceViewer)\n ",non-directive
"@since 3.0\n",non-directive
" Returns the label for the given annotation's type.\n\n ",non-directive
"@param annotation the annotation\n ",non-directive
"@return the label the given annotation's type or <code>null</code> if no such label exists\n",non-directive
" Draws a graphical representation of the given annotation within the given bounds.\n ",non-directive
"<p>\n <em>Note that this method is not used when drawing annotations on the editor's\n text widget. ",directive
"This is handled trough a {@link org.eclipse.jface.text.source.AnnotationPainter.IDrawingStrategy}.</em>\n </p>\n ",non-directive
"@param annotation the given annotation\n ",non-directive
"@param gc the drawing GC\n ",non-directive
"@param canvas the canvas to draw on\n ",non-directive
"@param bounds the bounds inside the canvas to draw on\n",non-directive
" Registers a given quick assist processor for a particular content type. ",non-directive
"If there is already\n a processor registered, the new processor is registered instead of the old one.\n\n ",non-directive
"@param processor the quick assist processor to register, or <code>null</code> to remove\n        an existing one\n",non-directive
" Returns a list of quick assist and quick fix proposals for the\n given invocation context.\n\n ",non-directive
"@param invocationContext the invocation context\n ",non-directive
"@return an array of completion proposals or <code>null</code> if no proposals are available\n",non-directive
" Returns the handler for the given command identifier.\n ",non-directive
"<p>\n The same handler instance will be returned when called a more than once\n with the same command identifier.\n ",non-directive
"</p>\n\n ",non-directive
"@param commandId the command identifier\n ",non-directive
"@return the handler for the given command identifier\n ",non-directive
" Enables the support for colored labels in the proposal popup.\n ",non-directive
"<p>Completion proposals can implement {@link ICompletionProposalExtension6}\n to provide colored proposal labels.</p>\n\n ",non-directive
"@param isEnabled if <code>true</code> the support for colored labels is enabled in the proposal popup\n ",non-directive
"@since 3.4\n",non-directive
" Fills the given composite control with controls representing this \n contribution item.  ",non-directive
"Used by <code>StatusLineManager</code>.\n\n ",non-directive
"@param parent the parent control\n",non-directive
" Returns whether this contribution item is dynamic. ",non-directive
"A dynamic contribution\n item contributes items conditionally, dependent on some internal state.\n\n ",non-directive
"@return <code>true</code> if this item is dynamic, and\n  <code>false</code> for normal items\n",non-directive
" Returns whether this contribution item is a group marker.\n ",non-directive
"This information is used when adding items to a group.\n\n ",non-directive
"@return <code>true</code> if this item is a group marker, and\n  <code>false</code> for normal items\n\n ",non-directive
"@see GroupMarker\n ",non-directive
"@see IContributionManager#appendToGroup(String, IContributionItem)\n ",non-directive
"@see IContributionManager#prependToGroup(String, IContributionItem)\n",non-directive
" Returns whether this contribution item is a separator.\n ",non-directive
"This information is used to enable hiding of unnecessary separators.\n\n ",non-directive
"@return <code>true</code> if this item is a separator, and\n  <code>false</code> for normal items\n ",non-directive
"@see Separator\n",non-directive
" Updates any SWT controls cached by this contribution item with changes\n for the the given property. \n \n",non-directive
"@param id the id of the changed property\n ",non-directive
"@since 2.0\n",non-directive
" Sets the overrides for this contribution manager\n \n ",non-directive
"@param newOverrides the overrides for the items of this manager\n ",non-directive
"@since 2.0\n",non-directive
" Replaces the current items with the given items.\n ",non-directive
"Forces an update.\n \n",non-directive
"@param newItems the items with which to replace the current items\n",non-directive
" Converts an accelerator key code to a string representation.\n \n",non-directive
"@param keyCode\n            the key code to be translated\n ",non-directive
"@return a string representation of the key code\n",non-directive
" Maps a standard keyboard key name to an SWT key code. ",non-directive
"Key names are\n converted to upper case before comparison. ",non-directive
"If the key name is a single\n letter, for example \"S\", its character code is returned.\n ",non-directive
"<p>\n The following key names are known (case is ignored):\n \n ",non-directive
"--  <code>\"BACKSPACE\"</code>\n ",non-directive
"--  <code>\"TAB\"</code>\n ",non-directive
"--  <code>\"RETURN\"</code>\n ",non-directive
"--  <code>\"ENTER\"</code>\n ",non-directive
"--  <code>\"ESC\"</code>\n ",non-directive
"--  <code>\"ESCAPE\"</code>\n ",non-directive
"--  <code>\"DELETE\"</code>\n ",non-directive
"--  <code>\"SPACE\"</code>\n ",non-directive
"--  <code>\"ARROW_UP\"</code>, <code>\"ARROW_DOWN\"</code>,\n <code>\"ARROW_LEFT\"</code>, and <code>\"ARROW_RIGHT\"</code>\n ",non-directive
"--  <code>\"PAGE_UP\"</code> and <code>\"PAGE_DOWN\"</code>\n ",non-directive
"--  <code>\"HOME\"</code>\n ",non-directive
"--  <code>\"END\"</code>\n ",non-directive
"--  <code>\"INSERT\"</code>\n ",non-directive
"--  <code>\"F1\"</code>, <code>\"F2\"</code> through <code>\"F12\"</code>\n \n ",non-directive
"</p>\n \n ",non-directive
"@param token\n            the key name\n ",non-directive
"@return the SWT key code, <code>-1</code> if no match was found\n ",non-directive
"@see SWT\n",non-directive
" Maps an SWT key code to a standard keyboard key name. ",non-directive
"The key code is\n stripped of modifiers (SWT.CTRL, SWT.ALT, SWT.SHIFT, and SWT.COMMAND). ",non-directive
"If\n the key code is not an SWT code (for example if it a key code for the key\n 'S'), a string containing a character representation of the key code is\n returned.\n \n",non-directive
"@param keyCode\n            the key code to be translated\n ",non-directive
"@return the string representation of the key code\n ",non-directive
"@see SWT\n ",non-directive
"@since 2.0\n",non-directive
" Returns a string representation of an SWT modifier bit (SWT.CTRL,\n SWT.ALT, SWT.SHIFT, and SWT.COMMAND). ",non-directive
"Returns <code>null</code> if the\n key code is not an SWT modifier bit.\n \n",non-directive
"@param keyCode\n            the SWT modifier bit to be translated\n ",non-directive
"@return the string representation of the SWT modifier bit, or\n         <code>null</code> if the key code was not an SWT modifier bit\n ",non-directive
"@see SWT\n",non-directive
" Convenience method for removing any mnemonics from the given string. ",non-directive
"For\n example, <code>removeMnemonics(\"&Open\")</code> will return\n <code>\"Open\"</code>.\n \n",non-directive
"@param text\n            the text\n ",non-directive
"@return the text sans mnemonics\n",non-directive
" Re-lays out the tool bar.\n ",non-directive
"<p>\n The default implementation of this framework method re-lays out the\n parent when the number of items are different and the new count != 0\n \n ",non-directive
"@param layoutBar\n            the tool bar control\n ",non-directive
"@param oldCount\n            the old number of items\n ",non-directive
"@param newCount\n            the new number of items\n",non-directive
" Returns the context menu manager for this tool bar manager.\n \n",non-directive
"@return the context menu manager, or <code>null</code> if none\n ",non-directive
"@since 3.0\n",non-directive
" Sets the context menu manager for this tool bar manager to the given menu\n manager. ",non-directive
"If the tool bar control exists, it also adds the menu control to\n the tool bar.\n \n",non-directive
"@param contextMenuManager\n            the context menu manager, or <code>null</code> if none\n ",non-directive
"@since 3.0\n",non-directive
" Creates a tool bar manager with the given SWT button style. ",non-directive
"Use the\n <code>createControl</code> method to create the tool bar control.\n \n",non-directive
"@param style\n            the tool bar item style\n ",non-directive
"@see org.eclipse.swt.widgets.ToolBar for valid style bits\n",non-directive
" Inserts a contribution item after the item with the given id.\n\n ",non-directive
"@param id the contribution item id\n ",non-directive
"@param item the contribution item to insert\n ",non-directive
" Adds a contribution item for the given action at the beginning of the \n group with the given name.\n ",non-directive
"Equivalent to\n <code>prependToGroup(groupName,new ActionContributionItem(action))</code>.\n\n ",non-directive
"@param groupName the name of the group\n ",non-directive
"@param action the action\n ",non-directive
" Creates a new separator which also defines a new group having the given group name.\n ",non-directive
"The group name must not be <code>null</code> or the empty string.\n ",directive
"The group name is also used as the item id.\n \n",non-directive
"@param groupName the group name of the separator\n",non-directive
" Returns whether this contribution manager contains dynamic items. ",non-directive
"A\n dynamic contribution item contributes items conditionally, dependent on\n some internal state.\n \n",non-directive
"@return <code>true</code> if this manager contains dynamic items, and\n         <code>false</code> otherwise\n",non-directive
" Returns the index of the item with the given id.\n \n",non-directive
"@param id\n            The id of the item whose index is requested.\n \n",non-directive
"@return <code>int</code> the index or -1 if the item is not found\n",non-directive
" Finds the manager for the menu at the given path. ",non-directive
"A path\n consists of contribution item ids separated by the separator \n character.  ",non-directive
"The path separator character is <code>'/'</code>.\n ",non-directive
"<p>\n Convenience for <code>findUsingPath(path)</code> which\n extracts an <code>IMenuManager</code> if possible.\n ",non-directive
"</p>\n\n ",non-directive
"@param path the path string\n ",non-directive
"@return the menu contribution item, or <code>null</code>\n   if there is no such contribution item or if the item does\n   not have an associated menu manager\n",non-directive
" Returns the action's description if it has one.\n ",non-directive
"Otherwise it returns <code>getToolTipText()</code>.\n \n",non-directive
"@return a description for the action; may be <code>null</code> \n",non-directive
" Returns the hover image for this action as an image descriptor.\n ",non-directive
"<p>\n Hover images will be used on platforms that support changing the image\n when the user hovers over the item. ",non-directive
"This method is associated with \n the <code>IMAGE</code> property;\n property change events are reported when its value changes.\n ",non-directive
"</p>\n\n ",non-directive
"@return the image, or <code>null</code> if this action has no image\n ",non-directive
"@see #IMAGE\n",non-directive
" Returns the image for this action as an image descriptor.\n ",non-directive
"<p>\n This method is associated with the <code>IMAGE</code> property;\n property change events are reported when its value changes.\n ",non-directive
"</p>\n\n ",non-directive
"@return the image, or <code>null</code> if this action has no image\n ",non-directive
"@see #IMAGE\n",non-directive
" Returns whether this action is handled. ",non-directive
"In the default case, this is\n always <code>true</code>. ",non-directive
"However, if the action delegates some of its\n behaviour to some other object, then this method should answer whether\n such an object is currently available.\n \n",directive
"@return <code>true</code> if all of the action's behaviour is\n         available; <code>false</code> otherwise.\n ",non-directive
"@since 3.1\n",non-directive
" Runs this action, passing the triggering SWT event.\n ",non-directive
"As of 2.0, <code>ActionContributionItem</code> calls this method\n instead of <code>run()</code>.  \n ",directive
"The default implementation of this method in <code>Action</code>\n simply calls <code>run()</code> for backwards compatibility.\n \n",directive
"@param event the SWT event which triggered this action being run \n ",non-directive
"@since 2.0\n",non-directive
" Sets the checked status of this action. ",non-directive
"Applicable for the styles\n <code>AS_CHECK_BOX</code> or <code>AS_RADIO_BUTTON</code>.\n ",non-directive
"<p>\n Fires a property change event for the <code>CHECKED</code> property\n if the checked status actually changes as a consequence.\n ",non-directive
"</p>\n\n ",non-directive
"@param checked the new checked status\n ",non-directive
"@see #CHECKED\n",non-directive
" Sets this action's description.\n ",non-directive
"Typically the description is shown as a (longer) help text in the status line.\n ",non-directive
"<p>\n Fires a property change event for the <code>DESCRIPTION</code> property\n if the description actually changes as a consequence.\n ",non-directive
"</p>\n\n ",non-directive
"@param text the description, or <code>null</code> to clear the description\n ",non-directive
"@see #DESCRIPTION\n",non-directive
" Sets the hover image for this action, as an image descriptor.\n ",non-directive
"<p>\n Hover images will be used on platforms that support changing the image\n when the user hovers over the item.Fires a property change event for \n the <code>IMAGE</code> property\n if the image actually changes as a consequence.\n ",non-directive
"</p>\n\n ",non-directive
"@param newImage the image, or <code>null</code> if this \n   action should not have an image\n ",non-directive
"@see #IMAGE\n",non-directive
" Sets the menu creator for this action. ",non-directive
"Applicable for style\n <code>AS_DROP_DOWN_MENU</code>.\n\n ",non-directive
"@param creator the menu creator, or <code>null</code> if none\n",non-directive
" Sets the tool tip text for this action.\n ",non-directive
"<p>\n Fires a property change event for the <code>TOOL_TIP_TEXT</code> property\n if the tool tip text actually changes as a consequence.\n ",non-directive
"</p>\n\n ",non-directive
"@param text the tool tip text, or <code>null</code> if none\n ",non-directive
"@see #TOOL_TIP_TEXT\n",non-directive
" Constructs a new manager.\n\n ",non-directive
"@param mgr the parent manager.  ",non-directive
"All contributions made to the \n      <code>SubCoolBarManager</code> are forwarded and appear in the\n      parent manager.\n",non-directive
" Maps an SWT key code to a standard keyboard key name. ",non-directive
"The key code is\n stripped of modifiers (SWT.CTRL, SWT.ALT, SWT.SHIFT, and SWT.COMMAND). ",non-directive
"If\n the key code is not an SWT code (for example if it a key code for the key\n 'S'), a string containing a character representation of the key code is\n returned.\n \n",non-directive
"@param keyCode\n            the key code to be translated\n ",non-directive
"@return the string representation of the key code\n ",non-directive
"@see org.eclipse.swt.SWT\n ",non-directive
"@since 2.0\n",non-directive
" Reports the outcome of the running of this action via the\n {@link IAction#RESULT} property.\n \n",non-directive
"@param success\n            <code>true</code> if the action succeeded and\n            <code>false</code> if the action failed or was not completed\n ",non-directive
"@see IAction#RESULT\n ",non-directive
"@since 3.0\n",non-directive
" Sets the menu creator for this action.\n ",non-directive
"<p>\n Note that if this method is called, it overrides the check status.\n ",directive
"</p>\n \n ",non-directive
"@param creator\n            the menu creator, or <code>null</code> if none\n",non-directive
" Sets the text for this action.\n ",non-directive
"<p>\n Fires a property change event for the <code>TEXT</code> property if the\n text actually changes as a consequence.\n ",non-directive
"</p>\n <p>\n The accelerator is identified by the last index of a tab character. ",non-directive
"If\n there are no tab characters, then it is identified by the last index of a\n '@' character. ",non-directive
"If neither, then there is no accelerator text. ",non-directive
"Note that\n if you want to insert a '@' character into the text (but no accelerator,\n you can simply insert a '@' or a tab at the end of the text.\n ",directive
"</p>\n \n ",non-directive
"@param text\n            the text, or <code>null</code> if none\n",non-directive
" Checks whether the command with the given identifier should be\n considered active. ",non-directive
"This can be used in systems using some kind of\n user interface filtering (e.g., activities in the Eclipse workbench).\n \n",non-directive
"@param commandId\n            The identifier for the command; must not be\n            <code>null</code>\n ",non-directive
"@return <code>true</code> if the command is active;\n         <code>false</code> otherwise.\n",non-directive
" Fires an execution event before an action is run.\n \n",non-directive
"@param action\n            The action contribution that requires an\n            execution event to be fired. ",non-directive
"Cannot be <code>null</code>.\n ",non-directive
"@param e\n            The SWT Event, may be <code>null</code>.\n \n",non-directive
" Checks whether the item matching this identifier is active. ",non-directive
"This is\n used to decide whether a contribution item with this identifier\n should be made visible. ",non-directive
"An inactive item is not visible.\n \n",non-directive
"@param identifier\n            The identifier of the item from which the active state\n            should be retrieved; must not be <code>null</code>.\n ",non-directive
"@return <code>true</code> if the item is active; <code>false</code>\n         otherwise.\n",non-directive
" Removes a listener from the object referenced by\n <code>identifier</code>. ",non-directive
"This identifier is specific to mechanism\n being used. ",non-directive
"In the case of the Eclipse workbench, this is the command\n identifier.\n \n",non-directive
"@param identifier\n            The identifier of the item to from the listener should be\n            removed; must not be <code>null</code>.\n ",non-directive
"@param listener\n            The listener to be removed; must not be <code>null</code>.\n",non-directive
" Creates a contribution item with the given (optional) id.\n ",non-directive
"The given id is used to find items in a contribution manager,\n and for positioning items relative to other items.\n\n ",non-directive
"@param id the contribution item identifier, or <code>null</code>\n",non-directive
" Find out the enablement of the item\n ",non-directive
"@param item the contribution item for which the enable override value is \n determined\n ",non-directive
"@return \n 				",non-directive
"--  <code>Boolean.TRUE</code> if the given contribution item should be enabled\n 				",non-directive
"--  <code>Boolean.FALSE</code> if the item should be disabled\n 				",non-directive
"--  <code>null</code> if the item may determine its own enablement\n 			\n ",non-directive
"@since 2.0 \n",non-directive
" Returns the menu wrapper for a menu manager.\n ",non-directive
"<p>\n The sub menus within this menu are wrapped within a <code>SubMenuManager</code> to\n monitor additions and removals.  ",non-directive
"If the visibility of this menu is modified\n the visibility of the sub menus is also modified.\n ",non-directive
"<p>\n ",non-directive
"@param mgr the menu manager to be wrapped\n\n ",non-directive
"@return the menu wrapper\n",non-directive
" Returns a progress monitor which reports progress in the status line.\n ",non-directive
"Note that the returned progress monitor may only be accessed from the UI\n thread.\n \n",directive
"@return the progress monitor\n \n         Note: There is a delay after a beginTask message before the\n         monitor is shown. ",directive
"This may not be appropriate for all apps.\n",directive
" Creates and returns this manager's status line control. \n ",non-directive
"Does not create a new control if one already exists.\n\n ",non-directive
"@param parent the parent control\n ",non-directive
"@param style the style for the control\n ",non-directive
"@return the status line control\n ",non-directive
"@since 3.0\n",non-directive
" Return the widget associated with this contribution item. ",non-directive
"It should not\n be cached, as it can be disposed and re-created by its containing\n ContributionManager, which controls all of the widgets lifecycle methods.\n ",directive
"<p>\n This can be used to set layout data on the widget if appropriate. ",non-directive
"The\n actual type of the widget can be any valid control for this\n ContributionItem's current ContributionManager.\n ",non-directive
"</p>\n \n ",non-directive
"@return the widget, or <code>null</code> depending on the lifecycle.\n ",non-directive
"@since 3.4\n",non-directive
" Creates a new contribution item from the given action. ",non-directive
"The id of the\n action is used as the id of the item.\n \n",non-directive
"@param action\n            the action\n",non-directive
" Sets the visibility of the manager.  ",non-directive
"If the visibility is <code>true</code>\n then each item within the manager appears within the parent manager.\n ",non-directive
"Otherwise, the items are not visible.\n\n ",non-directive
"@param visible the new visibility\n",non-directive
" Constructs a new <code>SubContributionManager</code>\n\n ",non-directive
"@param mgr the parent contribution manager.  ",non-directive
"All contributions made to the\n      <code>SubContributionManager</code> are forwarded and appear in the\n      parent manager.\n",non-directive
" Creates a status line contribution item with the given id that displays\n the given number of characters.\n \n",non-directive
"@param id\n            the contribution item's id, or <code>null</code> if it is to\n            have no id\n ",non-directive
"@param charWidth\n            the number of characters to display\n",non-directive
" The drop data is requested.\n ",non-directive
"Updates the current listener and then forwards the event to it.\n \n",non-directive
"@param event the drag source event\n ",non-directive
"@see DragSourceListener#dragSetData(DragSourceEvent)\n",non-directive
" Returns the time when the selection operation\n this transfer is associated with was started.\n \n",non-directive
"@return the time when the selection operation has started\n \n ",non-directive
"@see org.eclipse.swt.events.TypedEvent#time\n",non-directive
" Asserts that an argument is legal. ",non-directive
"If the given boolean is\n not <code>true</code>, an <code>IllegalArgumentException</code>\n is thrown.\n\n ",non-directive
"@param expression the outcome of the check\n ",non-directive
"@return <code>true</code> if the check passes (does not return\n    if the check fails)\n ",non-directive
" Asserts that the given boolean is <code>true</code>. ",non-directive
"If this\n is not the case, some kind of unchecked exception is thrown.\n\n ",non-directive
"@param expression the outcome of the check\n ",non-directive
"@return <code>true</code> if the check passes (does not return\n    if the check fails)\n",non-directive
" Returns the magnitude of the given 2d vector (represented as a Point)\n  \n ",non-directive
"@param p point representing the 2d vector whose magnitude is being computed\n ",non-directive
"@return the magnitude of the given 2d vector\n ",non-directive
"@since 3.0\n",non-directive
" Returns the dot product of the given vectors (expressed as Points)\n \n ",non-directive
"@param p1 the first vector\n ",non-directive
"@param p2 the second vector\n ",non-directive
"@return the dot product of the two vectors\n ",non-directive
"@since 3.0\n",non-directive
" Returns a new point whose coordinates are the maximum of the coordinates\n of the given points\n ",non-directive
"@param p1 a Point\n ",non-directive
"@param p2 a Point\n ",non-directive
"@return point a new point whose coordinates are the maximum of the coordinates\n ",non-directive
"@since 3.0\n",non-directive
" Returns the point in the center of the given rectangle.\n \n",non-directive
"@param rect rectangle being computed\n ",non-directive
"@return a Point at the center of the given rectangle.\n ",non-directive
"@since 3.0\n",non-directive
" Sets result equal to toCopy\n \n ",non-directive
"@param result object that will be modified\n ",non-directive
"@param toCopy object that will be copied\n ",non-directive
"@since 3.1\n",non-directive
" Adds two points as 2d vectors. ",non-directive
"Returns a new point whose coordinates are\n the sum of the original two points.\n \n",non-directive
"@param point1 the first point (not null)\n ",non-directive
"@param point2 the second point (not null)\n ",non-directive
"@return a new point whose coordinates are the sum of the given points\n ",non-directive
"@since 3.0\n",non-directive
" Returns the x or y coordinates of the given rectangle.\n \n",non-directive
"@param toMeasure rectangle being measured\n ",non-directive
"@param width if true, returns x. ",non-directive
"Otherwise, returns y.\n ",non-directive
"@return the x or y coordinate\n ",non-directive
"@since 3.1\n",non-directive
" Returns the edge of the given rectangle is closest to the given\n point.\n \n",non-directive
"@param boundary rectangle to test\n ",non-directive
"@param toTest point to compare\n ",non-directive
"@return one of SWT.LEFT, SWT.RIGHT, SWT.TOP, or SWT.BOTTOM\n \n ",non-directive
"@since 3.0\n",non-directive
" Returns the x,y position of the given rectangle. ",non-directive
"For normalized rectangles\n (rectangles with positive width and height), this is the upper-left\n corner of the rectangle.\n \n",non-directive
"@param toQuery rectangle to query\n ",non-directive
"@return a Point containing the x,y position of the rectangle\n \n ",non-directive
"@since 3.0\n",non-directive
" Returns a new rectangle with the given position and dimensions, expressed\n as points.\n \n",non-directive
"@param position the (x,y) position of the rectangle\n ",non-directive
"@param size the size of the new rectangle, where (x,y) -> (width, height)\n ",non-directive
"@return a new Rectangle with the given position and size\n \n ",non-directive
"@since 3.0\n",non-directive
" Return the comparator used by JFace to sort strings.\n \n",non-directive
"@return the comparator used by JFace to sort strings\n ",non-directive
"@since 3.2\n",non-directive
" Sets the animator factory used by JFace to create control animator\n instances.\n \n",non-directive
"@param factory\n            the AnimatorFactory to use.\n ",non-directive
"@since 3.2\n ",non-directive
"@deprecated this is no longer in use as of 3.3\n",non-directive
" Log the Exception to the logger.\n \n",non-directive
"@param exception\n ",non-directive
"@since 3.4\n",non-directive
" Configure the columns of the given tree in a keyboard-accessible way,\n using the given shell provider to parent dialogs.\n \n",non-directive
"@param table the table\n ",non-directive
"@param shellProvider a shell provider\n ",non-directive
"@return <code>false</code> if the user canceled, <code>true</code>\n         otherwise\n",non-directive
" Flag to avoid interactive error dialogs during automated testing.\n \n",non-directive
"@param flag\n ",non-directive
"@return true if errors should be ignored\n ",non-directive
"@deprecated use getIgnoreErrors()\n",non-directive
" Returns the safe runnable runner.\n \n",non-directive
"@return the safe runnable runner\n \n ",non-directive
"@since 3.1\n",non-directive
" Verifies that the given object is an instance of the given class.\n \n",non-directive
"@param object\n            The object to check; may be <code>null</code>.\n ",non-directive
"@param c\n            The class which the object should be; must not be\n            <code>null</code>.\n",non-directive
" Provides a hash code for the object -- defending against\n <code>null</code>.\n \n",non-directive
"@param object\n            The object for which a hash code is required.\n ",non-directive
"@return <code>object.hashCode</code> or <code>0</code> if\n         <code>object</code> if <code>null</code>.\n",non-directive
" Provides a translation of a particular key from the resource bundle.\n \n",non-directive
"@param resourceBundle\n            The key to look up in the resource bundle; should not be\n            <code>null</code>.\n ",non-directive
"@param key\n            The key to look up in the resource bundle; should not be\n            <code>null</code>.\n ",non-directive
"@param defaultString\n            The value to return if the resource cannot be found; may be\n            <code>null</code>.\n ",non-directive
"@return The value of the translated resource at <code>key</code>. ",non-directive
"If\n         the key cannot be found, then it is simply the\n         <code>defaultString</code>.\n",non-directive
" Common WS query helper method. \n ",non-directive
"@return <code>true</code> for linux platform\n ",non-directive
"@since 3.5\n",non-directive
" Common WS query helper method. \n ",non-directive
"@return <code>true</code> for carbon platforms\n ",non-directive
"@since 3.5\n",non-directive
" The cursor is moving over the drop target. ",non-directive
"Updates the current listener and \n forwards this event to that listener. ",non-directive
"If no listener can handle the drag \n operation the <code>event.detail</code> field is set to <code>DND.DROP_NONE</code> \n to indicate an invalid drop.\n   \n",non-directive
"@param event the drop target event\n ",non-directive
"@see DropTargetListener#dragOver(DropTargetEvent)\n",non-directive
" Forwards this event to the current listener, if there is one. ",non-directive
"Sets the\n current listener to <code>null</code> afterwards.\n \n",non-directive
"@param event the drop target event\n ",non-directive
"@see DropTargetListener#drop(DropTargetEvent)\n",non-directive
" Return the image shown in the decoration, or <code>null</code> if no\n image is specified.\n \n",non-directive
"@return the image shown in the decoration. ",non-directive
"A return value of\n         <code>null</code> signifies a blank decoration.\n",non-directive
" Removes the listener from the collection of listeners who will be\n notified when the decoration is selected.\n \n",non-directive
"@param listener\n            the listener which should no longer be notified. ",non-directive
"This message\n            has no effect if the listener was not previously added to the\n            receiver.\n \n",directive
"@see org.eclipse.swt.events.SelectionListener\n ",non-directive
"@see #addSelectionListener\n",non-directive
" Get the control that is decorated by the receiver.\n \n",non-directive
"@return the Control decorated by the receiver. ",non-directive
"May be <code>null</code>\n         if the control has been uninstalled.\n",non-directive
" Set the image shown in this control decoration. ",non-directive
"Update the rendered\n decoration.\n \n",non-directive
"@param text\n            the text to be shown as a description for the decoration, or\n            <code>null</code> if none has been set.\n",non-directive
" Set the boolean that controls whether the decoration is shown only when\n the control has focus. ",non-directive
"The default value of this setting is\n <code>false</code>.\n \n",non-directive
"@param showOnlyOnFocus\n            <code>true</code> if the decoration should only be shown\n            when the control has focus, and <code>false</code> if it\n            should always be shown. ",non-directive
"Note that if the control is not\n            capable of receiving focus (<code>SWT.NO_FOCUS</code>),\n            then the decoration will never show when this value is\n            <code>true</code>.\n",directive
" Set the margin width in pixels that should be used between the decorator\n and the horizontal edge of the control. ",non-directive
"The default value of this setting\n is <code>0</code>.\n \n",non-directive
"@param marginWidth\n            the number of pixels that should be reserved between the\n            horizontal edge of the control and the adjacent edge of the\n            decoration.\n",non-directive
" Return the rectangle in which the decoration should be rendered, in\n coordinates relative to the specified control. ",non-directive
"If the specified control\n is null, return the rectangle in display coordinates.\n \n",non-directive
"@param targetControl\n            the control whose coordinates should be used\n ",non-directive
"@return the rectangle in which the decoration should be rendered\n",non-directive
" Construct a ControlDecoration for decorating the specified control at the\n specified position relative to the control. ",non-directive
"Render the decoration only on\n the specified Composite or its children. ",non-directive
"The decoration will be clipped\n if it does not appear within the visible bounds of the composite or its\n child composites.\n ",non-directive
"<p>\n SWT constants are used to specify the position of the decoration relative\n to the control. ",non-directive
"The position should include style bits describing both\n the vertical and horizontal orientation. ",non-directive
"<code>SWT.LEFT</code> and\n <code>SWT.RIGHT</code> describe the horizontal placement of the\n decoration relative to the control, and the constants\n <code>SWT.TOP</code>, <code>SWT.CENTER</code>, and\n <code>SWT.BOTTOM</code> describe the vertical alignment of the\n decoration relative to the control. ",non-directive
"Decorations always appear on either\n the left or right side of the control, never above or below it. ",directive
"For\n example, a decoration appearing on the left side of the field, at the\n top, is specified as SWT.LEFT | SWT.TOP. ",non-directive
"If no position style bits are\n specified, the control decoration will be positioned to the left and\n center of the control (<code>SWT.LEFT | SWT.CENTER</code>).\n ",non-directive
"</p>\n \n ",non-directive
"@param control\n            the control to be decorated\n ",non-directive
"@param position\n            bit-wise or of position constants (<code>SWT.TOP</code>,\n            <code>SWT.BOTTOM</code>, <code>SWT.LEFT</code>,\n            <code>SWT.RIGHT</code>, and <code>SWT.CENTER</code>).\n ",non-directive
"@param composite\n            The SWT composite within which the decoration should be\n            rendered. ",non-directive
"The decoration will be clipped to this composite,\n            but it may be rendered on a child of the composite. ",directive
"The\n            decoration will not be visible if the specified composite or\n            its child composites are not visible in the space relative to\n            the control, where the decoration is to be rendered. ",non-directive
"If this\n            value is <code>null</code>, then the decoration will be\n            rendered on whichever composite (or composites) are located in\n            the specified position.\n",non-directive
" Adds an image decoration to the field.\n \n",non-directive
"@param decoration\n            A FieldDecoration describing the image and description for the\n            decoration\n \n ",non-directive
"@param position\n            The SWT constant indicating the position of the decoration\n            relative to the field's control. ",non-directive
"The position should include\n            style bits describing both the vertical and horizontal\n            orientation. ",non-directive
"<code>SWT.LEFT</code> and\n            <code>SWT.RIGHT</code> describe the horizontal placement of\n            the decoration relative to the field, and the constants\n            <code>SWT.TOP</code> and <code>SWT.BOTTOM</code> describe\n            the vertical alignment of the decoration relative to the\n            field. ",non-directive
"Decorations always appear on either horizontal side of\n            the field, never above or below it. ",directive
"For example, a decoration\n            appearing on the left side of the field, at the top, is\n            specified as SWT.LEFT | SWT.TOP. ",non-directive
"If an image decoration\n            already exists in the specified position, it will be replaced\n            by the one specified.\n ",non-directive
"@param showOnFocus\n            <code>true</code> if the decoration should only be shown\n            when the associated control has focus, <code>false</code> if\n            it should always be shown.\n \n",non-directive
" Show the specified text using the same hover dialog as is used to show\n decorator descriptions. ",non-directive
"Normally, a decoration's description text will be\n shown in an info hover over the field's control whenever the mouse hovers\n over the decoration. ",non-directive
"This method can be used to show a decoration's\n description text at other times (such as when the control receives\n focus), or to show other text associated with the field.\n \n",non-directive
" <p>\n If there is currently a hover visible, the hover's text will be replaced\n with the specified text.\n \n",non-directive
"@param text\n            the text to be shown in the info hover, or <code>null</code>\n            if no text should be shown.\n",non-directive
" Set a boolean that indicates whether the receiver should use the\n decoration registry's maximum decoration width when allocating space for\n decorations. ",non-directive
"The default value is <code>true</code>. ",non-directive
"Using the maximum\n decoration width is useful so that decorated fields on the same dialog\n that have different decoration widths will all align. ",directive
"This also allows\n client dialogs to align non-decorated fields with decorated fields by\n consulting the maximum decoration width.\n ",non-directive
"</p>\n <p>\n Clients may wish to set this value to <code>false</code> in cases where\n space usage is more important than alignment of fields. ",directive
"This value must\n be set before the decorations are added in order to ensure proper\n alignment.\n ",directive
"</p>\n \n ",non-directive
"@param useMaximumWidth\n            <code>true</code> if the maximum decoration width should be\n            used as the size for all decorations, <code>false</code> if\n            only the decoration size should be used.\n \n",non-directive
"@see FieldDecorationRegistry#getMaximumDecorationWidth()\n",non-directive
" Construct a decorated field which is parented by the specified composite\n and has the given style bits. ",non-directive
"Use the controlCreator to create the\n specific kind of control that is decorated inside the field.\n \n",non-directive
"@param parent\n            the parent of the decorated field.\n ",non-directive
"@param style\n            the desired style bits for the field.\n ",directive
"@param controlCreator\n            the IControlCreator used to specify the specific kind of\n            control that is to be decorated.\n \n",non-directive
"@see IControlCreator\n",non-directive
" Construct an AutoComplete field on the specified control, whose\n completions are characterized by the specified array of Strings.\n \n",non-directive
"@param control\n            the control for which autocomplete is desired. ",non-directive
"May not be\n            <code>null</code>.\n ",non-directive
"@param controlContentAdapter\n            the <code>IControlContentAdapter</code> used to obtain and\n            update the control's contents. ",non-directive
"May not be <code>null</code>.\n ",non-directive
"@param proposals\n            the array of Strings representing valid content proposals for\n            the field.\n",non-directive
" Set the contents of the specified control to the specified text. ",non-directive
"Must not\n be <code>null</code>.\n \n",non-directive
"@param control\n            the control whose contents are to be set (replaced).\n ",non-directive
"@param contents\n            the String specifying the new control content.\n ",non-directive
"@param cursorPosition\n            the zero-based index representing the desired cursor position\n            in the control's contents after the contents are set.\n",directive
" Get the text contents of the control.\n \n",non-directive
"@param control\n            the control whose contents are to be retrieved.\n ",non-directive
"@return the String contents of the control.\n",non-directive
" Registers a field decoration using the specified id. ",non-directive
"The lifecyle of the\n supplied image should be managed by the client. ",directive
"That is, it will never be\n disposed by this registry and the decoration should be removed from the\n registry if the image is ever disposed elsewhere.\n \n",directive
"@param id\n            the String id used to identify and access the decoration.\n ",non-directive
"@param description\n            the String description to be used in the decoration, or\n            <code>null</code> if the decoration has no description.\n ",non-directive
"@param image\n            the image to be used in the decoration\n",non-directive
" Set the label provider that is used to show proposals. ",non-directive
"The lifecycle of\n the specified label provider is not managed by this adapter. ",non-directive
"Clients must\n dispose the label provider when it is no longer needed.\n \n",directive
"@param labelProvider\n            the (@link ILabelProvider} used to show proposals.\n",non-directive
" Set the integer style that indicates how an accepted proposal affects the\n control's content.\n \n",non-directive
"@param acceptance\n            a constant indicating how an accepted proposal should affect\n            the control's content. ",non-directive
"Should be one of\n            <code>PROPOSAL_INSERT</code>, <code>PROPOSAL_REPLACE</code>,\n            or <code>PROPOSAL_IGNORE</code>\n",non-directive
" Add the specified listener to the list of content proposal listeners that\n are notified when content proposals are chosen.\n ",non-directive
"</p>\n \n ",non-directive
"@param listener\n            the IContentProposalListener to be added as a listener. ",non-directive
"Must\n            not be <code>null</code>. ",non-directive
"If an attempt is made to register\n            an instance which is already registered with this instance,\n            this method has no effect.\n \n",directive
"@see org.eclipse.jface.fieldassist.IContentProposalListener\n",non-directive
" Remove the specified listener from the list of content proposal listeners\n that are notified when a content proposal popup is opened or closed.\n ",non-directive
"</p>\n \n ",non-directive
"@param listener\n            the IContentProposalListener2 to be removed as a listener.\n            ",non-directive
"Must not be <code>null</code>. ",non-directive
"If the listener has not\n            already been registered, this method has no effect.\n \n",directive
"@since 3.3\n ",non-directive
"@see org.eclipse.jface.fieldassist.IContentProposalListener2\n",non-directive
" Open the proposal popup and display the proposals provided by the\n proposal provider. ",non-directive
"This method returns immediately. ",non-directive
"That is, it does not\n wait for a proposal to be selected. ",non-directive
"This method is used by subclasses to\n explicitly invoke the opening of the popup. ",directive
"If there are no proposals to\n show, the popup will not open and a beep will be sounded.\n",non-directive
" Returns whether the content proposal popup has the focus. ",non-directive
"This includes\n both the primary popup and any secondary info popup that may have focus.\n \n",directive
"@return <code>true</code> if the proposal popup or its secondary info\n         popup has the focus\n ",non-directive
"@since 3.4\n",non-directive
" Return an array of Objects representing the valid content proposals for a\n field.\n \n",non-directive
"@param contents\n            the current contents of the text field\n ",non-directive
"@param position\n            the current position of the cursor in the contents\n \n ",non-directive
"@return the array of {@link IContentProposal} that represent valid\n         proposals for the field.\n",non-directive
